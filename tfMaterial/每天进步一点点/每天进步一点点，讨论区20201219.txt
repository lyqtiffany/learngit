C:\Users\Administrator\AppData\Local\Programs\Python\Python38\python.exe C:/Users/Administrator/PycharmProjects/pythonLearnFrist/seleniumChapter/ctask.py
序号0 的内容是: #每天进步一点点# 
感觉好像很久没上来发圈了
总结一下最近
在无法忍受robot framework 实在太大了，确实他是一个很好的自动化测试框架，情况下
1.复习了python
2.了解unittest(原本是在学习同事的接口测试框架
3.做实践發展unittest的html報告python3不友好
4.开始研究和详细阅读pytest和生成html报告或allure报告以及给jenkins 用的xml文件
5.落地
1.根据网上资料实现selenium 一场报告截图插入allure报告中
2.实现pytest执行完成后自动生成allure report(是html报告不是raw文件，实现原理基于pytest 自带的hook）
6.学习怎么用python编写这个企业微信通知的群机器人（本质是个request请求）
7.实现参数化构建触发企业微信机器人
8.升级古董Jenkins (大概差了200个版本，因为插件不兼容
9.实现在Jenkins 构建自动化测试后自动触发企业微信通知执行结果

未来目标（预计本周或下周完成）
1.加入一个定时任务（因为我们公司构建自动化和构建环境部署包不是一个Jenkins 而且因为部署包和git打包不是同一个所以目前想的是单独监控触发，可以执行对应系统的自动化测试）
实现测试环境构建，自动触发执行，企业微信出报告后@打包人和@构建人

 
序号1 的内容是: 对我来说是新词：WebView#每天进步一点点# 
微信读书《移动APP测试的22条军规》

摘：当App中使用了WebView，测试人员可以快速地刷新当前页面或者在使用WebView的页面间进行切换，来验证App是否有性能问题甚至发生崩溃。因为WebView里一般来说需要调用不止一个线程，所以在一个WebView没有读取完成时切换到另一个WebView的读取，有可能导致WebView的持续加载，从而使App出现性能问题甚至崩溃。

APP测试也要测试webview？
记录一下。

备注：Google搜索webview
原文：

 
序号2 的内容是: 最近在学习使用python语言进行接口测试，初阶段实现了在代码层面手动搬砖写服务端和app端的测试用例代码、生成测试报告，接下来一个阶段就是不同接口的场景组合测试、在Jenkins环境下让测试代码自动跑起来。
  从一开始理解组内小伙伴搭建的测试框架基础，再到结合接口的文档用postman工具进行接口的请求、如何使用该工具等等，然后模仿实现其他接口的测试代码编写
#每天进步一点点#

 
序号3 的内容是: #每天进步一点点# 最近在调整自己做项目的一些方式，期望是可以提高自身的效率，同时减少中断。分享出来，同意的欢迎点赞，也期望大家能分享更优的方法。具体做法如下：
1.需求疑问点：使用在线文档进行记录，梳理完之后，再发给产品/交互/开发进行二次确认
优化点：
1)整理完之后再统一确认，减少一个一个确认，导致各方被中断的次数；
2)有文档记录，后续查找也有相应的记录
2.测试执行过程中：使用在线文档记录前端展示的一些小问题，比如文案显示有误/图片有问题等，只要不涉及影响流程的都统一记录，当天快下班的时候再找开发统一修复。修复完之后，在对照文档一条条检查
优化点：
1)减少开发被中断的次数
2)一些问题也都有记录，避免通过聊天记录发送容易漏
Ps.影响到流程的bug还需第一时间找开发解决

 
序号4 的内容是: #每天进步一点点# 
1.最近组内讲解一些知识点，把所有的jmeter打卡，自己梳理一份文档，刚到第14天，同时在看打卡排在前面且赞对多，他们一些笔记。
2.复习linux与MySQL，第三轮巩固下。

 
序号5 的内容是: #每天进步一点点# 第二本书开始捡起，书中说弄懂Linux操作系统，需完成6部曲。目前能力的还在一阶段停留着
，只能多花花时间，尽量搞懂书中的知识。今天看完后了解到操作系统内一些名词到底代表什么意思，比如程序，进程，系统调用等
趣谈Linux操作系统(1)—运行QQ来看操作系统 - 简书

 
序号6 的内容是: #面试# #经验分享# #每天进步一点点# 
周一面试，初始为笔试，把题和答案放上来，一起讨论。
笔试题：

【1】给定字符串str，去掉重复字符，输出。

当时想复杂了，搜索答案如下：

str_in = "Hello World."
a = ""
for item in str_in:
 if item not in a:
  a+= item

print(a)


延伸：是否有现成的 去重函数 可用？


【2】老虎过河：三对老虎父子 Aa、Bb、Cc，一只小船。
小船每次最多容纳2只老虎，任意一只小老虎不在父亲身边都会被其他打老虎吃掉。
计算几次能使所有老虎过河。

空白，大家考虑下。


【3】给定一个数组，输出可能的情况。
如输入[2, 2]，输出(0,0),(0,1),(1,0),(1,1)。
（过程复杂，第3步即最终答案）

思路：

[第1步：for循环嵌套]
a = [2, 2]
for i in range(a[0]):
 for j in range(a[1]):
  print((i, j))

[第2步：转换为推导式]
# 输入[2, 2] 应该执行的推导式
# [(item_0, item_1) for item_0 in range(a[0]) for item_1 in range(a[1])

[第3步（即答案）：抽象为代码]（拼凑推导式代码，不限制输入列表元素个数）
a = [2, 2]
# 元组元素变量名称
items = ""
# 所有元素的for循环
fors = ""

# 拼凑推导式语句str
for i in range(len(a)):
    fors += " for item_" + str(i) + " in range(a[" + str(i) + "]) "
    if i == 0:
        items += "[(" + "item_" + str(i) + ", "
    elif i < len(a) -1:
        items += "item_" + str(i) + ", "
    elif i == len(a) -1:
        items += "item_" + str(i) + ")"
        fors += "]"

# eval()函数去掉字符串双引号，执行语句
results = eval((items + fors))
# 输出结果
for result in results:
    print(result)


延伸：是否有可直接实现此功能的python模块？？？


【4】读取CSV文件。txt文件，以英文逗号“,”分隔，

没写，后续补，大家可以补充。

【5】tail：程序实现，输出文件最后n行数据

# 读取文件：打开文件作为变量 f（使用后自动关闭）
with open("text.txt") as f:
    # 按行读取文件内容，存储为列表
    txt=f.readlines()

# 行号：列表推导式，生成行序号列表
keys=[k for k in range(0,len(txt))]

# 行号+行内容：读取的txt回文倒序，和序号一一对应存入字典
result={k:v for k,v in zip(keys,txt[::-1])}

# 输出结果：字典中的前10行，即为文件的后10行
for i in range(10):
    print result[i]

【6】三表联查：课程表、学生表、成绩表。查询学生课程成绩。
课程表：
 ------------------
|course_id| course |
 ------------------
|     1     |   语文   |
 ------------------
|     2     |   数学   |
 ------------------
|     3     |   英语   |
 ------------------
学生表：
 ---------------
|stu_id|stu_name|
 ---------------
|   1    |   张三  |
 ---------------
|   2    |   李四  |
 ---------------
|   3    |   王五  |
 ---------------
|   4    |   小明  |
 ---------------
|   5    |   小红  |
 ---------------
|   6    |   小刚  |
 ---------------

成绩表：
 -------------------------------
|  id | stu_id |course_id| grade|
 -------------------------------
|   1   |    1     |     1     |     87   |
 -------------------------------
|   2   |    5     |     3     |     60   |
 -------------------------------
|   3   |    4     |     2     |   91.5   |
 -------------------------------
|   4   |    6     |     2     |     93   |
 -------------------------------
|   5   |    3     |     1     |     72   |
 -------------------------------
|   6   |    2     |     3     |     65   |
 -------------------------------


答案：

方法1：普通三表查询

select c.id, c.stu_id, b.stu_name, c.course_id, a.course, c.grade from 课程表 a, 学生表 b, 成绩表 c where a.course_id = c.course_id and 

b.stu_id = c.stu_id


方法2：学生表和课程表全连接（笛卡尔积）作为临时表a，与成绩表进行右连接

SELECT a.*, grade.grade from (SELECT * from student FULL JOIN course) as a RIGHT JOIN grade ON grade.course_id = a.course_id and 

grade.stu_id = a.stu_id
/* 注意：
1、按照多个字段排序，优先级按照语句 字段顺序；
2、每个字段默认升序（acs），每个字段后可用desc降序，只对此“desc”前的字段有效
*/
ORDER BY a.course_id DESC, a.stu_id

 
( 各种连接  )


【7】每日营业额表：id（自增）、日期（格式：yyyy-MM-dd）、营业额。sql语句查询营业额比前一天高的数据。
表：
id date      grade
1 2020-06-26 45
2 2020-06-27 213
3 2020-06-28 453
4 2020-07-01 37

答案：

SELECT a.id, a.grade from idoxu a,idoxu b 
WHERE a.date = b.date + 1 and a.grade-b.grade >0

（将表起2个别名 a、b，作为2个表进行运算）


【8】输出9*9乘法表

# 行循环：1-9
for i in range(1, 10):
    # 第i行所有公式。2种输出方法
    for j in range(1, i + 1):
        # 方法1：每个乘法，拼成一个字符串输出。
        item = str(j) + " * " + str(i) + " = " + str(j * i)   
        # print()默认结尾换行，参数end控制结尾字符。如下，为了整齐，每个公式以“ 2空格+1tab ”结尾。
        print(item, end="  \t")

        # 方法2：每个乘法，由变量和str符号拼成，各自输出，不转换类型。英文逗号分隔“ , ”
        # print(j, "*", i, "=", j * i, end="  \t")    
        
    # 第i行循环完，换行
    print()

 
序号7 的内容是: #每天进步一点点# 把在公司平台上写的接口用例，自己慢慢变成python代码输出（也是巩固和复习python代码的过程），等完成了这部分内容后，再结合pytest框架定制化一些自己想要的效果。下半年的目标有了，待一步步实现

 
序号8 的内容是: #碎碎念# #每天进步一点点# #经验分享# 

心情烦躁时，做点事情学习学习，马上安静，心旷神怡。

无数次亲测有效。

 
序号9 的内容是: #每天进步一点点# #经验分享# 分享刚遇到解决的一个问题：
现象：redis集群各节点登录成功，但是key无法加载打开，客户端登录节点都是主节点，没有从。（三台服务器三主三从，6节点）
尝试：
#1 查看6个节点的配置文件和启动日志，没有看出问题；
#2 netstat查看端口，查看进程，没有看出问题；
#2 各节点重启，还是一样；
#3 一些节点启动有些警告信息，根据警告信息修复后启动不再警告；
#4 使用redis-trib.rb重新创建集群，成功解决；
原因：上周另个测试删掉了一台服务器上的redis，然后只是从其他服务器拷贝来，改了配置文件而已，而集群的配置文件还是没有产生的。

 
序号10 的内容是: #碎碎念# #每天进步一点点# 

睡前突然想到：几年前，就算是年后的我都不会想到，短短两三个月后，我从对测试的恐慌感和无力感，变成现在的入门后迷上了。

常常说机遇说努力，有点像：学而不思则罔，思而不学则殆。

有机遇不努力、努力而没有方向或方向错误，都是事倍功半。

互联网偶遇老徐，虽然犹豫错过了去年百人计划，不过在这一年多时间里，学到了很多。

我们常常说浮躁，跟着大佬，和一群分享、上进的人，自然会使人变得严肃认真。

我们常常说如何变得优秀，如何让自己突出？对当前的环境认可，自然就会认真做事，认真做事一天天积累起来，就变成了我们的闪光点，也就不知不觉脱颖而出了。

外界环境促进自己的努力，努力后环境越来越好。良性循环。

老徐真是个厉害的leader，灰常带动人呐
大家，加油吧！

 
序号11 的内容是: #每天进步一点点# Jenkins打卡后的一些总结，今天写了一部分，还留有一些问题，待找到答案后进行补充。写完文章，对CI有了更深的认知，也清楚了Jenkins的CI中的作用。后面还需补充在CD过程中Jenkins又发挥了什么作用。文章欢迎大家多多指正不足之处[社会社会][社会社会][社会社会]

jenkins—21天打卡相关总结 - 简书

 
序号12 的内容是: #经验分享# #每天进步一点点#
跟着jenkins打卡实践主要碰到的问题：jenkins没法构建发布到远程服务器
#1 Maven读取的配置文件settings.xml没有改成对应company的私服
#2 Send build artifacts over SSH这里源文件路径一直没配对
现在已经可以成功拉取代码编译打包发布到远程服务器了。

另简略写了下整个步骤：
jenkins部署构建发布到测试服务器 - 行走的阿舒 - 博客园

 
序号13 的内容是: #经验分享# #每天进步一点点# 

当试了6种方法，jmeter的response body返回结果还是乱码，我试了第7种方法搞定。

 
序号14 的内容是: 最近公司正好需要用Jmeter进行接口和性能测试，下午有时间尝试了下登录将token设置为全局变量，以此记录~
PS：感觉还挺有成就感的
Jmeter获取token作为全局变量 - 简书
#Jmeter# #每天进步一点点#

 
序号15 的内容是: #每天进步一点点# 
昨天線上反饋麥上天使頭像框不見了，經過排查出現的都是擁有活動頭像框的用戶。活動頭像框是最好優先級，但是麥上只顯示天使頭像框，所以有活動頭像框＋天使頭像框，應顯示天使頭像框
總結:雖然產品需求未提及，測試需要考慮到這種場景

 
序号16 的内容是: #每天进步一点点# 上周写的关于git的一些理解，本周进行了一些完善，一些待补充的地方也补充完成了，而且也加深了对git的了解。现在算是对git的一些基本用法有比较清晰的认识，不再是一开始打卡的茫茫然。下周要写Jenkins，持续保持文章输出。欢迎大家指正文章中的不足之处[社会社会][社会社会][社会社会]

Git—21天打卡后相关总结 - 小盼盼_1 - 简书

 
序号17 的内容是: #碎碎念# #每天进步一点点# 上一个项目基本结束了，周五开始接触了个新项目，也是安全方面的，不过只是对两个模块的实现逻辑进行了优化，接触了两个安全方面的新词，记录一下。
1.挂马
所谓的挂马，就是黑客通过各种手段，包括SQL注入，网站敏感文件扫描，服务器漏洞，网站程序0day, 等各种方法获得网站管理员账号，然后登陆网站后台，通过数据库“备份/恢复”或者上传漏洞获得一个webshell。利用获得的webshell修改网站页面的内容，向页面中加入恶意转向代码。也可以直接通过弱口令获得服务器或者网站FTP，然后直接对网站页面直接进行修改。当你访问被加入恶意代码的页面时，你就会自动的访问被转向的地址或者下载木马病毒。
以上是百度百科的解释，简单来说就是黑客把木马挂在网站上，用户访问网站时在不知情的情况下就下载了木马病毒；
2.暗链
其实“暗链”就是看不见的网站链接，“暗链”在网站中的链接做得非常隐蔽，短时间内不易被搜索引擎察觉。它和友情链接有相似之处，可以有效地提高PR值。但要注意一点PR值是对单独页面，而不是整个网站。
说明：PR值全称为PageRank，用来表现网页等级的一个标准，级别分别是0到10，是Google用于评测一个网页“重要性”的一种方法。
以上是百度百科的解释，黑客通过在网站上植入暗链，使网站在在百度搜索时排名靠前，侧面提高网站的访问量；
下面简单说说公司的实现逻辑吧。
首先在初始检测a网站时，会默认该网站内容是安全的，通过Python爬虫将此时的html内容获取下来以json格式存储作为该网站的蓝本；
若后续网站html内容发生变化，则与蓝本进行比较，若新html增加了a、meta、script、iframe、img等标签则通过系统进行告警；其中根据标签中的url是否备案、是否是国外IP的url、元素是否可见等因素判定其危险等级（高、中、低）；其中元素不可见且非script为暗链告警，其他的是挂马告警；
具体逻辑还是挺复杂的，不好直接把检测流程图贴出来；

 
序号18 的内容是: #每天进步一点点# 整理了下刚结束git21天打卡自己的一些收获，还有部分内容待自己吸收理解后再完善，欢迎大家指出文章的不足之处[社会社会][社会社会][社会社会]

Git—21天打卡后相关总结 - 小盼盼_1 - 简书

 
序号19 的内容是: #每天进步一点点# 看了书能理解我司的一些实现方式存在的原因。比如最近做的业务改造，为什么需要加入限频，果然还是要多读书，看完之后能更加深这些业务的理解。文章中有写错的的地方，欢迎大家指正[社会社会][社会社会][社会社会][社会社会]

图解http协议(4)—常见的几类攻击手段 - 小盼盼_1 - 简书

 
序号20 的内容是: 上周小组分享测试工具和公司玩法的时候了解到了xmind2testcase,今天进行了尝试，以此记录；
xmind2testcase初步试验 - 简书

个人感觉：
禅道导入不是很方便，需要对导出后的cvs文件进行修改，不过xmind写用例确实方便很多，值得尝试#每天进步一点点#

 
序号21 的内容是: #每天进步一点点# 
每天学习一个mysql功能
[加油]
[加油]

mysql--创建新用户和授权的方法 - 简书

 
序号22 的内容是: #百人计划# #每天进步一点点# 
最近从0开始学习了jmeter工具的使用，目前可以使用jmeter实现接口的基本功能测试，为将来的面试又储备了一点点技能。保持持续学习、一步一步进阶。
相关学习在简书输出四篇文章，如果有想学习jmeter的小伙伴，欢迎来我的简书一起学习、交流。
Jmeter接口测试01-GET和POST请求 - 简书
Jmeter接口测试02-参数化 - 简书
Jmeter接口测试03-提取依赖值 - 简书

 
序号23 的内容是: #百人计划# #经验分享# #每天进步一点点# 
由工具使用想开去

实践多了自然渐渐找到适合自己的方法。之前一直执迷用遍所有工具，另外xmind清晰就总想什么都往里写。

实际上，工具是为人为任务服务的，大同小异，核心目的是方便快捷、适合自己。

弯路不会白走，练脚力。
错误不会白犯，练脑力。

 
序号24 的内容是: #每天进步一点点# 接口测试目前编写过程中遇到的一些问题的汇总，已完成文章输出，不知不觉已经写了9篇文章，算是达到了每周输出一篇文章的基本目标。喜欢上这种总结的方式，以前有些问题当时遇到，百度解决完后就忘了。后续再遇到问题又是从头开始百度，而且也没形成自己的输出，写成文章可以进一步加强自己对知识点的理解。欢迎大家帮忙指导文章中的不足之处[社会社会][社会社会]

接口测试的相关总结—持续更新 - 小盼盼_1 - 简书

 
序号25 的内容是: #百人计划# #测试资料# #每天进步一点点# 
极客时间，性能测试工具列表。

 
序号26 的内容是: 说说今天在工作在学习的新东西和问题吧：
1.了解 /etc/pam.d/system-auth 文件
 主要了解了密码复杂度的设置
 在 password required 后面进行设置；
 minlen = N：密码的最小长度；
 dcredit = N：当 N>0时表示密码中数字出现的最多次数；当 N<0 时表示密码中数字出现的最少次数；
 ucredit = N：当 N>0 时表示密码中大写字母出现的最多次数；当 N<0时表示密码中大写字母出现的最少次数；
 lcredit = N：当 N>0 时表示密码中小写字母出现的最多次数，当 N<0 时表示密码中小写字母出现的最少次数；
 ocredit = N ：当 N>0 时表示密码中特殊字符出现的最多次数，当 N<0 时表示密码中特殊字符出现的最少次数；
 详情：

2.用Navicat执行命令时报错 can't create/write to file '/tmp@sql_1aaf3_0.MYI'(Errcode:13 - Permission denied)
具体如下：
  （1）.用navicat连接Mysql操作时一直提示“can't create/write to file '/tmp@sql_1aaf3_0.MYI'(Errcode:13 - Permission denied)”，但链接其他数据库能正常操作；
  （2）.登录服务器用 mysql -u root -p登录时提示
  ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/tmp/mysql.sock'
  在网上查了下，很多人说是没有权限，执行 chmod 777 /tmp就可以了，尝试了下没有用；
  后来发现/tmp目录下没有mysql.sock文件；
  （3）.解决方法
  全局查的文件 mysql.sock，命令：find / -name mysql.sock; 
  发现在 /var/lib/mysql/ 目录下有该文件；
  建立软链接：ln -s /var/lib/mysql/mysql.sock /tmp/mysql.sock
  再次登录时正常，navicat 也可以正常执行命令
 详情：
 

 
序号27 的内容是: #每天进步一点点# 还有最后一次输出，这本书吸收的就差不多了
，可以去继续看前面躺灰的书了。Ps：看了这个书，知道了我司为什么登录注册前需要拉一次盐，原来是为了减少密码被攻破的可能性
，继续欢迎大家指正书中的不足之处[社会社会][社会社会][社会社会]

图解http协议(3)—cookie、session - 小盼盼_1 - 简书

 
序号28 的内容是: #每天进步一点点# 实践了一把本地在GitHub上通过clone with ssh上clown代码，记录了哈自己的操作步骤，有需要的可以看看，有错误之处欢迎大家指正[社会社会][社会社会][社会社会][社会社会]

GitHub_clone with ssh下载代码 - 小盼盼_1 - 简书

 
序号29 的内容是: #每天进步一点点# 图解http协议第二篇来了，欢迎大家指正错误之处[社会社会][社会社会][社会社会]

图解http协议(2)—https协议 - 小盼盼_1 - 简书

 
序号30 的内容是: #每天进步一点点# 
练习函数的创建和使用
以及位置参数，关键字参数，返回值如何使用

 
序号31 的内容是: #每天进步一点点# 
字典和列表 相互的嵌套和遍历

 
序号32 的内容是: #百人计划# #碎碎念# #每天进步一点点# 
立flag：

1、测开路线，多了解、掌握、提升技能；

2、学习的意义在于掌握工具、技能、语言，多实践，输出是为了总结梳理，而非为了输出而输出。

 
序号33 的内容是: #每天进步一点点#
If-elif结构的用法
字典的创建 使用 和遍历

 
序号34 的内容是: #百人计划# 
#碎碎念# 
#每天进步一点点# 
有一个致命的性格问题：总是希望不遗漏任何东西，又想自己整出一个清晰的脉络。想不清楚就下不去手

2个互斥的需求，就导致：一事无成。西瓜芝麻全丢了。

所以近期需要着重实践：断-舍-离！

就像Python的宗旨，简单胜于复杂。

 
序号35 的内容是: #每天进步一点点# 
慢慢培养自己输出文章的习惯，完成上周需完成的作业，输出读书笔记。看完一本书，提炼一些重要的知识点，再使用自己的语言对这些知识点一一进行文章输出，形成自己的输出。同样也可以进一步加深对知识点的理解。欢迎大家指错[社会社会][社会社会][社会社会]

图解HTTP协议(1)——TCP/IP - 小盼盼_1 - 简书

 
序号36 的内容是: #每天进步一点点# 
mysql打卡一期结束了，整体学习下来还是挺有感触的，之前只停留在看得懂阶段，虽然大学学过关系数据库，但是也是缺少练习。这次的打卡整体来说意义很大，既熟练了数据库知识又利用了碎片化时间完成打卡，更充实了。二期的打卡继续努力。
下面是我的个人打卡笔记，自测有效
1、创建数据库
create database 数据库名称;
2、创建表
create table istester(
id int(10) not null unique primary key auto_increment,
name varchar(20) not null,
address varchar(50)
);
3、复制表
create table istester2 like istester；
create table idoxu2 as select * from idoxu where 2=1;
复制表中部分结构：只复制idoxu 表中id,stu_id,istester字段
create table idoxu3 as select id,stu_id,istester from idoxu where 1<>1;

4、查询表
查询idoxu表中c_name包含i的数据
1）select * from idoxu where c_name like '%i%';
查询istester表，id包含1的数据
2）select * from istester where id like '%1%';
查询isTester表，id包含1的数据，id降序排列
3）select * from istester where id like '%1%' order by id desc;
查询istester表，id包含1的数据，取id最大的三个
4）select * from istester where id like '%1%' order by id desc limit 3;
查询idoxu表，取成绩最高的用户的信息
5）select * from idoxu order by grade desc limit 1; --- 方法一
---方法2
select c_name,grade as "maxvalue" from idoxu
where grade in(select max(grade) from idoxu);

查询idoxu表，输出成绩最低用户信息
6）select * from idoxu order by grade asc limit 1; --- 方法1
---方法2
select c_name,grade as "minvalue" from idoxu
where grade in (select min(grade) from idoxu);

查询istester表，按ID降序排序
7)select * from istester order by id desc;

查询idoxu表，按grade升序
8)select * from idoxu order by grade;

查询istester表，有多少行数据
select count(sex) from istester;

查询istester表，有性别类型数量（sex字段、去重）
select count(distinct sex) from istester;

9）查找idoxu表，成绩在80~100区间的学生
select * from istester where grade>=80 and grade<=100;
select * from istester where grade between 80 and 100;
10）查找istester表，id为2，11，12的数据
select * from istester where id in(2,11,12);
11)排名前3的学生和分数
Select c_name,grade from idoxu order by grade desc limit 3;
12)排名3~6名的学生和分数
select c_name grade from idoxu order by desc limit 2,4;
13)排名6名以后的所有学生和分数
select c_name,grade from idoxu order by desc limit 5,666;

5.更新表
update istester set sex=1 where sex is null;

6、插入表
将istester的数据插入到idoxu表中
id对id，stu_id对id，c_name对uname，istester和grade默认设置为60
insert into idoxu(id,stu_id,c_name,isTester,grade)
select id,id,uname,60,60
from istester;

7、修改表
1）修改表名
alter table  旧表名 rename to 新表
2）增加一个字段
alter table istester add istester varchar(10);
3)修改istester表中的istester字段名称为isotester6
alter table istester change column istester istester6 varchar(10);
或
alter table istester change istester istester6 varchar(10);

8、多表查询
左连接
select * from idoxu6 idoxu left join istester is1 on ido.id=is1.id;

右连接
select * from idoxu6 ido right join istester is1 on ido.id=is1.id;
内连接
select * from idoxu6 ido inner join isteter is1 on ido.id=is1.id;

全连接（mysql无全连接，可以用union来实现全连接效果）
select * from idoxu6 ido left join istester is1 on ido.id=is1.id
union
select * from idoxu6 ido right join istester is1 on ido.id=is1.id;

修改表名idoxu6为idoxu
alter table idoxu6 rename to idoxu;

删除数据库istesterdb6
drop database istesterdb6;

删除表istester
drop table istester;

删除idoxu表的数据
delete from idoxu;

 
序号37 的内容是: #百人计划# #每天进步一点点# 不知不觉第一期sql已经完美收官。学习真是一件日积月累的事情，这周末争取把这个思维导图整理出来分享给大家

 
序号38 的内容是: #每天进步一点点# 
在牛客网看到一道题：查找最晚入职员工的所有信息。
employees（emp_no ，birth_date，first_name ，last_name ，gender ，hire_date）

我当时的思路是，选取日期的最后一个：
SELECT * FROM employees WHERE ORDER BY hire_date DESC LIMIT 1;
提交后失败；

思考为啥会失败：
最晚日期可能会同时导入多个员工，LIMIT 1就不适用了。

修改成：
SELECT * FROM employees WHERE hire_date (SELECT MAX(hire_date) FROM employees);

通过了。

 
序号39 的内容是:  #21天SQL# #百人计划# #每天进步一点点# 本想整理完所有，放个大招~~但是最近实在是太忙，怕自己坚持不下去，赶紧来冒个泡，刷下存在感~
1、mysql基础总结：mysql基础 - 简书
2、基于SQL打卡第3天0330作业（根据已有的表istester 和 idoxu 创建新表（复制表））的思考：
   创建表的多种方式 创建表的多种方式 - 简书
   数据库备份与恢复：数据库备份恢复 - 简书
3、基于SQL打卡第7天0403作业（数据插入id=11,uname = idoxu3,sex=1
id=12,uname = idoxu4,sex=2）的思考：怎么插入一百条此类相似数据，本来想用 SQL函数解决，感觉有点麻烦，最后用python一个循环搞定
4、基于SQL打卡第16天0412作业（造数据 ，把istester表的所有数据，插入到 idoxu表）唯一索引或主键冲突问题的学习总结：

 
序号40 的内容是: #每天进步一点点# 
今天写连接查询出错了，逻辑没错，后来发现使用了关键字「is」：You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'is
left join idoxu6 ido
on is.id=ido.id' at line 1
尽量避免使用关键字
今日的作业参考
1、
select * form idoxu6 ido
left join istester is1
on ido.id=is1.id;
2、
select * from idoxu6 ido
right join istester is1
on ido.id=is1.id;
3、
select * from istester is1
inner join idoxu6 ido
on is1.id=ido.id;

 
序号41 的内容是: #每天进步一点点# 
今天在回顾mysql21天打卡内容的时候，看到更新表里某个字段值的时候，突然不知道该用update还是alter了，脑子里一下分不清两者的区别了，于是找资料学习了下，现在算是搞清楚了。分享如下：
MySQL语句中涉及到修改的命令有alter、update，但是两者之间具体有什么区别，分别使用在什么场景呢？

alter：用来修改表的数据结构（包括表名和字段名以及字段的增、删、改）
例如：
修改表名：> alter table istester rename to idoxu;
----把表名由istester改成idoxu，其中to可带可不带

修改字段名：> alter table istester change c_name u_name varchar(50);
----把字段名由c_name改成u_name，如果字段属性不变，change  源字段名  目标字段名   即可。

增加字段：> alter table idoxu6 add sex int not null default 1;
----往表idoxu6中新增一个性别字段sex，需要至少指定一个字段属性，不指定属性添加不成功

删除字段：> alter table istester drop column hobby;
----删除表istester中的hobby字段，其中column可带可不带

修改字段类型：> alter table idoxu6 modify c_name varchar(20) not null default 'my';
或者> alter table idoxu6 change c_name c_name varchar(20) not null default 'my';
----修改表idoxu6中字段c_name的属性为字符型，长度20，非空，默认值是my
----使用change的话需要写两次字段名，即：change  源字段名  源字段名

update：用来修改表中字段的值
例如：
字段name原来的值是张三，现在要改成李四：
> update idoxu set name='李四' where name='张三'；
----如果没有where条件，会把表中所有name都改成“李四”

删除字段name的值：
> update idoxu set name=null where name='张三';

另外还可能涉及到性能、查询效率等问题，这里就不深入了，先掌握基础的应用。

 
序号42 的内容是: #每天进步一点点# 
今天做sql打卡有一题在数据库istester6，创建表idoxu表，直接拷贝istester库idoxu6表的数据和结构，写的时候没有注意idoxu6表不在当前数据库里，导致报错
Table 'istesterdb6.idoxu6' doesn't exist
然后秒懂，因为在不同的数据库，需要标识是哪个数据库的表才可以
create table idoxu like istester.idoxu6;
insert into idoxu select * from istester.idoxu6;
总结：如果表在不同数据库里需要指明数据库.表名来定位表

 
序号43 的内容是: #每天进步一点点#
今天学习了下linux中常用的通配符，不知道大家了解多少，分享如下：
比较常用的通配符有：* 、?、[]等：
1、* 表示任意长度的任意字符
例：ls -d ./host*     # 显示当前目录下所有以host开头的文件与目录
2、? 表示任意一个字符
例：ls a?.jpg      # 显示当前目录下所有以a开头，名称只有两个字符的.jpg格式的文件
3、[] 匹配指定范围内任意一个字符
例：ls -d [ac]*    # 显示当前目录下所有以a或c开头的目录或文件，-d表示如果是目录只展开一级目录
扩展：
[a-z]：表示任意一个字母，不区分大小写，写成[a-Z]、[A-z]、[A-Z]效果都一样
例：ls *[a-Z].png      # 显示当前目录下所有以字母（不区分大小写）结尾的.png格式的文件
[0-9]：表示任意一个数字
例：ls a[0-9]b.txt     # 显示当前目录下所有名称以a开头、b结尾，中间只有一个数字的.txt格式的文件
4、[^] 匹配除了指定范围以外的任意一个字符
例：ls -d [^a]*     # 显示当前目录下所有除了以a开头的文件和目录

常用的字符集表示方法：
[:alpha:] 表示所有的字母（不区分大小写），效果同[a-z]
例：ls -d [[:alpha:]]     效果同    ls -d [a-Z]   # 显示当前目录下所有单个字母的目录和文件
[:digit:] 表示任意单个数字，效果同[0-9]
例：ls -d *[[:digit:]]   效果同  ls -d *[0-9]    # 显示当前目录下所有以数字结尾的目录和文件
[:lower:] 表示任意单个小写字母
例：ls [[:lower:]].ini    # 显示当前目录下所有以单个小写字母为名的.ini格式的文件
[:upper:] 表示任意单个大写字母
例：ls [[:upper:]].ini     # 显示当前目录下所有以单个大写字母为名的.ini格式的文件
[:alnum:] 表示任意单个字母或数字
例：ls -d [[:alnum:]]    # 显示当前目录下所有单个字母（不区分大小写）或数字为名的目录或文件
详情可见简书文章：

linux中通配符的使用场景还可以延伸到用find命令查找匹配的目录或文件，查找日志中匹配的关键字等。

通配符在SQL语句中，正则表达式中都有广泛的应用，大家可扩充。

 
序号44 的内容是: #每天进步一点点# 
mysql每日打卡已经接近尾声了，这十几天每天打卡真的学到了很多，觉得每日打卡可以把零碎时间利用起来。现在完全习惯这种打卡方式，利用中午时间打完卡，每一期我都会参加这种打卡，让打卡成为一种习惯。
今天题目参考答案：
今天的题目主要考核了修改表以及表中字段的知识点
1）修改idoxu表名为idoxu6
alter table idoxu rename to idoxu6;
2）修改istester表，把字段istester改为istester6 (varchar类型，长度160)
alter table istester change column istester istester6 varchar(160);

 
序号45 的内容是: #每天进步一点点# #简历# #面试# 
面试前的准备：
1、提前三个月准备
2、简历：至少花1周去写，，不要有错别字（特别是工具名），简历上的技术关键词一定要融合到项目中体现出来
3、尽量别去外包，还是要去大公司历练，测试人员二三十人左右
4、定位薪资：去各大招聘网站上查询或者询问前辈
5、物色想去的公司：根据公司的招聘要求技能恶补：测试理论，db，linux，常用工具
6、提前了解公司信息


面试过程中：
个人介绍：【简短但要突出重点】
我是谁，，几几年开始测试，都有什么项目，，负责什么内容，用到的主要的技能，项目的成果，

一般会问到的问题：
做的项目中开发、测试各多少人 还有哪些岗位介入？项目是否有上线，线上用户有多少，回答用户量级即可？测试周期？上线后线上问题情况，如何处理的？
凡是简历上写的项目都要详细的了解清楚，里面用到的技能也必须掌握很好，这样才不至于被问懵

反问：
1、岗位内容
2、团队情况
3、业务规划
面试offer选择：根据自己的情况选择即可

 
序号46 的内容是: #每天进步一点点# 
 1.今天解决了困扰很久的虚拟机连网问题，还是很开心的。参考如何快速解决虚拟机中的CentOS7无法上网的方式。
2. 虚拟机中 输入 ifconfig 提示 no package available,通过安装工具包解决：  yum install net-tools.x86_64 -y 。

 
序号47 的内容是: #百人计划# 
#21天Linux# 
#每天进步一点点# 

Linux第二期开始参与打卡，目前第四期。

规划：
1、每个专题前2轮认真操作、打卡，要思考；

2、第3轮打卡，每日博客记录。培养输出习惯，锻炼逻辑思维、表达能力，自我巩固；

（其实还是老徐的东西，自己的操作过程而已）；

3、最终总结21天命令脉络思维导图。

默默无闻，不常冒泡，但每天熬夜前行
技术不够，努力来凑！

传送门👇👇👇

 
序号48 的内容是: #每天进步一点点# 
今天学到了list()和range()方法，可以更方便的创建数字列表  列表切片可以部分的打印出列表信息  简单了解了列表复制和列表解析（列表解析作用应该挺好） 认识到了列表的朋友tuple元组，数值不可改变

 
序号49 的内容是: #每天进步一点点# 
这个礼拜坚持每天都打卡，每天下班回家吃完饭后，大概一个小时的时间坐点电脑前，把很多之前看过的命令和sql语句真正的一点一点的实现，这个安静的时间，属于自己的思考时间，一点点的进步，这样的感觉很好。
这次版本在灰度遇到的3个问题:
1.部分机型产生crash 
2.新商户号在正式环境支付失败，用户量较大，影响较大
放到线上出问题有2点:
一、正式环境和预发布环境配置的商户号不一致，预发布环境的旧商户号支付功能正常，整个场测的过程中都没发现问题，灰度发布时正式环境配置的是新商户号，新商户号支付功能未开通，功能不完善，造成用户所有的支付订单都是失败的，由于商户号的配置是产品经理配置的，测试无法知道商户号是否是一致的，改进方案:多与产品经理沟通，确认注意事项
二、由于是海外的版本，依赖海外本地的资源，正式环境发布后，测试未能在正式环境进行支付验证，后续改进方案是:新上架渠道或者商户号，正式环境配置了请求场测再次进行验证
3.软件商店放量时间过长到导致二轮灰度数据仍旧有crash
此次灰度发布策略走的是软件商店，在第一轮发布后的第二天，软件商店的发布人员将我们的apk上架了一整天，以至于之前未修复的crash版本被很多用户升级，在我们不清楚软件商店上架一整天的情况下，发布了第二轮灰度，跟踪数据发现crash数据仍旧未下降，经过排查后才发现第一发布后的第二天被上架了一整天。虽然是误操作，这个过程中我们对于发布后的数据关注不够，加上又遇上假期，后续对于版本发布后，应该要密切关注发布后的数据，实时监控

 
序号50 的内容是: #每天进步一点点# 
今天学习了python简单列表的创建和使用，学到了列表的增删改查操作，增加append() 末尾增加 insert()方法 任意位置 删除 del语句 永久删除 pop()方法 有返回值 remove()方法 按值删除 sort() 永久性排序没有返回值  sorted()函数临时性排序有返回值  len()返回列表长度 reverse()倒序输出

 
序号51 的内容是: #每天进步一点点#
今天上线的活动出现问题，经排查是老版本的数据和新版本兼容存在问题，原本老版本部分数据需要去掉，新版本上线之后，因为数据一直在跑，所以没有做处理。
处理方式：API同事紧急处理删除不符合的老数据
总结：
1、QA考虑不够，应考虑老版本数据和新版本数据的兼容问题
2、对于活动多考虑机型适配（android5.0~10.0），统计出问题多机型重点关注
3、开发和QA应列出checklist，方便回归
4、对于高峰期应提前验收，如果有问题及时提出方便修改。

 
序号52 的内容是: #每天进步一点点# 
最近安装了pycharm
今天了解了python如何使用变量，什么是字符串，整数和浮点数，学到了几个简单的方法，比较好用的是format()，如何进行注释
动手敲了几行代码

 
序号53 的内容是: #每天进步一点点# 
如何同步虚拟机与主机时间？
之前按照 小邝同学的经验修改了虚拟机与真机时间不同步问题，当时也验证成功了。今天再次操作更新文件时间命令，显示文件时间为 4月2号，用date命令查看也是 4月2号，于是开始百度，后来发现是因为没有装 vmware tools导致的。

vmware tools：是VMware虚拟机中自带的一种增强工具，相当于VirtualBox中的增强功能（Sun VirtualBox Guest Additions），是VMware提供的增强虚拟显卡和硬盘性能、以及同步虚拟机与主机时钟的驱动程序。

接着就开始百度了，最后按照其他人的经验成功安装 vmware tools，并总结输出自己的操作步骤的文章。
文章链接：

 
序号54 的内容是: #每天进步一点点# #21天Linux# 
第二天打卡的第4题: 进入当前用户主目录
我和很多同学都回答: cd /
实际答案: cd ～

为什么呢？
这里涉及两个概念，一个是根目录，一个是当前用户主目录
它们的区别主要表现:
1、目录层次不同：
/：根目录，所有的目录、文件、设备都在/之下，/就是Linux文件系统的组织者，是最上级的目录。
用户主目录：如果建立一个用户，用户名是"root"或者“userTest”，那么在/home目录下就有一个对应的/home/root或者/home/userTest路径，用来存放用户的主目录，回到题目“用户主目录”，就是我们用来登录Linux的用户，比如我用的是root用户，那么用户主目录就是/home/root，而不是/home/userTest。
2、目录产生的时间不同：
/根目录作为文件系统的必备，一开始就需要在系统运行时建立；
而/home目录只有建立新用户的时候才产生。

 
序号55 的内容是: #每天进步一点点# 今天get到一个点:find的模糊查询需要加双引号

 
序号56 的内容是: #每天进步一点点# 
这个假期，奉献给了安装环境Linux+centsos+mysql
看似简单问题，往往更容易让我们犯粗心大意的错。
两天环境配置，抓错，纠错过程，发现自己比以前更能耐下心来想办法解决问题，不像以往遇到个问题，简单百度，不深入思考问题原因就去找人帮忙解决了，这也是成长呢。

打卡Linuxday2，一开始以为很难，真的去做了，越希望自己坚持成长21天。
也感谢老徐把Linux任务拆分细而有用，学起来更容易获得。

 
序号57 的内容是: #每天进步一点点# 
在朋友的帮助下，云服务器上算是把mysql装好了，接下来就是跟着老徐开始linux打卡和mysql的打卡了。
看了大家发的动态，说的很多接口测试的专业术语，就像刚进公司时，听同事说的那些专业术语一样，what are you talking about！随着环境的影响，和他们的脚步逐渐平齐。我相信我现在听不懂的术语，在大神的影响和自己努力中，也会慢慢熟悉，希望有一天也能加入你们热烈的讨论中。

 
序号58 的内容是: #每天进步一点点# 
今天特别想谈谈需求管理这回事！

需求管理跟测试有什么关系？
什么是测试？好的测试，是把产品问题扼杀在需求上，耗费的成本远远小于项目走到需求之后流程产生的成本。是否如此？

有没有遇到过一个版本就在一个需求单上，后面评论区跟着长长一段各路大神讨论需求的留言，需求改动后的样子到底如何，还需要使劲在评论区内找其真身？

有没有遇到需求A在开发过程中，变成了需求A+A.1+A.2……，发布后，过了一段时间回来或者换个人来跟，看到的还是需求A，A.1+A.2不知何处可寻？

有没有遇到需求是测试W负责，跟进期间需求B改动不少成了B.1，同期测试Y负责的功能C和B有关，B的一个小改动直接影响C，然测试Y并不知道有B.1的改动，等到测试遇到了问题，咨询后才知道？

作为新人，或者工作中难免要去负责一个迭代了好几个版本的功能。面对需求输出出口不统一的情况也曾混乱和痛不欲生过:跟进一个迭代了好几个版本的需求A，去找去看不同的文件，还要找不同的人问改动详情……期间沟通，搜索很费时间和心力，还要被产品反问:不是跟你们测试谁谁说过了吗（太囧╯□╰）。

什么是好的需求管理呢？
我希望需求管理有以下几点：
1、每个产品对应一个总的需求文档，无论产品经历多少个迭代，看到这个需求文档就能大致熟悉产品现在的情况；
2、哪个版本对应哪些需求，能一目了然；
3、每个需求变更都得到很好的控制，即使小需求小改动，也请好好深思熟虑后，经过审核再纳入版本中并备注修改缘由；
4、每个需求变更，在哪个版本上开发，大概的开发时间，开发完成时间，提测时间；
5、一个大版本拆分多个子需求跟踪，各个子需求能指派给不同的开发，不同的测试跟踪，针对子需求的改动都能从上面了解到；
6、需求变更了，一定知会到相关人员，消息出现断层，就可能会影响项目进度了；
7、需求开发完成，测试验证通过，才算一个需求完成的周期；
8、最后，每个版本迭代后，及时更新总的需求文档，备份在案。

以上是我的一些体会和看法。需求管理不止是产品的职责，整个项目组相关人员都应该关心注重起来，好的需求管理会较少很多不必要的沟通，项目这么赶，何不把时间花些在规范需求管理上呢？

不知道行业内对需求管理是否有个比较好的标准？
大家对需求管理又有什么样的见解呢？期待路过大神们的高见。

PS：
百度了解到的其他需求管理办法：
Excel管理跟踪：（用Excel管理不利于多方相关人员查阅和修改。如果是腾讯文档的Excel，列数多时查看起来不方便）：

 
序号59 的内容是: #每天进步一点点# 记一次灰度发布crash
新版本4.1日晚上进行第一轮灰度发布，4.2日发现有2个crash的问题，具体表现是:部分机型使用主题商店会产生crash，具体数据是:非印度+印度的大概有近900人次，其中印度有678人次
核查出这个问题的具体原因是依赖的第三方接口修改了，但是提供给我们业务方的接口文档并没有修改，开发确认过文档是不是最新的，但是并不知道文档的内容并不是最新的，由于这个需求是技术需要，没进行需求评审，测试不知道具体的改动点及影响点，所以测试过程中没发现这个cras。
开发在修复完这个问题后追责，首先质疑的是为什么负责测试的伙伴没有测出来，测试伙伴给出的回答是用的3.27的构建版本进行测试，是没有这个问题的，而且机型也不可能全部覆盖。
今日思考的问题是:对于依赖的第三方修改接口或者其他东西有修改但是作为依赖方却不知情造成的现象，应当如何才能有效的规避？

 
序号60 的内容是: #每天进步一点点# 
今天优化了部分场测用例，设计思路一句昨天总结的优化方案，场测用例是给境外伙伴使用当地网络和本地资源模拟线上环境进行的测试，用的是全英文版本，由于境外伙伴任务较多，加上这次跟进这个版本发现他们在识别问题及执行效率都比较低，所以需要进行优化，今天只完成了两个国家，优化后用例少了2/3，明天接着整理。
今天发生了一件让我很无奈的事，起因是因为我们业务新增了1个接口，需要安全团队评估是否需要进行测试，所以就拉了一个沟通群进行评估，安全团队看了接口文档之后觉得需要进行测试，测试后提出了两个问题，一是域名没有使用https，二是加密方法不符合公司规定。本来很正常的事，安全团队测试完之后有问题提交问题，我们这边进行处理，问题需要改修改完成后再次提交测试，不进行修改的问题给出理由，得到相关负责人的同意并告知安全团队，但是由于开发对接人的态度非常不配合，加上言语间带着些讽刺意味，安全团队的负责人便要求与开发负责人直接对接，但是今天开发负责人还在返回公司的路上，我见事态发展得有点恶劣，便让项目PM参与进来决策一下，PM了解情况后拉了相关人员进行会议，我以为问题得到解决了，下班前又看到开发对接人在群里发了两句有点攻击性的话语，安全团队的负责人对于那些话语也是非常无奈。
工作本来就是团队协作，如果沟通时带着情绪，久而久之大家都不会愿意跟你合作，长久以来我都在要求自己好好跟开发沟通，工作中难免遇到这种同事，所以我在想，作为管理者遇到这种情况应该如何处理才算妥善？

 
序号61 的内容是: #碎碎念# #每天进步一点点# 
今天打卡了sql第四天，老是把删除数据库表和数据库数据的两个操作给搞混。试了第一个一看不对，就知道是另外一个了。这次记住区别了。
打开了之前安装好的linux服务器，好久没用竟然成功进去了，并xshell连接成功。明天开始再重新来一遍然后开始敲命令了。

 
序号62 的内容是: #每天进步一点点# 今日复盘
完成linux和sql打卡，总结输出三篇简书文章：
查看文件内容命令文件内容查看命令合集 - 简书
数据库，表的增删数据库、表——增删 - 简书
centos7安装mysql5.7 centos7安装mysql - 简书
今天文章输出还解锁了一项新技能，熟悉了简书中的markdown，文章样式美观了不少

 
序号63 的内容是: #每天进步一点点# 
第一天的直播课因为有事没有参加了，
终于在今天下午看重播完成了课程。
每天除了保持输入，也要学会输出学习总结，我觉得这个方法挺有用的。
老徐的第一节直播课可以用几个词概括，以教促学，保持激情，聚集目标，每日进阶，好奇心，思考。
在接下来的一年里，希望可以跟大家一起共同努力，玩好软硬技能。

 
序号64 的内容是: #每天进步一点点# 

1. 学习了python的多线程，想在原有的接口代码基础上加上并发功能，今天看了基本用法，明天开始一点一点往已有代码里面加功能。

2. 回顾了一下昨天学习的内容，有些内容记不太清楚的，快速回顾了一遍。

3. 把自己的代码推送到github上，同时也实战了一把git常用操作，真的是越用记得越牢

4. linux、mysql打卡，同时也报名了下一期的linux，每天一个命令循环几次，慢慢知识也是自己的了。哈哈

 
序号65 的内容是: #每天进步一点点# 
昨晚一直在安装Linux环境+mysql 反复装了几次才搞定。真是不用不知道，用了才知道不是很熟练，今晚要形成文档输出，一再次增强记忆力，二方便以后自己查看。
今早才看到有作业！
抓包工具：Fiddler
使用场景：移动端的接口数据抓取
功能应用：验证后台的返回数据的准确性、可以基本用来判定bug属于前后端的哪一方、进行断点调试、弱网测试

 
序号66 的内容是: #每天进步一点点# 
每天早上上班路上坚持至少看1篇测试相关文章:简尚以往文章，星球的主题。

 
序号67 的内容是: #每天进步一点点##百人计划#
昨天百人计划五期正式开始了，决定来百人计划的原因很简单纯粹，就是大家一起学习能够给自己动力，希望把我知道的东西都不止于皮毛而是深入的了解其原理和内涵。听了第一次直播之后，决定的第一件事是确定了最想学的top5
1、简历&面试的套路，不太会写简历，面试成功率很低，希望能够提高自己的面试成功率
2、接口自动化，自己也写了一些，但是总觉得公司落地实现的时候比较难，想知道别人都是怎么做的「想更多的使用java来完成代码的编写」
3、CI/CD,之前也用过这些，但是仅限于使用的那些东西，具体的原理不清楚
4、测试知识体系
5、性能测试能够更多得去分析瓶颈，解析报告
希望这一年能够更这么多小伙伴一起快乐学习，学到更多想学的东西，也希望自己可以坚持下去！
今天开始了mysql的打卡，最近还要把linux服务器还有git+jenkins+mysql再重新安装一遍，之前安装过很多可能都忘了，这次重新来把步骤都总结成文章，方便以后查看。。
第一次的发言就先这样吧

 
序号68 的内容是: #每天进步一点点# 
今日的总结内容：
  ①.关于测试思维和测试技术，在多次的面试中被问到觉得做测试最重要的是什么，每次的回答都是测试思维，有一个好的思维方式才能更好的学习更多的技能。关于如何培养，我觉得就是看书看文章+思考+应用。
   ②.互联网行业无论是寒冬还是热火都会有成批的人通过各种方式进来，我在转行之初看了一阵子徐哥的文章，看了一本入门书以及一些基础理论视频就出来面试了，后来很顺利的找到工作。最后的观点是如果够自律可以看书看文章入门转行，不够自律可以报班，不过现在的一些培训班质量堪忧，慎重选择吧。
   今天的记录到这了。

 
序号69 的内容是: #每天进步一点点# 浏览了一下星友的，每天进步一点点，发现大家都有总结，有学习，有动力了，先从MySQL开始了，跟着打卡，一点点来吧，好像这个城市一样，缓慢往前推进吧

 
序号70 的内容是: 问：百人计划开启后的第一天我干了什么？
答：在阿里云服务器上部署禅道环境：
步骤1，购买一个阿里云服务器，，买了一台最便宜的，消费69.86￥
步骤2，通过xshell远程连接控制台。
步骤3，将下载好的禅道包，通过rz的方式上传到linux服务器上（第一次用）之前很少接触linux
步骤4，将禅道压缩包解压到/opt目录
步骤5，启动mysql和Apache服务（启动成功）
步骤6，通过浏览器直接访问Apache端口（访问失败，参照老徐文章，经过检查防火墙没关闭）
步骤7，关闭防火墙，再次访问（访问失败，这次访问失败后，我去检查了mysql和Apache的状态都是正常的）
步骤8，毫不犹豫的去百度了下，找到了原因：打开云服务器ECS-安全组-配置规则-添加80端口
步骤9，再次通过浏览器直接访问Apache端口，访问成功
整个过程中参照老徐的文章还是比较顺利的，没遇到啥大问题，第一次在云服务器上部署禅道还是挺开心的，以后工作中要是遇到搭建禅道环境不用求运维了
今年目标:sql，Linux，app自动化，加强测试思维，提高动手能力。
 

 
序号71 的内容是: #每天进步一点点# 【百人技术_五期——day01】
1.大纲解读
  时间：周六  21：00（九点二十左右，提前准备）
  形式：视频/语音
  内容：各自所需
  其他：
  先定24讲，其他的擅长的水友可以申报内容分享
  
2.分组
 选择适合自己的组
 有意向的申请组长
3.打卡
 自费
 找老徐要免费码

 
序号72 的内容是: #每天进步一点点# 
1.今天给自己订了一个任务，把简尚里面的文章从第一篇开始从头到尾梳理一遍，由于今天周末，时间比较长一口气看了五六篇，看完之后思考了一下目前的状态：做测试一年，现阶段掌握的技术包括Linux基本命令(跟着徐哥的打卡逐步掌握)，MySql基本的增删改查，压力测试和接口测试只会一点皮毛。目前最大的毛病是不够自律，最缺的能力大概就是沟通了，性格太过内向羞怯，所以沟通方面特别欠缺，也是后面很长一段时间努力改变的方向吧。
2.看了《软件测试的艺术》，目前看到第三章。本章介绍的代码检查、走查应该如何进行以及一些常见的代码错误，对于代码能力一般的我来说理解起来不算容易。
3.刚入职新公司就要负责一个新项目，由于没有独立负责项目的经验，也没有参与项目评审(进去之前已评审)，所以最近总是特别担忧，怕做不好。虽然担忧但还是很努力的去了解产品，积极跟项目管理人员，开发人员保持沟通。希望能够好好努力，在项目中有很大的成长。
写得有点多了，因为没有想到一个好的记录方式，就记录在星球吧

 
序号73 的内容是: #每天进步一点点# day07(补),深入了解了JavaScript的DOM,原理还好理解,和selenium的表现类似:定位单个元素,定位一组元素,定位层级元素.拿到元素后的操作,使用函数去执行,,,就像自己去封装selenium的执行方法一样,,,批量监听和对应排他,没有找到练习题,找题刷一下

 
序号74 的内容是: #每天进步一点点# day07,暂停一下,年会结束有点完,可能是本命年到了，犯太岁，中奖绝缘体

 
序号75 的内容是: #每天进步一点点# day04,继续刷JavaScript,,,深入了函数,接触数组;<透析HTTP协议>,搭建HTTP的环境,wireshark抓包,HTTP解析原理,如果有想搭建HTTP或者是自定义一些HTTP头部,方法,推荐一个网站:httpbin.org
1.函数的两种写法
2.函数声明的提升,,,毫无节操,什么玩意
3.函数的作用域,遮蔽效应,涨知识了,同一个变量名,局部变量之后,有同名的竟然不会被覆盖???
4.函数的参数,类数组方法
5.闭包,之前有过Python的基础,理解起来闭包没什么难度,和Python原理一样,不知道有没有装饰器
6.数组,常用方法.pop,push,shift,unshift

 
序号76 的内容是: #每天进步一点点# day03,刷完了JavaScript的循环和判断,附带一些函数,练手了几个脚本,顺带回顾其他语言;透析HTTP协议,刷了几章,发现基础还可以,破冰篇的毫无压力.
吐槽一下HTTP协议,自己面试的时候就被架构师难住了,后来发现架构师每次面试,必问HTTP
工作中也经常和它打交道,接口用例,接口数据加密,DNS域名劫持,一言难尽

 
序号77 的内容是: #每天进步一点点# day02,继续刷JavaScript,都是基础啊,顺带过一遍其他语言的(shell,python,java),,,另外每天抽一小时刷极客时间的课程

 
序号78 的内容是: #每天进步一点点# 
1.今天整理了前两年的笔记,逐渐转化分享出去吧,不然有些东西不碰 ,很快就忘了,@大佬,有想考CCNE或者是HCNE的水友,我这里有资料赠送.
2.CSDN每天只能发10篇?综合了博客园和CSDN,还是选择了CSDN,,,排版太难了,不知道大佬们写博客时候排版都是怎么解决的
3.下决心解决前端一点都不会的大难题,,,
4.逐渐把技术栈转移到Java,靠Python找工作,要饿死

 
序号79 的内容是: #每天进步一点点# 从业这一年半，经常性碰到HTML+CSS+JavaScript，一向都是一闪而过，没有静下来学习。。。现在，还是被它们扼住了进步的喉咙，加油＾０＾~，有没有学习CSS和JavaScript的大佬，一起啊

 
序号80 的内容是: #每天进步一点点# 写个架子，慢慢填内容
https://blog.csdn.net/weixin_37846886/article/deta...

 
序号81 的内容是: #每天进步一点点# 最近连续被同事认可，莫名的开心。。。

 
序号82 的内容是: #每天进步一点点# 
一个人走得更快，但一群人才走得更远。

捣鼓一天写了个简单的小文章，挺有意思，开始实现作家的梦想了
测试圈我偶像（星主会不会成功对号入座）提倡通过主动分享督促自身不断进步，哈，这次能坚持多久呢？

 
序号83 的内容是: #每天进步一点点# 聊一下人脸识别.
1.接触供应商的时候了解到人脸识别分为2D和3D，个人理解的2d和3d就是二维和三维的区别。2d是由一颗摄像头采集的一张平面图片；3d是由两颗摄像头采集图片(猜测是有一颗摄像头采集距离)。市面上常见的人脸识别都是2d，包括支付宝的人脸支付和苹果的人脸解锁。
2.个人认为人脸支付有两个不好推广的原因：隐私，现在人民越来越注重个人隐私(尽管已经没有什么隐私)；安全，将自己的图片数据交给厂家，认为不安全。

 
序号84 的内容是: #每天进步一点点# 复盘一下本周工作。
1.辅测的APP迭代上线，发版之后就出现问题：搜索切换页面地图显示问题，6s界面有部分重叠，H5没有及时更新。产品性质原因，从产品到客服，认为只要不影响用户的使用就好，已经形成一种习惯吧。
从我的角度，这个产品极度庞大，业务覆盖200多个城市，且不同城市配置略有不同，到现在都不敢说完全掌握需求。
2.自己主导的项目历经两个版本的系统搭建，周二对外演示，获得用户的认可，接下来进行流程优化。在这里有一个小插曲，原有的组织树路径太深，研发组长要对组织树进行代码重构，但是我认为不需要重构，这样工作量太大，开会的时候提出了建议：将组织树一分为二。中间略有争执，最后认可一棵树了一分为二的方案。
3.对接人脸支付的供应商：小钴科技，不知道有没有大佬接触过这家公司的。
4.重构了接口测试脚本，简化逻辑，省去了一小部分代码量，很遗憾没有落地CI。

 
序号85 的内容是: #每天进步一点点# 记一个修改js文件，引发的前台js报错问题，本地测不出来，客户后台却找不到页面（不知道是不是通用的）

【先介绍下背景】
我们是web产品，存在发布机、管理机、js文件，页面会引用到这些js文件。出于安全考虑，规定js文件名称和文件里面都不得带有版本号。

【现在描述bug的来龙去脉】
比如某个js文件叫jquery.2.1.1，有10个页面引用了它。这时把它的名称改掉，叫SuperSlide。按说那10个页面里面的名称也要相对应改掉，但是只改了7个页面，3个漏改了。所以讲道理，这3个漏改的页面，前台访问的话会报js404错误。但是不然，本地测试环境的前台一切正常。
而把网站包导到客户环境，再去访问，就找不到js文件了，猝。
原因是啥呢？因为js文件是静态资源，发布的时候，是“增量式发布”。即，修改js文件名称和页面里的名称之前，发布过一次，这时发布机上存的是jquery2.1.1文件---页面里面jquery2.1.1的映射关系。修改过以后，对于那3个漏掉的页面来说，再次发布，发布机里存的是Superslide文件---页面里面jquery2.1.1的映射关系。这时在前台访问的话会把所有的映射关系都遍历一边，即便在第二次的发布里找不到映射关系，在第一次的也能。总之，能找到引用的js文件，前台就不会报错。
而客户环境呢？是把本地修改后的网站包导到客户环境的，那么对客户环境进行发布之后，发布机存储的只有Superslide文件---页面里面jquery2.1.1的映射关系，当然在前台就报错了！

【如何测试呢？】
1.测试人员把本地发布机的js文件全部删除
2.本地访问，检查前台js报错情况

以上，web测试的朋友可以参考。

 
序号86 的内容是: #每天进步一点点# 2019年剩三个月进来的星球，从开发转测试。
自己买了三本书籍，也不期望都看完。
起码一本要掌握大部分知识点并且能运用到自己的工作中。
将目前的业务了然于心。加油努力

 
序号87 的内容是: #每天进步一点点# 近期各种事堆积，荒废了一段时间。
应了那句话：时间就在那里，你用，或者不用，都会不停的往前走；知识也在那里，你学，或者不学，未知的都在不断的增加。
收到了一个月前给自己订的书，学习吧。
吐槽一个知识星球的一个问题，不能提前续费？

 
序号88 的内容是: 我在职场VIP 上周，部分内容精选

1. 新人的可塑造性 https://t.zsxq.com/zfqjqRj

2. 管理进阶 之 定期找员工聊聊  https://t.zsxq.com/3NJIeAU

3. 当实际执行 与 标准规范冲突取舍  https://t.zsxq.com/MBieUJa

4. 职场不如意同学的2个共有特性   

5. 如何驱使自身惰性  

6. 想让员工待的爽，其实很简单  

7. 什么样的人适合待在创业公司  

8. 职场，会面临很多抉择  

9. 转行前的5点建议   

 
序号89 的内容是: #每天进步一点点# 
周末迅速看完这本书 对http协议，CS交互，web端开发的一些基础知识有了相对全面的了解，很适合入门读，在这个知识背景下能够在学习web相关技术中快速理解，并且对web端测试有一定的启发作用。
快的话一天可以看完，干货满满。
两天 充实
下周继续

 
序号90 的内容是: #每天进步一点点# 总结第二天
1.早上比以往早起半个小时，复习java基础
2.移动端和C端有了稳定的演示版本
3.论文看了一半

明日计划：
1.继续早起，复习java
2.回归名下bug
3.整体过一遍C端和安卓端，精进一下产品
4.论文看完

感受：坚持总结，把内容更细化，后期把学习笔记总结出来分享

 
序号91 的内容是: #每天进步一点点# 
今日完成了月初设定的优化目标，用接口刷新缓存
之前一直找了很多文章尝试都试不出来，今天在改上周删库的锅，检查时发现，其实平时用的方法就可以带cookies，于是查看官方文档有相似的例子，直接完成了任务

观察很重要，比起盲目寻找，先观察，再去百度，效果会更强呢，卡住的时候不如停一停，在寻找，没准柳暗花明又一村，就像我们常常会找不到身上的手机一样，明明很近就是找不到

 
序号92 的内容是: #每天进步一点点# 从今天起，每天必须进步一点点，从做总结开始。
今日总结：
1.跟踪C端bug，改的很慢，基本功能可以用了
2.确认论文答辩时间，准备答辩
……
感觉能记录的很少

明日计划：
1.回归名下bug
2.各个端都出一个稳定的包
3.熟悉论文整体框架、内容，准备答辩

感想：总是不喜欢总结，感觉生活稀里糊涂的，能力没我提升，一点一点的改变坏习惯，希望能有进步

 
序号93 的内容是: #每天进步一点点# 
尝试打破传统作息的第一天
早了40分钟到公司，先去健身房运动半小时（拉伸）

 
序号94 的内容是: #每天进步一点点# 今天在自己本地搭建了一个HTTP实验环境，遇到的问题以及解决办法：1、openresty启动不了，分析：经过netstat -an|findstr "80",发现被占用了  解决：更改Http端口即可    2、登陆http://localhost/的时候报404，一直登陆不上   原因分析：第一步中自己改了改了端口，怎么翻脸不认人了。。。。 解决：http://localhost:5080/即可   3、抓包的时候，安装了npcap后，选择了Npcap Loopback Adapter/HTTP TCP port(80)之后一直抓不到包  原因分析：跟2一样，端口不对。。解决办法当然是把端口改为5080就好了。果然不用默认端口会相对麻烦一点，不过，搜素解决的过程中也是涨知识的过程

 
序号95 的内容是: #每天进步一点点# 哪位星友懂Python，能告诉我图中程序哪里出错了吗？？？我感觉写的没问题啊，为什么调试不通过。。。。

 
序号96 的内容是: #每天进步一点点# 
1.git是个好东西。。。开始研究源码了；
2.在看访问与限制了。明白一切都要按照规章制度办事hh，避免错误
ppppps：挺享受那种前面学到的东西被用到了的感觉hh～ 
不知道配啥图，配个上大学时候爬华山的图吧
爬了六个小时才爬上去
热的吐血

 
序号97 的内容是: #每天进步一点点# 
Google测试之道，囫囵吞枣的看完啦
1.对开发，测试开发，测试的从新定义
2.ACC的方式描述项目
3.google令人称道的自动化测试
4.google独特的管理体系，不过这个在国内就不用想了
时间上有点延期了

 
序号98 的内容是: #每天进步一点点# 
星球 新人报到
坐标上海 入职一年
想学习自动化
目前在学习appium
有经验者能够给出些学习步骤 资料或者建议吗？
对于有志学习的小伙伴 希望能一起努力！
感谢老徐给我们提供的平台
 超赞的er！

 
序号99 的内容是: #每天进步一点点# Python学习：
1、 Python标准数据类型：Numbers，String，List，Tuple，Dictionary。
2、 Python数字类型：int，long，float，complex。
3、 Python字符串：
Python字符串列表有两种取值顺序：
1、从左到右索引默认0开始，最大范围是字符串长度少1；
2、从右到左索引默认-1开始，最大范围是字符串开头。
[头下标:尾下标] 获取的子字符串包含头下标的字符，但不包含尾下标的字符。
4、 加号（+）是字符串连接运算符，星号（*）是重复操作。
5、 Python列表截取可以接收第三个参数，参数的作用是截取的步长。
str[1:8:2]在索引1到8之间，每隔2个步长截取字符串。
6、 List（列表）是Python中使用最频繁的数据类型。列表用[]标识，是Python常用的符合数据类型。列表可以完成大多数集合类型的数据结构实现。它支持字符，数字，字符串甚至可以包含列表（嵌套）。列表中值的截取也可以用到[头下标：尾下标]。
7、 Tuple（元组）类似于List。Tuple用（）标识。内部元素用逗号隔开。元组不能二次赋值，但List是允许更新的。
8、 Dictionary（字典）是除List以外，Python中最灵活的内置数据结构类型。列表是有序的对象集合，字典是无序的对象集合。字典用"{ }"标识。字典由索引(key)和它对应的值value组成。
PS:在练习的时候，发现元祖的值能更新成功！！！找了好久才发现元祖的值用是中括号！同时也感谢这次失误，使我深刻的记住了列表，元祖，字典的本质区别。

 
序号100 的内容是: #每天进步一点点# 
《Google软件测试之道》，对比国内的测试环境（特别是中小企业）。
目前进度20%，计划三天看完

 
序号101 的内容是: #每天进步一点点# 
1.周六学习了map，今天复盘。
2.学习filter； 
3.第一轮其他组模块还没完成，等他们完成。

 
序号102 的内容是: #每天进步一点点# 
学习电商项目
1.温习接口，fiddler
2.测试用例的设计
已完成

 
序号103 的内容是: #每天进步一点点# 
1.昨天看完python第七章第五节迭代器，弄懂iterator及iterable的区别及相似处。
2.已经开始看第八章第一节高级函数(❁´◡`❁)*✲ﾟ*
3.昨天测完剩余冒烟接口；
4.今天继续学习第八章第一节内容，争取今天学完ԅ(¯ㅂ¯ԅ)

 
序号104 的内容是: #每天进步一点点# 
1.学习电商流程测试用例思路
已学完

 
序号105 的内容是: #每天进步一点点# 
1.今天测了V1.4.0的三个新增接口的冒烟；
2.复习python第七章第四节生成器generator，发现对yield的理解似乎加深了一些，目前还没有区分iterable和iterator。。
3.没有完成第五节任务。

 
序号106 的内容是: #每天进步一点点# hi～大家好，新人来混个脸熟，我叫陈名华，性别女，来自湖南娄底，去年毕业，目前一直在深圳一家公司从事软件测试工作，除开测试用例等文档的编写材料外，只会简单的Linux命令跟mysql，希望在老徐的圈子里，可以互相交流，沉淀提升自己✌️

 
序号107 的内容是: #每天进步一点点# 今日小进步：1.Python学了模块的使用和导入，关键字import，跟java的一样。可以导入整个模块，也可以只导入模块中的某些成员    from 模块名 import 
2.英语学习了钢琴大师郎朗的介绍

 
序号108 的内容是: #每天进步一点点# 分销系统

考虑得不太多，目前就这些。

因为习惯用xmind2testcase，所以就写成了转用例格式。

带数字图标的是用例标题，后面两节点依次为操作步骤、对应预期结果；
标题前节点为模块名称。

 
序号109 的内容是: 案例：来一个具体的业务场景，培养下大家的「产品思维」+ 「测试需求拆分」+「测试点编写」的能力 。

这两年，「分销」这个功能，在互联网产品里，基本上是标配 。
比如，咱使用的星球，也有这块的功能 。

简单一句话总结：「分享某个产品给朋友，朋友购买后，你获取x%的现金奖励」


老徐特意花了点时间，写了一个分销业务的通用需求：

1. 必须付费加入，才拥有「分销」入口 & 权限 。

2. 其它用户通过你的分享链接，点开后，绑定 7 天邀请关系；

3. 在7天有效期内，被分享者进行服务购买，付费金额以“固定比例”（后台设置的）进入你的「待结算」账户；

4. 分销奖励比例，后台可以设置为 0% - 50% 直接（包含 0% 和 50%） 

5. 你推荐的朋友，付费的3天内没退款，佣金将进入「可提现」状态，你可立即提现到微信账户中（提现必须大于1元，且每天只能提现一次）。

6. 同一用户先后进入不同分享链接，以第一次为准，进行 7 天绑定；

7. 超过7 天关系自动解除，解除后再次点击分享的链接，可重新绑定；

8. 如被分享者购买后，3天内进行退款，该笔佣金清除，无法结算；

9. 用户7天绑定期间，无论通过什么方式进入（绑定期间，不管通过谁的链接进来），只要付费，都会给分享者结算 。


注：
1. 关于如上需求，有任何疑问的，底部留言提问，老徐会解答（就相当于“需求评审” + 需求澄清了）。
2. 需求如果没搞清楚，会非常影响后续的测试需求拆分 + 测试点编写 。


> 作业，
根据如上需求，编写测试点 。
写完后，生成png图片，在此星球（软件测试圈），通过主题的形式，分享出来 。


最后，
测试点，统一用脑图的形式编写 。
1）工具推荐：Xmind
2）如果电脑没有安装xmind，老徐推荐大家用在线的Processon，个人用免费版足够，可画流程图+脑图等，非常不错 

 
序号110 的内容是: #每天进步一点点# 1.Python练习了子类的多重继承，构造函数怎么写的问题。
2.英语今天开始了新的一章，level4-unit3，用饼状图来分析一个人每天度过的时间

 
序号111 的内容是: 背景：
昨天开周会，领导提了两个问题，总结一下；

问题：
1、对有些项目进度把控不清，未弄清楚优先级；
2、部门内部周会，开会前未明确周会主要内容，导致浪费大家时间；

思考：
1、实时跟进项目进度，分清项目优先级，通过公司周会理清楚下周重点项目，不重要的项目有意延期也没关系（注意：不能光从问题来了解项目进度，也要考虑从客户的出货情况、响应的积极性来定义优先级）；
2、开周会前要明确会议主题，重点描述重要的优先级高的事情，避免浪费时间的废话（这个包括对优先级不高的项目描述过多，这就不应该拿到周会来说，自己把握或其他时间和PM确认就好，但对于这点，上面1问题是前提）；

PS：刚加入圈子，今天第一次分享，平常都是用印象笔记记录，只有自己看，分享出来大家一起提提意见

 
序号112 的内容是: #每天进步一点点# 今日加班到九点多了，回家十点多，但还是学了会儿。
1.Python练习了一节，主要练习print，比较简单，但是聚沙成塔
2.英语继续半小时，学习了在国外，对外币也是需要看护照的哦。  i understand your frustration,sir.but it's the law.

 
序号113 的内容是: #每天进步一点点# 虽然最近很忙，总是加班，但每天半小时的英语必须雷打不动。只要坚持，一定会有进步。

 
序号114 的内容是: 很久没测试PC设备的客户端了，这块应用，你收到过的用户问题（Bug/操作/体验）反馈有哪些 ？

比如，
安装不了 ？
无法升级 ？
安装后，双击应用图标，无法打开 ？

等 ，
留言讨论 ，互相学习 。

 
序号115 的内容是: #每天进步一点点# 新人第一天来报道，也说说我今天的一点点进步吧。
       刚开始学Python，我的第一个Python程序，房贷计算器。听起来很简单if-else就行，但是真写起来还是有些细节性的问题需要注意的。我犯的两个错误：1、自己定义了无参的sum函数，调用的时候报没有参数，开始想不通，后来终于明白，sum是Python内置函数，而且必须传一个参数，无需自己定义。2、定义了一个total函数，但是调用的时候说未定义，经过一番检查，才发现，出错原因在于：定义函数和调用函数的顺序反了，Python的定义需要在调用之前，因此饭了一个顺序问题。这两个问题其实不难，稍微熟点的人，就不会犯，但我还是犯了，自己看视频的时候还觉得没啥，挺简单。充分说明，看一百遍，不如自己正真写一遍。最起码我敢说，以后至少这俩问题我不会出现了。

 
序号116 的内容是: #每天进步一点点# 今天了解了一下B端产品和C端产品（纯粹是为了拓宽互联网的词汇，好些都不知道）。

【B端产品】
1）to Business，一款面向企业的产品
2）服务于组织，解决企业问题
3）注重业务流程，注重信息安全
4）付费定制获取收益

【C端产品】
1）to Customer，一款面向单个消费者的产品
2）服务于个人，解决消费者个体需求
3）注重用户体验
4）依靠流量获取收益

 
序号117 的内容是: #每天进步一点点# 两年前的我真的很小白，不了解市场和行情，直接从开发转功能测试，还丢掉了编程技术，现在回想起来真的是可惜，要是当初从自动化或者测试开发做起，现在肯定很不一样了。果然得有个领路人才行。

今天又重新开始回顾Java：基础数据类型、控制语句、数组、语法、异常等，明天继续，这几天回顾完所有基础编程知识。

 
序号118 的内容是: #每天进步一点点# 
1.内容分发：通过某种形式，将内容展现在用户面前。目的是为了让内容更加高效地传达到用户，让用户获得多元化信息，为内容生态提供更多的用户行为数据。

常见的表现形式：
1）内容生产者主动传播：比如我将内容发表到知识星球的圈子里
2）内容生产者和内容平台合作：比如新浪微博和某新闻合作，将该新闻社的所有原创内容发布到新浪微博

2.内容产品：通过内容聚集用户，打造流量平台。常见的内容产品有，微信公众号、今日头条、知乎、微博、优酷视频、网易云音乐等等。

内容的生产方式：
1）分发型-PGC：以媒体资讯类业务为主，通过大量的内容增长积累有相关内容消费需求的用户。
2）社区型-UGC：引导用户以创作为主，强调关系链的搭建与互动。

3.开放平台：提供公开的编程接口（API）或者函数让第三方软件接入并使用该系统资源的平台。最初是Facebook通过开放平台一炮而红，才使得全球各大互联网公司相继推出自己的开放平台。

 
序号119 的内容是: #每天进步一点点# 记录下这几天的计划，免得忘记
1.内容分发、内容产品、开放平台的概念，将总结发到知识星球
2.测试用例设计方法，重新学习并整理到有道云笔记中
3.梳理面试过程中碰到的用例设计题目，用思维导图将测试点概括出来，整理思路

 
序号120 的内容是: #每天进步一点点# 
1.之前一直没有搞明白cookie和session，今天又开始学习了，之前面试的时候也被问到过
2.另外发现，用批处理结合adb命令，可以很方便的进行一系列操作，比如依次将点亮屏幕、上滑屏幕解锁、左右滑动手机桌面、打开浏览器、输入内容、返回桌面、长按home键、关闭屏幕等命令写到bat文件中，保存后执行此bat文件，就会自动实现这些命令

 
序号121 的内容是: #每天进步一点点# 昨天没能如约做作业，莫名其妙的super tired。
1、不过可喜的是成功定位到了瓶颈，是买的运动鞋硬底不舒服。解决方法是换鞋子尽量不再穿它。曾经改变过一次消费观：买东西一定要买好的（我没太多经验，姑且只能认为承受范围内的价格贵的就好）。所以运动鞋还是穿李宁吧。（不是广告，只是体验）

2、多年来不承认自己的特点，盲目学别人的学习方法，可是我就是一个需要轻松学习才效率高的人。

3、没到而立不惑，却越来越清楚自己想要什么不喜欢什么。老徐，我可能一年以后就要折腾大转行了，可是今年我还是让自己努力做出点测试技术的成绩。

 
序号122 的内容是: #每天进步一点点# 最近都在加班中，上班很难静下心来学习，即便如此，还是强迫自己抽空学习，虽是上班时间还是可以抽出一到两小时进行学习：
1.Mysql必知必会看了两章，学习Select语句；
2.21天搞定Linux命令，练习了cd/mv/cp/mkdir，发现了一个一直很纠结的问题，mkdir /APP是把文件建立在根目录下，而mkdir APP/是把文件建立当前目录下，之前还疑惑了很久为啥每次建的文件夹都在根目录下，终于顿悟了
；
3.英语口语30分钟；
4.软件测试看了两章；
由于不够自律，现在每天强迫自己静下心来学习，找回当年高考奋斗的状态

 
序号123 的内容是: #每天进步一点点# 假期过完，马上要去深圳工作，期待又紧张，终于要拥抱互联网。继续节前的命令学习，根据老徐梳理的常用的Linux命令,过滤掉学习视频中部分课程。文件处理命令：touch/cat/tac/more/less/head/tail命令，总结这些指令很少有选项，基本上都是命令+文件名，记忆起来更容易，find命令是学习的重点，选项较多，待明天详细学完再细细梳理

 
序号124 的内容是: #每天进步一点点#  Linux 
1.Ubuntu 中查看mysql的依赖项：
dpkg --list|grep mysql
2.wget -c http://。。。。。。。 --no-check-certificate
3.删除当前目录下的所有文件及目录
rm -rf ./*
4.du 命令 显示文件或目录所占空间大小

 
序号125 的内容是: #每天进步一点点# 昨天圈里说到了通过新媒体来扩大自己在软件测试的影响力。首先我是一个处在被影响、需要学习阶段的测试员，还没拥有更大能力去影响他人，所以并没有想过去推销自己、扩大自己的影响力。

接下来我先认识下什么是新媒体吧
1. 媒体是什么？
是中介，把信息介绍给不知情的人或群体；是引导者，引导个人情绪和行为，引导群体的舆论。
2. 传统的媒体有哪些？
报纸、杂志、广播、电视等
3. 新媒体是什么？
一种新形态的媒体形式，一种不同于传统媒体的媒体。
4. 新媒体有什么特点？或者说不同于传统媒体提现在哪儿？
 1）传统媒体的内容由专业人员、团体、机构产出，新媒体的内容是可以由任何人发表观点和进行原创
 2）新媒体运用了新技术：数字技术、网络技术、移动技术
 3）新媒体具有交互性、及时性、海量性、共享性等

以上就是我网上搜索后对新媒体的初步了解。

 
序号126 的内容是: #每天进步一点点# mv命令请教个问题：
将/documents/idoxu/test1/中的test目录移动到documents目录下；
cd documents/idoxu
mv ./test1/  /documents
结果test1目录给删除了是啥回事吖  
求教。。。。。

 
序号127 的内容是: #每天进步一点点# 新增了3个命令的学习，cp/mv/rm
cp命令中有如下几点记录下：
1.复制文件不需要加选项，除非想保留文件属性，需要增加p;而复制目录是需要加r选项
2.复制的时候可以在一条命令中同时复制多个文件，且还可以在复制过程中变更文件名，这点与windows不同
mv和rm指令需要慎用，至少在使用前做好数据备份，以免误删导致系统奔溃，那可真的就是整个世界都安静了

 
序号128 的内容是: #每天进步一点点# 
作业：创建一个数据库，库名istester_test

 
序号129 的内容是: #每天进步一点点# 今天学习了Linux的一些命令，首先明确了一个概念，命令对于Linux来说是一个可执行的二进制文件。存放在不同目录下的话，执行权限不一样，如/bin/是针对所有用户，而/sbin/是针对root用户等等。
命令的格式：命令[-选项][参数]
主要学习了目录处理命令ls mkdir cd pwd，其中ls下的选项种类比较多，感觉l这个可能会经常用到，因为可以显示文件的详细信息，只要包含文件类型 文件权限 文件计数 所有者 所属组 文件大小 最后修改时间 文件名

 
序号130 的内容是: #每天进步一点点# 最近因为工作需要，要抓取客户端日志，所以开始接触adb。
【安装】
下载工具包，解压，配置环境变量即可使用
【使用】
直接通过DOS窗口操作命令
检查设备连接：adb devices
抓取日志：adb shell回车，再输入logcat即可，退出可用Ctrl+C
手机录屏存储到sd卡：adb shell screenrecord /sdcard/demo.mp4

 
序号131 的内容是: #每天进步一点点# 紧跟时代潮流，走向B站学习Linux视频之路，对比了鸟哥私房菜 马哥之类视频内容后，决定以B站播放量第一的视频来学习，毕竟看着主讲人发量是真少
，目前觉得讲的也比较有趣，比较适合新手入门，推荐。今天知道了通过命令行向远程服务器发送指令进行操作，工具是ssh

 
序号132 的内容是: #每天进步一点点# 看了看Linux入门文章，思考了下学习Linux的必要性，主要工作于服务器端，熟悉内部实现机制，可以更好的帮助我们提高定位bug产生的原因，而不用干等着开发来分析。继续keep

 
序号133 的内容是: #每天进步一点点# 
最近在学习Fiddler抓包，学了简单操作之后，总想找些东西来折腾一下。
于是，尝试着用Fiddler来抓网站登录的包来分析，并通过Python代码来模拟网站的登录。

从我目前接触过的网站登录，并对其过程进行抓包分析，大概总结了以下3种：

1，直接登录，这是最简单的一种。只需要用户名和密码，便可以写代码来模拟登录。

2，通过各种验证码登录，这个相对复杂些，一般可通过Selenium之类工具来模拟（这个我没有实践），或者通过cookies绕过验证码来实现，比如博客园的登录。

3，还有一种登录，除了用户名和密码外，还需要关联某些参数（每次请求时参数会变化），比如Github登录，它的登录过程中进行了重定向，并且在登录提交表单时需关联参数，否则无法直接通过代码模拟登录。

 
序号134 的内容是: #每天进步一点点# 
听老徐科普linux重要性，然后发现我完全空白，平时log也有看啊，数据库也有查啊。原来我们公司把这些都封装了，直接都是网页版了。
昨天搭建了云服务，今天装了个mysql，发现好难搞，习惯了windows图形化界面。弱弱的问一句，安装xshell以后是不是可以不用手打命令，可以复制粘贴

 
序号135 的内容是: #每天进步一点点# 
梳理Fiddler 抓包的原理，抓取https报文的设置。
学习的效率和方法需要调整
三 Fiddler _1原理 - 简书

 
序号136 的内容是: #每天进步一点点# 脱了这么久，总算把云服务器给买了，走出第一步，了解了下云服务器使用，接下来是数据库安装和环境部署

 
序号137 的内容是: #每天进步一点点# 
1了解restful的概念，软件架构设计的一种风格。对面向资源，打tag, link 
2 数据抓包的原理以及过滤的两种方法

三 Fiddler _1原理 - 简书

 
序号138 的内容是: #每天进步一点点# 
1解决昨天留下的关于公私秘钥的疑问;
2 梳理http，请求和响应的格式。
3 了解证书的由来，证书和公钥的关系。
2 HTTP请求和响应报文格式 - 简书
1.2 SSL证书 - 简书
1.1 对称&不对称加密 - 简书

 
序号139 的内容是: #每天进步一点点# 
今天主要出去玩了，抽时间了解对称和非对称加密的概念，还是不太理解非对称加密的实现。

 
序号140 的内容是: #每天进步一点点# 
1 面试一家通信设备的公司。
2 解决遗留的证书问题，明白了变SSK证书产生的背景，实现的过程。产生了新的疑问，遗留带解决。
(今天比昨天前进了一小步)
SSL的认识1 - 简书
通信设备 - 简书

 
序号141 的内容是: #每天进步一点点# 
4.11hm内推面试，本来还抱点希望，去到一聊感觉自己差距太大，默认失败。回去面试者还沟通了一下，觉得优秀的人真的优秀，差距很远，谦虚好学。最近面试了解到敏捷开发，持续集成持续交付持续部署概念，问敏捷是什么，懵…敏捷开发与瀑布流程有什么区别？大概了解到，面对频繁的需求变更，迭代使用敏捷开发，要求测试得快，就用到了持续集成过程，不知道对不对。

 
序号142 的内容是: #每天进步一点点# 
【今的自己进步得快了一点，开心！】
1 解决java 编写的发送get请求用例，编译时报SSLHandshake 错误的问题，关于证书还需要更多的了解。
2 Maven pom.xml文件配置依赖，下载jar包失败的问题进行回顾总结。后续补充遇到的其他问题。遗留setting.xml的存放路径
3 了解接口测试中的场景异常测试的初步概念。
4 遗留关于URL的梳理，不是所有的URL都能做接口测试。应该要进行分类，分为2类，请求文件资源和进行数据交互的。还要进行想一下

 
序号143 的内容是: #每天进步一点点# 
Vi命令
命令       说明
i       在当前光标处进行编辑
I       在行首插入
A      在行末插入
a      在光标后插入编辑
o      在当前行后插入一个新行
O      在当前行前插入一个新行
r       替换从光标所在位置后到一个单词结尾的字符
HOME   回到行首 
END  $  行尾  
gg    文档首行
G      文档最后一行首行
dd    删除光标所在行
2dd  光标向下删2行
5x     删除5个字符
cw    光标所在处开始至行末删除
u      撤回
yy    复制  p 粘贴
查找替换 将aaa替换成bbb      :1,$s/aaa/bbb/g
:%s/aaa/bbb/g

查找   /要查找的字符   向下查找n，向上查找N
强退 :q！
强制保存退出   :wq！

 
序号144 的内容是: #每天进步一点点# 去年的计划入门安全，掌握Java，现在落地Java。

Java分为三类：基础的JavaSE(面向对象，API，JVM等)，嵌入式的JavaME，还有后台服务的JavaEE。

开发环境分为三步:第一步，下载安装包并安装（安装的时候分为JDK和JRE两个程序，JDKJava的核心代码，JRE是运行代码时候需要的）。第二步，配置环境变量，分为Java_Home（JDK的安装路径），path（JDK命令文件的目录，也就是JDK下的bin目录），classpath（库文件，JDK下的lib目录）。

Java代码运行过程也是三步:第一步，创建一个Java文件并添加运行代码。第二步，在cmd环境下使用Javac编译为字节码文件，第三步，使用Java运行字节码文件(注意文件名不需要后缀)。
常用工具：Eclipse，并完成个性化配置。

 
序号145 的内容是: #每天进步一点点# 今天完成两套线上笔试，说实话不百度的话，规定的时间内根本就做不完，一些不会的题自己提交试卷后还是要琢磨下答案，感觉笔试题上的测试用例的设计基本上就一个黑盒，一个白盒，白盒没接触过，临时抱佛脚

 
序号146 的内容是: #每天进步一点点# 
1、公司有打回机制
2、打回是项目情况而定，对于内部系统来说提测质量不好就会打回，相应开发扣绩效，如果不打回导致上线延期就测试背锅
3、不打回的原因是有些项目发版时间时间，对接第三方平台，只能加班加点赶上线，事后举行总结大会

 
序号147 的内容是: #每天进步一点点# 昨天把周三面试别人问的题目，面完之后立马记下来的几个问题，又重新整理了下答案，参考别人总结的面试问题回答的原则，领悟每个问题的回答，除了说完理论知识以外，加一个自己项目中遇到的例子这样更有说服力

 
序号148 的内容是: #每天进步一点点# 
今天把linux 命令过完一遍，撒花！

 
序号149 的内容是: #每天进步一点点# 
作业题目关于项目研发流程，
为了提升效率和提测版本质量，很多公司引入了研发自测 。

那么，问题来了：
1. 你所在公司，是否有研发自测环节 ？
开发有自测环节

2. 这个自测范围和内容谁提供 ？每个提测版本，研发都自测哪些内容 ？
测试组输出基本功能测试用例，开发提测需要先自测通过，提测后先做冒烟测试。


3. 测试准入标准是什么 ？没自测通过的，如何处理 ？
开发自测通过，没通过版本，打回

4. 如果团队没有自测的，阐述下为什么没有，以及提测质量怎样 ？你有啥好的改进措施或吐槽 。
也有在无流程的环境中待过，经常死循环。

 
序号150 的内容是: #每天进步一点点# 
今日复习linux命令cd，mkdir命令
一、切换目录命令 cd
1、使用格式：cd dirname
dirname 表示相对路径或者绝对路径，如果目录省略则表示回到用户的home目录(也就是login时所在的目录)
    "~" 也表示为home目录的意思
    "." 则是表示目前所在的目录
    ".."表示当前所在目录的上一级目录
2、进入abc目录，使用相对路径：cd test/abc/
3、进入abc目录，使用绝对路径：cd /root/test/abc/
4、回到当前所在目录上一级目录
    cd ../
5、回到用户主目录（就是login时所在的目录，我是使用root用户登陆，所以是回到root目录）
    cd
    cd ~

二、mkdir命令
1、用于创建目录或者多级目录
使用格式：mkdir [选项] 目录名称
               -p  创建多级目录，目录存在时不会给出目录存在的提示信息，而是若目录已经存在，则不创建；若是不存在，则创建新目录
               -v  显示创建目录过程信息
2、创建一个abc目录，不加-p参数，若是目录存在，则无法创建，且提示目录已经存在
        mkdir abc  
3、创建一个test目录，使用 -v 参数，显示目录创建过程信息
        mkdir -v test
4、创建多个目录，使用{}将多个目录括起来，且每个目录之间通过英文逗号隔开(,)，彼此之间不能有空格
        mkdir {one,two,three}
5、创建多级目录，使用 -p 参数
        mkdir -p test/see-easybuy/log

简书路径地址：
mkdir 命令   
cd 命令  

 
序号151 的内容是: #每天进步一点点# 
1. 你所在公司，是否有研发自测环节 ？
有
2. 这个自测范围和内容谁提供 ？每个提测版本，研发都自测哪些内容 ？
研发根据需求，在代码上逻辑跑通，在自己的本地环境上实现满足需求的功能
3. 测试准入标准是什么 ？没自测通过的，如何处理 ？
研发自测过后，首先根据需求跑一遍主要功能，主要功能跑不通，直接打回去，让其重新自测

 
序号152 的内容是: #每天进步一点点# 
关于项目研发流程，
为了提升效率和提测版本质量，很多公司引入了研发自测 。

那么，问题来了：
1. 你所在公司，是否有研发自测环节 ？
答：有

2. 这个自测范围和内容谁提供 ？每个提测版本，研发都自测哪些内容 ？
答：自测范围和内容由开发人员自己提供；研发主要自测：已发布功能主流程、新功能详细验证、有时间会验证已解决缺陷

3. 测试准入标准是什么 ？没自测通过的，如何处理 ？
答：准入标准是：无崩溃、无主流程不通。开发一边自测一边改自测中遇到的问题（不是所有问题都改，一般只改会影响冒烟测试结果的），改了还会自测，如果自测中有严重缺陷、如主流程不通、崩溃、且在提测时间节点无法解决则不准入；未自测通过、提测日期延后1到2天，开发在规定时间内修复验证，验证通过后在规定时间节点内内提交测试版本

4. 如果团队没有自测的，阐述下为什么没有，以及提测质量怎样 ？你有啥好的改进措施或吐槽 。
答：还是经常出现提测后冒烟测试不通过的情况、改进的建议：建议开发参考测试组的冒烟测试用例优化自己的自测范围

 
序号153 的内容是: #每天进步一点点# 
1.今天维护了导师写的RIDE自动化测试功能测试用例，因为业务经常添加失败，新增判断失败就再点一次，修改部分因为需求变动导致的文案修改
2.测试需求，和产品撕逼，每次新来的产品都喜欢马上上线了搞事情（加需求之类的）
3.参加需求评审和产品撕逼
4.跟进线上反馈的问题，因为页面缓存导致的异常

今天阿里云大量异常，你受到影响了吗？

 
序号154 的内容是: #每天进步一点点# 
 1 学习linux 常用命令，已完成倒叙11天的命令练习，对应文档已输出50%。
2 学习实现第一个接口测试的视频。
【yum&scp】 - 简书
【df &du&ps clear】2019-03-21 - 简书

 
序号155 的内容是: #每天进步一点点# 关于Python 的configpaeser模块：
主要用于生成和修改配置文件。
最近在搭建自动化脚本得测试框架，准备把固定不变得数据库，邮箱，host地址，抽离出来，通过configparser读取
  
config = configparser.ConfigParser()
config.read("ini", encoding="utf-8")
实例化对象，读取配置文件

get(section,option)获取指定分组下指定名称的值

 
序号156 的内容是: #每天进步一点点# 
UI自动化测试
1、select标签选中value的三种方法使用Select类的
Select(s).select_by_index()-索引
Select(s).select_by_value()-value值
Select(s).select_by_visiable_text()-显示文本

2、alert弹窗
1）切换到alert弹窗
a = driver.switch_to_alert()
2)打印弹窗内容
print(a.text)
3)
确认：driver.switch_to_alert().accept()
取消：driver.switch_to_alert().dismiss()
输入：driver.switch_to_alert().send_key()
4)有时候遇到假的alert，就要用获取窗口的方式
handles = driver.window_handles
driver.switch_to_window.(handle[1])

 
序号157 的内容是: #每天进步一点点# 
今日复习了help、man、--help 3个命令的内容并在简书记录自己的学习内容，明日继续
linux的帮助命令help、man、--help - 简书

 
序号158 的内容是: #每天进步一点点# Linux命令学习
学习内容：
 1.学习less、head、tail命令
总结：
 1.more和less的比较（我个人觉得less比more好用）
   a）相同点：
     都按页的方式显示内容；
     space、enter、q、/的用法相同；
     都能向下按页翻、按行翻；
   b）不同点：
     more是在屏幕上显示内容，退出后内容还可以查看到，向上直接滑动屏幕滚动条即可；    
     less不是将内容显示在屏幕上，只能查看到一页的内容，可以通过按钮和命令上下翻页，退出后不占用屏幕空间；
     more：向下翻页翻到底部会自动退出该模式
     less：只能通过q命令退出该模式
     向下搜索字符串：more是将该页内容显示出来，less还会将搜索的字符串高亮显示
 2.意外发现：操作命令过程中发现了一个提示“You have new mail in /var/sppol/mail/root”，root是一个邮件，可以用less查看其内容。网上百度了下，这邮件内容是一些正常的系统信息或者重要的错误报告，可以不定时看看。
学习环境：
 1.在自己电脑上安装的VMare 10
 2.在WMare上装的CentOS 6.5

 
序号159 的内容是: #每天进步一点点# 最近在学习接口测试
   接口是前端与后端的桥梁，是数据传输的通道，接口测试本质上是对函数的测试。
一.学习了postman、jmeter和requests库对登录接口请求。
   我去找开发要到的接口文档直接是swagger链接，刚开始直接在swagger请求很方便，还在想为什么还用学习工具进行测试，后来发现swagger并不等于接口文档，在swagger传的参数哪个是必传，哪个参数只是后台状态的标记没有写清楚。
   在没有任何接口文档的情况就需要用charles+jmeter工具来测试。
二.有了测试工具为什么还要用requests库写测试框架，其实测试工具有很多不足的地方：
1、比如数据不可控：接口测试的本质就是调用接口输入数据，在验证接口返回的数据是否和预期符合，如果返回的数据不可控那么工具就无法断言结果。
2、工具无法测试加密的接口：比如说一个接口的入参需要签名验证，既是对当前的时间戳+密钥进行MD5加密后传输，因为时间戳是动态的，所以一般的接口测试工具是无法模拟的。
3、工具的拓展能力不足：比如想生成不同格式的测试报告等存在局限性。
综上所述：不同情况采用不同工具，用代码方式执行接口测试才是万能的。
三.今天在对jmeter参数化实战中一直提示：未知异常（登录接口）。发现的问题有：请求网址多了个空格；请求参数名字跟接口文档参数名称不一致；排除这些问题后点击请求后还是请求成功但是返回数据提示：未知异常。一直在纠结参数化是哪里有问题，最后我把其他的都禁用，直接用正确的账户和密码请求也报错，所以在做接口测试前先试试这个接口是否能够正常请求

 
序号160 的内容是: #每天进步一点点# 
今日话题：你所在公司，测试用例谁来写 ？是否有用例评审环节 ？谁来组织用例评审？
公司就一个测试，用例都是我写；没有用例评审环节，需求文档都没有，很多时候用例都没写，要上线了还在和开发、产品对需求，什么东西都急着上线。没有进行过用例评审。

 
序号161 的内容是: #每天进步一点点# 

迟到的记录…
本日内容：
1中午健身
2测试  
3组内会议，关于测试流程，和学习分享
 4学习Python循环语录  for循环和while循环
未完成项    没有背单词…   学习熬夜看了一节
原因白天打了两把游戏，路上看了会小说
给自己个微笑

 
序号162 的内容是: #每天进步一点点# 
1、学习
（1）学习python的运算符，与java不同的是**幂运算，//向下取整运算，<>比较运算，in和not in成员运算，is和not is身份运算，python没有++和--自增和自减运算，了解了is和==的区别（is比较地址，==比较值，特别的是对于两个较小的int值python采用了是同一个地址？所以is比较时是true）；
（2）学习python的条件判断if，和java大同小异，基本是格式不同。python有个一句判断，比如a=b  if len(b)>0   else print "b为空” ；elif同java的else if；
（3）学习python的lambda匿名函数，列如：a=lambda x,y:x+y，调用时print(a(3,4))

 
序号163 的内容是: #每天进步一点点# 
1 了解接口的本质，后台中某个方法，输出文档，比昨天的梳理感觉更清楚了些。
2 阅读图解HTTP52页，感觉很多概念讲得不是很明白透彻，估计背景知识需要再补补才能看轻松一点，解决方法找基础讲解的视频进行解惑。

 
序号164 的内容是: #每天进步一点点# 今天看到一篇面试文章，其中提到面试中肯定会被问到的一个问题“本次想找一个什么样的工作？”，内容如下图。
突然想到我自己也是这样子的，我是打算下家找个有接口测试的公司，但是我只做过一两个用JMeter做的接口性能测试，对常规的接口测试并不了解。然后网上找了下，百人计划群里问了下，总结了几点：
1）接口测试有分接口功能测试、接口自动化测试、接口性能测试
   a）接口功能测试：手动执行用例、验证返回的接口数据，相关工具有postman、HttpRequester等
   b）接口自动化测试：可以实现批量执行用例、对结果进行校验、生成报告，相关工具有JMeter、Robot Framework、soapUI等，在测试工具不能够满足的情况下，有时候需要通过写代码来实现更复杂场景，要会一门编程语言
   c）接口性能测试工具：用于验证接口处理并发的能力，相关工具有JMeter、Loadrunner、soapUI等
2）测试还分单个接口的测试、场景接口测试
3）接口测试用例的设计跟黑盒测试用例的设计方法是一样的
4）另外，为了找到一份期望的工作，所以我应该多学习这方面知识，而不是等到下个公司再学，到下个公司就应该是提升技能和获取更多经验为主了

 
序号165 的内容是: #每天进步一点点# 
一、工作内容
1.今日完成测试工作和测试用例编写
2.熟悉了see-go后台母商品的新增和发布，以及子商品的生成。
3.熟悉了新人专区优化需求中涉及的业务知识以及相关表
二、技术知识学习
1.通过了解nginx代理机制逻辑，解决昨天一个IP对应多个域名的疑惑
2.不过中间有些知识还是不是很理解，需要自己动手搭建使用一番才可以

 
序号166 的内容是: #每天进步一点点# Linux命令学习
学习环境：
1.在自己电脑上安装的VMare 10
2.在WMare上装的CentOS 6.5
学习内容：
1.学习cat、tac、nl、more命令
总结：
1.vi创建文件，还可以修改文件内容
2.cat正序显示，tac倒序显示，tac是cat的字母倒序
3.在学习新命令时，实际操作时会连带着其他命令也巩固了，因为需要准备数据
4.现在越敲越有感觉了

 
序号167 的内容是: #每天进步一点点# 
后台：上传流程
开发把代码打包成可执行的二进制文件，运维用docker打包镜像，并填写好版本号，再上传到镜像库，Kubernetes会根据版本号自动更新
后台：回滚流程：1.1回滚1.0
运维重新上传一个稳定的版本号镜像文件1.0到镜像库，Kubernetes会kill当前版本号镜像文件1.1，从镜像库中更新成稳定版本
客户端：上传流程
在web管理后台上传客户端zip包到阿里云服务器，用户使用客户端时会自动更新到最新版本。
客户端：回滚流程
在数据库删除刚刚上传的版本文件，用户使用客户端时不会更新。

 
序号168 的内容是: #每天进步一点点# 
上周四上线的版本，出了bug，是由于用户使用场景禁用DHCP，禁用tcp、udp端口导致的。今天改完了bug，晚上12点半测试完成上线了，着重去了解关于DHCP和TCP、UDP端口的禁用，分享了一篇文章到简书，已投稿“百人计划”专题。链接：关于禁用DHCP，禁用tcp、udp端口 - 简书

 
序号169 的内容是: #每天进步一点点# 
1、很认真地花了两个小时写了一下百人计划直播观后感和自己立了个flag

 
序号170 的内容是: #每天进步一点点# 
今日完成工作:
1.优化了自己负责模块的需求分解;
2.优化了测试用例;
3.查看并学习了同事的需求分解文档。
总结：
1.每个人的思维方式不同，所以对应的对平台的理解不一样，多学习同事的长处，同事多沟通；
2.重新梳理了一遍了对输入框的测试用例的理解与分析。
《软件测试的艺术》这本书今天到了，计划每天看半小时，把学习与理解到的新东西记录在印象笔记上。

 
序号171 的内容是: #每天进步一点点# Linux命令学习
学习环境：
1.在自己电脑上安装的VMare 10
2.在WMare上装的CentOS 6.5
学习内容：
1.学会了mv、rmdir、rm命令
2.意外发现history可以查看所有操作过的命令，到目前为止操作过222条命令
3.清除终端屏幕clear：并没有真正清除，只是把当前输入行显示在了首行
总结：
1.cp和mv：都可以操作文件和文件夹；操作的同时还可以重命名；cp操作文件夹需要参数-r，mv不需要
2.-i参数：在cp、mv、rm等命令中，发现加不加-i参数都无差别？（cp和mv，目标档存在时，不加-i也会提示是否覆盖；rm删除时，不加-i也会提示是否删除）

 
序号172 的内容是: #每天进步一点点#  今天，组件出现一个线上bug。当时的第一反应是很沮丧。马上着手问题的跟进，首先是复现问题，其次是定位问题，最后发现是开发将未提测的代码合并发布到线上，该榜单类型不典型，未加入基础走查，导致问题的出现。及时反馈开发，修复问题，更新版本。
总结:业务逻辑复杂的组件，未对类型进行覆盖，场景测试用例更新该类型榜单。
思考:对于未在提测范围导致的问题是否能规避？

 
序号173 的内容是: #每天进步一点点# 
1、今天写mysql删除语句的时候突然不知道咋写了，上网查询了，并且第一次在简书平台及时记录自己的学习内容
delete from offer;  --全部删除
delete from offer where offer_id=123; --只删除符合条件的

2、明白了项目组的“裂变、投放”，“渠道、非渠道”的概念
第一组
投放用户：在各大应用市场下载app注册的用户
裂变用户：通过微信小程序、h5链接分享注册的用户

第二组
渠道：通过各大应用市场下载app的方式注册用户，用户打标渠道标识
非渠道：通过微信小程序、h5注册的用户，用户打标非渠道标识

3、今日完成了分配的测试工作，并将安排的下一个的需求用例编写完成70%

 
序号174 的内容是: #每天进步一点点# 
#2019/03/12 日报#
一、进度
【输入】最近工作中要做持续集成测试，初步了解持续集成测试。
【输出】思维脑图
【今日疑问】主流持续集成测试工具有多个？发现很多人用Jenkins, 也见过有人用GitLab CI，选择标准是什么？

二、输出 思维脑图

 
序号175 的内容是: #百人计划# #每天进步一点点#
今天百人计划群的小伙伴关于测试用例进行了一系列的讨论，针对怎么可以减少无效测试用例以及相关的管理流程，我做了几点总结，请大家多多指教，一起讨论～

 
序号176 的内容是: #碎碎念# 在任何小群体，最好能快速让大家记住你 。并且留下点印记 。
否则，咋知道你是否优秀 。

比如，
有些同学，永远像空气，在此圈子待一年，我都不知道他的存在 。

建议，
1. 你可以在此圈子提问 。
2. 或者发表主题 ，记录你的成长，几年后，可以查询你当年在此圈子的成长点滴 。
3. 也可以在此圈子，老徐发表的主题下点赞留名 。以及评论发表你的观点 。
4. 或者，在圈子，发表主题 ，分享你的经验 。
5. 解答大家主题下的疑问 。

 

End

 
序号177 的内容是: #每天进步一点点# 从早起开始吧 。

早上抽点时间，看看圈子内容，梳理下当日的事项 。

 
序号178 的内容是: #每天进步一点点# 
叮叮～～连续输出10天，终于完成50%了
今天的阅读笔记涉及到具体的项目就不发出来了。

#2019/03/11 日报#

【阶段目标】截止3月17日前完成《软件测试-第2版》多重阅读笔记。

【当前进展】重点精读内容共7章169页，完成50%

【今日收获】了解了自动化测试。

【今日疑问】

 
序号179 的内容是: #每天进步一点点#  拖了一天，今晚终于把#百人计划# 4期的问卷调查发出来了 。

问题在3期的基础上，做了很多的优化 。

可以全访问的了解 每个测试工程师个体 ，以及 全方位的 了解 4期100人这个整体 。

也许，这就是，我这一年来，在管理方面的默默提升吧 ？

 
序号180 的内容是: #每天进步一点点# 
一、进度
#2019/03/10 日报#

【阶段目标】截止3月17日前完成《软件测试-第2版》多重阅读笔记。

【当前进展】重点精读内容共7章169页，完成37%

【今日收获】了解了集成测试、系统测试、验收测试和回归测试。

【今日疑问】如何更好地与领导相处，尤其是女领导。本人是女生，在实际工作中感觉男领导更好相处些，跟女领导相处有时感觉需要小心翼翼，但她是领导又不能不沟通，所以如何与女领导更好的相处呢？

【明日改进】加快进度。

二、阅读笔记

 
序号181 的内容是: #每天进步一点点# 3月10日
学习《玩转git》学到33课时

 
序号182 的内容是: #每天进步一点点# 
一、「进度」
#2019/03/09 日报#

【阶段目标】截止3月11日前完成《软件测试-第2版》多重阅读笔记。

【当前进展】重点精读内容共7章169页，完成27%

【今日收获】单元测试的主要技术。

【今日疑问】与工作有关，当领导分配给自己一项比较复杂的工作，而自己对这方面毫无经验，如何快速且高效拆解并给出合理的预期完成时间。

【明日改进】加快进度。

二、阅读笔记

 
序号183 的内容是: #每天进步一点点#  最近一直在思考，测试从业者的核心竞争力是什么，是脚本？工具？业务？

其实，仔细想想，还是 思维 + 经验 。

其他，都是手段 。

这些，没法速成，需常年累月，去沉淀，去总结，形成自己的方法论 。

 
序号184 的内容是: 如果大家真想跟着圈子一起每天成长一点点，每日进阶 。

可以发表主题，带上标签#每天进步一点点# ，见证自己的成长 。

比如，
今日产出了什么结果，学习了什么技术或者技能，有哪些经验可总结的，分享给大家 。

 
序号185 的内容是: 圈子使用指南，进圈必看 。
1. 建议下载「知识星球」APP，使用体验更好 。

2. 进来先看看最近几年的历史主题（咱圈子，已运营了1000多天）。

通过如下标签，快速找到你想要的 。

#公告# 

如果不知道圈子怎么用的，点 

 

 

 

 



 



 





 





 

补充，
问题精选模块，会精选老徐回答的典型通用问题，同步给所有测试从业者 。
均为IDO老徐原创回答，根据问题场景下的对应回答 。

3. 有任何问题，可点击顶部的「提问」

4. 圈子提倡经验分享，欢迎点击「发主题」分享 。

5. 先看顶部「精华」部分，看完有问题，随时提问 。

 
序号186 的内容是: #每天进步一点点#  今天一件高兴的事：收到ISTQB考试通过的消息

 
序号187 的内容是: #每天进步一点点# 
最近加入了一个新项目，从0开始
需要做的工作不少，在此列一下，大家也可以讨论一下自己公司的流程
人员：后端开发*2  iOS开发*2  Android开发*2  前端*2（主要工作是管理后台以及一些分享页面） iOS&Android测试*1（就是我） 后端&管理后台测试*1  设计师*1  产品*2（但是手上也都有其他项目）
工作内容：
1、 确认产品细节并设计用例
2、后端&移动端接口案例（目前准备用postman 
3、 考虑测试部署的方案（目前暂定jenkins

 
序号188 的内容是: #每天进步一点点#  最近在写公众号，内容主要是关于工作，学习，生活的思考。今天我把已经发表的文章整理到了简书专栏，地址如下，有兴趣的可以看一下。
Cynthia晶姐 - 专题 - 简书

在学习技术，学习专业知识的背后，对于学习、工作、生活方式，我想，也是需要一些思考和实践的，希望我的这些思考和实践，也有能够引起你共鸣的地方。谢谢！

 
序号189 的内容是: #每天进步一点点# 
当前用的禅道9.4版本有问题：除admin外其他人无法使用用例库。确定要升级版本：

提问圈内同行：
9.8.3版本和10.3.1那个稳定些？9.4版本升级到那个版本好点。

另：老徐说的禅道UI体验差，10.3.1就是全新改版的UI。可能我已习惯之前的界面，早上体验完新版UI，有些部分还是恋旧。
选择困难症。

 
序号190 的内容是: #每天进步一点点# 
测试通过标准

近期上线的某个项目并未达到测试组管理规范设定的通过标准，但因市场等各种原因，算妥协发布了正式版。对于这类项目的报告出具等很费心，因为遗留问题实在太多，不出具报告对自己不利，出具报告有违背起初设定的通过标准。

什么才是测试通过标准？以往常有听过领导问：“这个项目怎么就是测试通过了？”也常有开发问：“项目怎么才算通过测试？”

一系列的疑问，最好的解决方式是什么？重新审视了测试通过标准，感觉本身有缺陷：太过完美，看似可量化，站在不同角色看，实则无法很好量化，如何优化测试通过标准？

下文放了当前功能测试方面使用的部分通过标准，欢迎各位围观讨论总结，大家是如何定义通过标准的。
1、测试方案/用例覆盖程度：95%以上；
2、测试输出结果与预期输出之间的符合率：95%以上；
3、测试方案/用例的执行程度：100%；
4、缺陷处理情况：缺陷等级非常重要、重要需全部关闭，一般、建议性缺陷<10%。开发和测试有争议的缺陷需要经项目小组讨论后决定是否需要修改，若经讨论后确认可以忽略不改或因其他原因要在以后的版本中实现，则本次测试可以认为通过。

 
序号191 的内容是: #每天进步一点点# 
1. 复现线上bug，目前想法是查找发送话题日志，看用户是在app还是web发送
2. 继续补充接口案例，对接口还是不太熟悉，有些问题不清楚原因，周五尝试了很多次
3. 下午分享会，内容是kibana简单搜索

 
序号192 的内容是: #每天进步一点点# 
1. 英语阅读两篇，留声英语，长难句
2. 正式开始接口案例补充啦~目标完成五个
（其他任务都完成或者暂时搁置了，开心

 
序号193 的内容是: #每天进步一点点# 
1. 英语阅读两篇，留声英语，长难句
2. 安卓（GKJX）测试完成
3. postman继续学习，一边学习一边记录一边实践

 
序号194 的内容是: #每天进步一点点# 
1. 英语相关
2. 安卓（FT）补丁版测试完成
3. 安卓（GKJX）测试完成
4. 学习postman的script

 
序号195 的内容是: #经验分享#  #每天进步一点点#  这是罗胖的演讲，听完立刻整理精华，分享给大家

 
序号196 的内容是: #每天进步一点点# 
1. 英语相关学习*3
2. android新版本测试开始
3. 补充接口案例（这部分还是需要了解一下postman的规则
4. 确定分享的主题（下周一分享

 
序号197 的内容是: #每天进步一点点# 
1. 留声英语，英语阅读两篇，扇贝长难句
2. 优先完成ios测试
3. 继续补充接口案例

 
序号198 的内容是: #每天进步一点点# 
1. 留声英语，英语阅读两章
2. 摸索补充自动化接口反向案例
3. ios新版本测试完成度目标30%

 
序号199 的内容是: #每天进步一点点# 
1. 留声英语，英语阅读*2
2. 版本质量报告模板完成（中午前争取完成
3. 接口功能模块整理完成后开始写反向案例（等同事给文档
4. 开始测试新版本（虽然功能还不太清楚，估计要消耗一段时间熟悉功能

 
序号200 的内容是: #每天进步一点点# 
1. 留声英语，英语阅读两章
2. 回归新版本功能ios&Android
3. 整理接口自动化案例
4. 整理测试报告模板

 
序号201 的内容是: #每天进步一点点# 
1. 留声英语，英语阅读两章
2. 回归部分内容，发现一些小功能上个版本没有想到，加在这个版本中，提交ios新版本
3. 测试Android相关功能&上线
（上午去医院拆线了，上周拔了智齿，下午希望效率高一些）

 
序号202 的内容是: #每天进步一点点# 
1. 留声英语，英语阅读两章
2. 争取完成新版本的回归
3. 零碎时间整理一下52讲的内容

 
序号203 的内容是: #每天进步一点点# 
1. 留声英语，阅读两章
2. 提交上版本的bug分析到git（git提交还不太熟练，试了几次都没成功
3. 回归升级swift版本的新版本
4. 理解目前项目组的接口自动化，开始计划适用于移动端的接口自动化

 
序号204 的内容是: #每天进步一点点# 
1. HP，留声，职场写作
2. 用git提交每次版本的分析报告文件（摸索中
3. 着手准备学习接口自动化，先查询一些资料

 
序号205 的内容是: #每天进步一点点# 

今天发了多条产品思维方面的主题，建议所有测试同学多看看 。

不懂产品的测试，做不了好测试 。

 
序号206 的内容是: #每天进步一点点# 
1. 薄荷，HP，留声，职场写作
2. 寻找一个好的方式整理需求，目前想到的是思维导图或表格
3. 整理工作中的一些操作步骤

 
序号207 的内容是: #每天进步一点点# 
1. 🌿，HP，留声，职场写作
2. 整理这次测试中的一些方法，步骤
3. 整理功能的思维导图
4. 学习测试52讲1篇起

 
序号208 的内容是: #每天进步一点点# 
（我胡汉三又回来了
1. 🌿，HP*2，留声英语
2. 发布一个关于上个版本的调查问卷，让大家总结一下自己或对他人的建议，预计明天或后天开会
3. 针对上一版本的bug做分析，出图表（同上开会总结
4. 整理最近报名的课程，开始逐步补课
5. 跟踪后端bug
6. 辅助测试小程序

 
序号209 的内容是: #每天进步一点点#   软件测试52讲笔记--11 互联网产品的测试策略应该如何设计？ 软件测试52讲笔记--11 互联网产品的测试策略应该如何设计？ - 简书
软件测试52讲笔记--12 从0到1：你的第一个GUI自动化测试 软件测试52讲笔记--12 从0到1：你的第一个GUI自动化测试 - 简书
软件测试52讲笔记--13 效率为王：脚本与数据的解耦 + Page Object模型 软件测试52讲笔记--13 效率为王：脚本与数据的解耦   Page Object模型 - 简书

最新笔记~ 分享给大家～～

 
序号210 的内容是: #每天进步一点点# 
关于测试人员考证
昨天公司发了一个新制度：关于执业资格证书和职称证书的管理及奖励的，看完后，几家欢喜几家愁，可惜我在的是愁的一方，因之前并没有考过证，这行之前公司重能力，不在意证书，想想所有别人之前努力过的东西，总有一天还是有机会用上……

接下来，考证也会纳入计划，生活不易，我得为五斗米而折腰。

1.考什么？
结合公司奖励金额及个人近期发展规划，经网络及我们软件测试圈子搜索了一遍，整理了几个可考的方向：
(1)软件测评师：国家软考认证，中级职称；
(2)ISTQB：国际软件测试资格认证；
(3)PMP:美国项目经理协会项目经理认证。

2.如何考?
(1)报名：软件测评师7月底8月初开始报名，报名入口：
(2)备考：
a.备考资料：临时起义，购买那些有用资料，求圈中有经验的同学分享推荐；
b.学习：考试时间在11月份，时间紧，任务重，加上看书时间少，希望找到圈内志同道合考证之人共同鼓励，监督，指导学习，争取早日拿下。
c. 如何组建这圈志同道合的考证人：
请求老徐帮忙建个相关微信群，有共同目标的人申请加入。
也可加我微信，微信号：lanyangch

一直觉得考证无用，就像一直觉得读书无用，方到用时方恨少。期待圈内共同分享讨论之。

 
序号211 的内容是: #每天进步一点点#  
整理一波技术博客、网站 | Cynthia Wang 
自己搜集了一些测试及技术类博客网站，公众号等，放在我的个人博客上。分享给大家。
会持续更新，有兴趣也可以收藏了关注之。
大家有好的资源也可以在星球留言，一起分享。

 
序号212 的内容是: #每天进步一点点#   今日计划：
1. 本周52讲笔记输出，本周已输出技术类书籍笔记的格式调整及整理。
2. 本日重点是阅读非技术书籍并做笔记，思考如何优化自己的行动。以前没有这个习惯，看了书也没有得到应用。昨天中午和一位朋友聊过之后发现其实这是非常重要的！
摘录这位朋友的语录：
其实弱的实践也好过完备的理论
脑子里想 到 说出来 到 落在纸上 完全不是一回事，这就是一个并不轻松的思考过程，要费力的
可以做的很烂，要做出来
大不了改100遍 其实改不到10遍就可以比较好看了
如果不能输出，那基本就等于没用 还不如拿这时间去玩

 
序号213 的内容是: #每天进步一点点#  
先来个计划。每天学习2小时。

 
序号214 的内容是: #每天进步一点点#  WebTours环境搭建 
WebTours环境搭建 - CSDN博客  
有图片 实在这样发粗来更方便直接大家去博客看吧，抱歉，手机操作真的复杂了点。

 
序号215 的内容是: #每天进步一点点#  Python正则表达式笔记 - 简书 
学习了一下正则，学次忘n次，这次做个笔记总不至于忘那么快了吧！

 
序号216 的内容是: #每天进步一点点# 
第一次发布定个小小的目标以便坚持
1.学习30个单词
2.阅读一篇英语文章
3.工作效率提高一点不加班
4.软件测试52讲

 
序号217 的内容是: #每天进步一点点#  
1.今天开始了新版本的需求了解，准备明天的需求会～看了新版本的需求简直与竞品雷同程度极高，是不是自己做久了测试，有时候会用一种自我的感觉去评判新需求的设计真的很让人难以理解。例如，app有一个个人中心页面，有关于个人消息入口，但是新版本把消息中心入口迁移到了首页右上角位置！前两个版本刚把消息中心策略调整，使用了两个版本，又把消息中心策略改回了消息中心调整策略以前的策略！接着兼容测试中间两个版本是新版策略，两个版本以前的策略跟这个版本以后的策略都是一样的！好想采访开发技术人员，前面版本刚把消息中心策略调整，用了两个版本又把消息中心策略改回了最老的策略……接着技术还不是直接改回去就好，而是要考虑中间这两个版本的兼容……想想估计有种万马奔腾的赶脚……信息互通的互联网时代，到底有没有考虑设计得概念，设计属于自己的产品，培养属于自己的孩子。看到满大街的模拟，抄袭，真的突然对产品没有了什么大的兴趣。产品的策略也是异常的复杂，不知道给用户使用的产品为何要将需求策略设计如此繁杂，问起所以，会说运营点！是我没有真的没有透彻理解产品运营，还是只是对产品概念太过模糊？在后续工作中继续找答案……
2.关于app加入x5内核，请问有没有测试伙伴们对app调用x5内核有相关测试总结经验呢？
3.明天早会轮到我分享，把52讲的都翻了一遍～

 
序号218 的内容是: #软件测试52讲#   #内容整理官#   #我的2018#   #每天进步一点点#   第9课 软件测试工程师的核心竞争力是什么？
自省，设定目标，执行，成长～

 
序号219 的内容是: #软件测试52讲#  #内容整理官#  #每天进步一点点#  #我的2018#  第8课 以始为终，如何才能做好测试计划

 
序号220 的内容是: #每天进步一点点# 
Session是在服务端保存的数据，Cookie是在客户端浏览器中保存的数据，它们一起合作，来实现跨HTTP请求的数据共享。例如，当服务器第一次创建Session时，在内存中记录了用户的信息，同时会在HTTP协议中告诉客户端，需要在Cookie里面记录一个Session ID，以后每次请求都会把这个Session ID发送到服务器，服务器就可以知道这个用户是谁了，从而能从服务器端查询出此用户的各种相关信息。
——《测试囧事》讲述bug背后不好说的事

 
序号221 的内容是: #软件测试52讲#    #每天进步一点点#    #我的2018#    第7课 如何高效填写软件缺陷报告

 
序号222 的内容是: #每天进步一点点# 
    个人感悟：
        可能无法实现大公司的套路，但是他们也许是一个行业的方向。
        去QE前后变化，打开新的视角。

 
序号223 的内容是: #每天进步一点点#  读“去 QE 时代，测试开发者该如何迎难而上？”有感 - 简书 
读了一篇测试职业发展相关的文章，写了一篇感悟文，与大家共享。

 
序号224 的内容是: #每天进步一点点# 
读产品思维后分享
昆明今年雨多，连续几个周末都在下雨，刚好补上至少每周一篇的整理小结。就像老徐说的，得对自己承诺的事负责，对自己负责，才不会丢失信任。
想小结的问题很多，大多在圈里都有答案和思路，小伙伴们很棒。最后选中了一个近期自己较关注的话题：产品思维。
说到产品思维，大家首先想到的应该是产品经理，关于产品经理的，之前修行者一篇经典好文：Everyone is tester，可以顺带再温一下，一般好文我是反复看。

今天谈的产品思维，主要是看了梁宁产品思维后的一些整理小结。
1.什么是产品能力:人生的一个底层能力，一种踩在地上的自信和踏实感。具体说是：学会判断信息，抓住要点，整合有限资源，把价值打包成一个产品向用户交付。
2.如何拥有产品能力：
(1)一双眼睛：发现痛点，找到突破点；
(2)一双手：行动之手；
(3)一颗心：洞察人性的同理心。
3.文中一直提到的同理心，很有感触，可自己看得半知半解，但认为是个痛点，按文中总结为以下三项：
(1)会用满足、愉悦、不爽来度量一个产品到不到位。就像用这些词来衡量你和一个人的关系一样；
(2)能直面愤怒和恐惧。当你努力地想说服一个人，去做一件你看起来非常正确的动作时，对方不动，不是道理他不懂，而是他内心有恐惧，但他不想或不能直接告诉你。
(3)产品要顺应用户潜意识，关注用户体验。用户会口是心非，潜意识才是流露真实选择，人欲即天理，要尊重人欲。说到潜意识，想起了之前领导需求培训讲的一个案例，简单分享下：
sony准备推出Boomboxes音箱，他们召集了一些潜在的购买者，组成焦点小组，每个人都认为消费者应该更倾向于黄色。这次会议后，组织者对小组成员表示感谢，并告诉他们，在离场时，每个人可以免费带走一个Boomboxes音箱作为回报，他们可以在黄色和黑色之间任意选择，猜猜他们最后选了那个色？
结果每个人拿走的都是黑色音箱。我想这个案例已经能够看出，黑色是潜意识，黄色是他们在某种环境下做出的选择。
用户真实体验，我想不仅是产品经理，我们测试人员也是关注的重点。关于用户体验，书中写了五要素，由于时间及理解力原因，没看完，只好简单总结一下，有兴趣的伙伴可亲自看看书中描述。
(1)感知层；
(2)角色架构层；
(3)资源结构层；
(4)能力圈范围层；
(5)战略存在层。
还是那句话：人人都是产品经理，产品也是测试从业者职业发展的一种选择。

 
序号225 的内容是: #每天进步一点点#    
不能懒，一口气做了52讲的01-07课的笔记，分享出来。
以后要按时做笔记啦！

软件测试52讲笔记--01 从"用户登录"测试谈起 软件测试52讲笔记--01 从"用户登录"测试谈起 - 简书
软件测试52讲笔记--02 如何设计一个"好的"测试用例 软件测试52讲笔记--02 如何设计一个"好的"测试用例 - 简书
软件测试52讲笔记--03 什么是单元测试？如何做好单元测试？ 
软件测试52讲笔记--04 为什么要做自动化测试？什么样的项目适合做自动化测试？ 
软件测试52讲笔记--05 你知道软件开发各阶段都有哪些自动化测试技术吗？ 
软件测试52讲笔记--06 你真的懂测试覆盖率吗？ 
软件测试52讲笔记--07 如何高效填写软件缺陷报告？ 

 
序号226 的内容是: #每天进步一点点#  
读《测试架构师修炼之道》 -- 概览 - 简书 
好久没来了，写了篇读书笔记，分享给大家

 
序号227 的内容是: #每天进步一点点# 
 写完用例后，自己又去读一遍，找出很多有冗余和不通顺的地方，
花点时间不断地进行完善。
为什么要这么做？
就像小时候考试的草稿纸，通常越潦草的成绩越是不理想。
那么我想，写一份好的测试用例还有个好处就是，梳理“混乱”的需求逻辑。

 
序号228 的内容是: 性能测试入门（二）——LoadRunner
#自动化测试#   #每天进步一点点#

 
序号229 的内容是: #每天进步一点点#  今天看到一句话特别有感触，分享给圈内伙伴。 
做一件事，无论失败与成功，经历就是一种成功，你去闯一闯，不行你还可以掉头，但是，如果你不做，就像夜里想了一千条路，早上起来走原路一样的道理。
是不是很多时候我们总是想法很多，想学这个，想学那个，却因为遇到一点点阻碍就不实践或者放弃实践，半途而废。
你是不是有过这样的困扰期？

 
序号230 的内容是: #软件测试52讲#    #内容整理官#    #每天进步一点点#    #我的2018#  第6课 你真的懂测试覆盖率吗？

 
序号231 的内容是: #每天进步一点点#  
分享一下今天学习内容的感悟，软件测试52讲今天讲的是代码覆盖率。
之前我总以为单元测试是开发自己做的，就没有太多的关注细节，只是扫一眼报告上的百分比。

今天学习的内容给出一个新的思路：通过代码覆盖情况，反推测试用例的设计。

虽然很多公司可能连单元测试都不做，更不会有代码覆盖率的报告供测试参考，或者退一步说，有些测试人员本身也不具备相应的代码阅读能力。
但是这不妨成为另一个看待测试的角度，也提醒了我们，具有一定的代码阅读能力，可以加深我们对被测软件的理解，进而推动我们测试用例的设计。
有了这个思路在先，不妨利用业余时间主动增加这方面的知识技能，在合适的时间节点，就可以尝试推动实践，就比身边其他小伙伴要强了那么一丢丢。

至于其他测试思想、方法、技术的学习，也是一样，不管当前公司用不用得到，不管大家对测试的看法是否有偏见，永远保持一颗学习的心，在合适的时间就可以站出来，加以实践应用，长此以往，就会比别人更强。

 
序号232 的内容是: #每天进步一点点#  
今天的收获：在工作中了解app关于缓存机制：临时缓存，内存缓存，本地缓存，服务端缓存等～接触的产品测试涉及各种缓存，改天整理了与大家一起分享～各位有关于缓存的整理可以发言奥～多了解一些关于客户端各种缓存机制，可以对缓存问题处理得更得心应手！以前总觉得缓存就一种就是简单的临时缓存，没有深入了解过缓存对不同场景需要可以采用不同的缓存机制！技术很厉害👍🏻

 
序号233 的内容是: #每天进步一点点#  昨天提问，谢谢回答我的各位兄弟姐妹，今天我也来自问自答一下。请看图

 
序号234 的内容是: #软件测试52讲#   #内容整理官#    #每天进步一点点#    #我的2018#    第5课 你知道软件开发各阶段都有哪些自动化测试技术吗？

 
序号235 的内容是: #软件测试52讲#   #内容整理官#    #每天进步一点点#    #我的2018#    第4课 为什么要做自动化测试？什么样的项目适合自动化？
坚持下去，马上周末，避免拖延！

 
序号236 的内容是: #每天进步一点点# #软件测试52讲#  之前在学习的过程中，没有很好的去把学到的东西梳理成笔记，然后在今后的过程中，会去把学到的东西，梳理一篇，然后在梳理的过程中，加入一些自己的思考🤔，
欢迎拍砖与讨论

 
序号237 的内容是: #每天进步一点点#  
今天学习了一下jmeter参数化
视频中讲了三种，主要对cvs data set config 进行了操作使用。
有几点困惑
1存放参数文件都支持哪些格式?txt.  .dat... 
2jmetet录制要如何利用检查点来判断用已存在的用户登陆是成功的呢，不存在的用户登陆是失败的呢？没加断言之前查看结果树没有报错，加了断言发现错误，断言也是经过参数化的。未解决，明天再去调试一下
3哪几种参数化是经常用的呢？用户参数这种方法是不是用的很少？

 
序号238 的内容是: #每天进步一点点#  
没有合理安排好时间，今天学习jmeter在回放过程中查看结果树报错，再三检查是按照讲解一步一步来的，怎么会报错，后来看了下响应内容里面有乱码，可能是由于无法解析导致的，于是就百度查了如何解决乱码问题，提供了两种解决方法，每一种都验证过，最后选择最优方式。问题得到解决。 
    有时候跟着视频学习也有困惑，理论知识有点云里雾里，讲课的知识点和面都有限，突然觉得讲课老师也很重要呀，准备先系统的学习操作一遍，对于第一遍不懂的做好标记，后面再听的时候化为重点，需要的时候自己也需要利用信息去扩展。

 
序号239 的内容是: #每天进步一点点#  #今日复盘#  
1.今天测试工作与技术交流较多，转换方式交流，了解更多产品实现原理，推理出线上用户反馈问题！
2.部分组员工作汇报很细致，做到了优秀反馈！文字汇报+当面汇报，让我心安理解组员完成情况以及完成进度，解除了自己对其中疑问等～

沟通可以解决太多的自以为是想法，有时候自己所理解的，所想象的并不一定是对的，双方沟通确认才能更深层次理解其中玄机！

 
序号240 的内容是: #软件测试52讲#   #内容整理官#    #每天进步一点点#    #我的2018#    第3课 什么是单元测试？如何做好单元测试
看一遍，听一遍，写一遍，对于理解和掌握是有帮助的～

 
序号241 的内容是: #每天进步一点点#  
      整理了第二节如何设计一个好的测试用例，和别人的进行比较，看看有哪些地方还可以改善。
     公司从来不写用例，写的时候也多数是用来应付验收，最后才写的。没什么实用性。仅仅只是为了写而写，至于要写如何写并写好也从来没深入想过。
      自己有空余时间会试着写，但是至于用什么方法去写是没有概念的，也就单纯的提炼出功能点，然后对各个功能可能会出现的不同场景进行一一验证就可以啦。
      希望在以后的测试过程中带着思考往核心上靠拢去锻炼自己

 
序号242 的内容是: #每天进步一点点#  #内容整理官#  群里的话题引发的思考：（性能测试的指标谁来定？）


众说风云：


1.产品人员决定

2.测试人员自己分析自己决定

3.不是，是由需求文档订的。不过测试人员也应该评审需求书，提前思考自己所需的指标性数据，然后让相关人员补充完整。

4.通常有标准的指标规范文档


其实回答这个问题，我们需要结合测试的产品进行分析；
我们先来了解一下什么是性能测试？

性能测试是通过自动化的测试工具模拟多种正常、峰值以及异常负载条件来对系统的各项性能指标进行测试。负载测试和压力测试都属于性能测试，两者可以结合进行。类型如下:

压力测试：强调极端暴力 
稳定性测试：在一定压力下，长时间运行的情况
基准测试：在特定条件下的性能测试 
负载测试：不同负载下的表现 
容量测试：最优容量

在实际工作中我们经常会对两种类型软件进行测试：bs和cs，这两方面的性能指标一般需要哪些内容呢？

Bs结构程序一般会关注的通用指标如下（简）：
Web服务器指标指标：
* Avg Rps: 平均每秒钟响应次数=总请求时间 / 秒数；
* Avg time to last byte per terstion （mstes）：平均每秒业务脚本的迭代次数，有人会把这两者混淆；
* Successful Rounds：成功的请求；
* Failed Rounds ：失败的请求；
* Successful Hits ：成功的点击次数；
* Failed Hits ：失败的点击次数；
* Hits Per Second ：每秒点击次数；
* Successful Hits Per Second ：每秒成功的点击次数；
* Failed Hits Per Second ：每秒失败的点击次数；
* Attempted Connections ：尝试链接数；
CS结构程序，由于一般软件后台通常为数据库，所以我们更注重数据库的测试指标：
* User 0 Connections ：用户连接数，也就是数据库的连接数量；
* Number of deadlocks：数据库死锁；
* Buffer Cache hit ：数据库Cache的命中情况
当然，在实际中我们还会察看多用户测试情况下的内存，CPU，系统资源调用情况。这些指标其实是引申出来性能测试中的一种：竞争测试。
使用各种资源（数据纪录，内存等），看他与其他相关系统对资源的争夺能力。










由于工程和项目的不同，所选用的度量，评估方法也有不同之处。

不过仍然有一些通用的步骤帮助我们完成一个性能测试项目。步骤如下：

1． 制定目标和分析系统
2． 选择测试度量的方法
3． 学习的相关技术和工具
4． 制定评估标准
5． 设计测试用例
6． 运行测试用例
7． 分析测试结果

-------------------------------------------------------------------------------------------------------------------------

学习、分享，一起成长，改变生活！

图三没有显示，大家有兴趣可以查看我的博客

 
序号243 的内容是: #每天进步一点点#  #内容整理官#  今天和同事闲聊的时候，突然发现了一个可能大家都以为自己很清楚却容易被忽略和混淆的问题。

.net是不是就是c#？

你大脑里的第一个答案是什么呢？

下面我们来温习一下基础知识。

.net的含义：

一般指.Net Framework框架，是Microsoft为开发应用程序而创建的一个具有革命意义的平台。



上图是一个简单的.net框架。

.NET Framework是用于Windows的新托管代码编程模型。它强大功能与新技术结合起来，用于构建具有视觉上引人注目的用户体验的应用程序，实现跨技术边界的无缝通信，并且能支持各种业务流程。
 .net有2种交互模式，分别是B/S,C/S
c#的含义：

运行在.NET(CLR)上的，用于创建应用程序的一种高级编程语言。



  可以用C#语言通过Web Forms创建ASP.NET应用程序。
 它是专门为与Microsoft的.NET Framework一起使用而设计的。(.NET Framework是一个功能非常丰富的平台，可开发、部署和执行分布式应用程序)。
它是一种基于现代面向对象设计方法的语言，在设计它时，Microsoft还吸取了其他类似语言的经验，这些语言是近20年来面向对象规则得到广泛应用后才开发出来的。
有一个很重要的问题要弄明白：C#就其本身而言只是一种语言，尽管它是用于生成面向.NET环境的代码，但它本身不是.NET的一部分。.NET支持的一些特性，C#并不支持。而C#语言支持的另一些特性，.NET却不支持(例如运算符重载)！
两者之间的联系：

说了这么多，显而易见，.NET是框架平台，而C#是语言。但是，因为C#语言是和.NET一起使用的，所以如果要使用C#高效地开发应用程序，理解Framework就非常重要。

 
序号244 的内容是: #软件测试52讲#   #内容整理官#   #我的2018#   #每天进步一点点#   第2课 如何才算是“好的”测试用例

 
序号245 的内容是: 需求评审的时候，测试该做什么？
#每天进步一点点#   #经验分享#   
（以下均为业内人士的各家之言，仅提供参考，不具备权威性）

1）我参加需求评审的时候，总是没话说。

2）提前熟悉需求，有疑问的可以问，多思考。很多产品需求写的没那么细，测试就需要考虑得很仔细，如业务流程等。

3）产品写的应该都会存在漏洞，多说多想。

4）评审的时候听产品讲，好像写的很详细了，等自己去熟悉需求时，发现这也没写清楚，那也没写清楚，考虑不全面。经常是在测试的时候才会发现到需求不明确的地方多，跟开发，产品的理解不一致。

5）我们在写测试方案和用例得时候就要熟悉所有的需求。

6）感觉没什么问题。会议后梳理测试点和用例时候就这种那种问题，有些需求就不合理，然后又导致需求变更。

7）每个人先把需求过一遍，带着各自的问题开会，才能叫做需求评审会议。

8）过需求评审之前，先看一遍需求。疑问点提前记下来，带着疑问去听。平时多锻炼产品思维，多看看别人家的产品。

参考：

 
序号246 的内容是: #每天进步一点点#  难道我们真的要一直安逸生活下去吗？
人生或许就是如此，与其迷茫地挣扎在无边的痛苦中，倒不如趁年轻放手一搏，去选择你想要的生活，并为之奋斗努力，那样你才会觉得生活是有价值的。觉得不是自己想要的，就要努力去争取！结束周末，新的美好又要开始啦！

 
序号247 的内容是: 性能测试入门（一）
#每天进步一点点# #经验分享# 

性能测试 Performance Testing
在一定的负载情况下，系统的响应时间等特性是否满足特定的性能需求。

区分以下用户数概念
-最大用户数（预计用户数）
-在线用户数
-并发用户数

性能测试类型
负载测试（Load Testing）
压力/强度测试（Stress Testing）
配置测试（Configuration Testing）
容量测试（Volume Testing）
基准测试（Benchmark Testing）
并发测试（Concurrency Testing）

性能分析
前端性能（图片大小，页面大小，缓存，请求数个数，js/css个数）
硬件（cpu，内存，硬盘等）
操作系统（windows,Linux）
服务器(web服务器，tomcat，weblogic，websphere等等)
数据库（关系型，非关系型数据库）
代码（算法）
框架（开发环境）
网络（带宽等）

软件的性能指标
1.响应时间（反映系统处理效率指标。在C/S环境中，从客户方测量响应时间，随负载的增加而增加）
2.吞吐量（反映系统处理能力指标，是单位时间内完成工作的度量。在C/S环境中，从服务器方进行评估。系统最慢的点决定整个系统的吞吐率，称此慢点为瓶颈）
3.资源利用率（反映系统能耗指标（cpu，内存，磁盘I/O）

性能测试工程师技能要求

 
序号248 的内容是: HTTP相关的性能技术要点#每天进步一点点#  #我的2018#  
HTTP（Typertxt Transfer Protocol）超文本传输协议，是一种请求/响应式的协议，基于TCP协议来进行传输数据。一个客户端与服务器建立连接后，发送一个请求给服务器，服务器接到请求后，给予相应的响应信息。
<版本介绍>
HTTP/0.9：是一种简单的用于网络间原始数据传输的协议。
HTTP/1.0：由RFC 1945定义，在上一版本基础上改进，允许消息以类MIME信息格式存在，包括请求/响应范式中的已传输数据和修饰符等方面的信息。
HTTP/1.1：由RFC 2616定义，要求更加严格以确保服务的可靠性，增强了在上一版中没有充分考虑到分层代理服务器、告诉缓存、持久连接需求和虚拟主机等方面的能力。
HTTP的增强版：简称S-HTTP或HTTPS，即HTTP协议 + SSL（安全套接层）。
通过HTTP或HTTPS协议请求的资源由统一资源标识符（Uniform Resource Identifiers,URI）来标识。HTTP URL是一种特殊类型的URI，格式如下：
http://host[":"port][abs_path]
http：表示要通过HTTP协议来定位网络资源。
host：表示合法的Intnet主机域名或者IP地址。
port：指定一个端口号，为空时默认80。
abs_path：指定请求资源的URI；如果URL中没有给出abs_path,它作为URI时，必须以“/”的形式给出，这个通常浏览器会自动完成。
HTTP是一个基于请求与相应模式的、无状态的、应用层的协议。每一次完整的交互过程都包含HTTP请求和HTTP响应。
HTTP的请求由三部分组成：请求行、消息报头，消息正文（可选）。
请求行格式为：Method Request-URI HTTP-Version CRLF
Method：表示请求方法。
Request-URI：是一个统一资源标识符。
HTTP-Version：表示请求的HTTP协议版本。
CRLF：表示回车和换行（除了作为结尾的CRLF外，不允许出现单独的CR或LF字符）。
例如：GET / HTTP/1.1
      或 POST /page/csc/customer/main/queryNewCustomerPageList HTTP/1.1
请求方法（所有方法全为大写）有多种，含义如下：
GET：请求获取Request-URI所标识的资源。
POST：在Request-URI所标识的资源后附加新的数据。
HEAD：请求获取由Request-URI所标识的资源的响应消息报头。
PUT：请求服务器存储一个资源，并用Request-URI作为标识。
DELETE：请求服务器删除Request-URI所标识的资源。
TRACE：请求服务器回送收到的请求信息，主要用于测试和诊断。
CONNECT：保留将来使用。
OPTIONS：请求查询服务器的性能，或者查询与资源相关的选项和需求。
GET、POST、PUT、DELETE比较常用。
HTTP的响应由三部分组成：状态行、消息报头、响应正文。
状态行格式为：HTTP-Version Status-Code Reason-Phrase CRLF
HTTP-Version：服务器HTTP协议的版本
Status-Code：表示服务器返回的响应状态代码
Reason-Phrase：状态代码的文本描述
CRLF：表示回车或换行
例如：HTTP/1.1 200 OK(CRLF)
状态代码有3为数字组成，第一位数字代表了响应的类别，且有5种可能取值：
1**：提示信息——表示请求已接收，继续处理。
2**：成功——表示请求已被成功接收、理解、接受。
3**：重定向——要完成请求必须进行更进一步操作。
4**：客户端错误——请求由语法错误或请求无法实现。
5**：服务器错误——服务器未能实现合法的请求。
常见状态码、状态描述的释义如下：
200 OK                           //客户端请求成功
400 Bad Request           //客户端请求有语法错误，不能被服务器所理解
401 Unauthorized          //请求未经授权，这个状态代码必须和WWW-authenticate报头域一起使用。
403 Forbidden    //服务器收到请求，但是拒绝提供服务
404 Not Found   //请求资源不存在，eg：输入了错误的URL
500 Internet Server Error //服务器发生了不可预期的错误
503 Server Unavilable  //服务器当前不能处理客户端的请求，一段时间后可能恢复正常

 
序号249 的内容是: #每天进步一点点#  
一个人测试的东西有点多了，ios，安卓，后台，突然后台一个模块要测试，措不及防，测着突然有个功能实现的不易用，就找开发切磋，说着说着自己声音就大起来了，最后一起跑产品那，让产品做决定，我脾气有点暴躁了，可能产品碍于我的面子，就把这个问题推后解决了，涉及到框架的问题了，版本前期没有时间改动。

刚下班路上回想了下，做错了好多事情：
软件没有熟悉透彻就乱提改进，如果熟悉了软件构造会不会有更好的建议，开发更容易实现些；
提bug前，没有好好的确定下这是不是个bug；
遇事急躁，如果能心平气和的沟通，会不会完美的解决。

想了一路，还是觉得，功能认可，易用性实现的方式不对，明天再找开发沟通下。

 
序号250 的内容是: #每天进步一点点# 
1.基本三项
2.完成一个功能点的iOS测试
3.完善测试用例
4.利用零碎时间写篇文章

 
序号251 的内容是: #每天进步一点点#  #经验分享#  
面经
1. 面试被问到，post请求结构，该怎么回答？

（答题思路）
把协议几大组成部分说一下（请求头，请求体什么的），再把post请求的特点说一下，就差不多了。

以上回答by深圳-点工

2. 开放性问题，随机播放怎么测？

了解此功能的特性及软件的领域，确定测试的范围和目标，可以从不同测试的角度去考虑，根据测试类型依次编写案例去测。

如果没问你测试什么，而是问你怎么测，你就要考虑测试的全局性（功能，性能，接口，安全，...）

以上回答by北京-性能全栈-小咕噜

内容整理by上海-L2

 
序号252 的内容是: #每天进步一点点# python进行中-复习一遍字符串的常见操作：
如如有字符串如有字符串mystr = 'hello world itcast and itcastcpp'

1、find
检测 str 是否包含在 mystr中，如果是返回开始的索引值，否则返回-1
>>>mystr.find("itcast")
12
>>>mystr.find("gao")
-1
>>>mystr.rfind("itcast")
23
注：返回数值为找到字符串的第一个字母在原字符串的下标
       find从左边找，rfind从右边找

2、index
跟find()方法一样，只不过如果str不在 mystr中会报一个异常
index从左边开始，rindex从右边开始

3、count
返回 str在start和end之间 在 mystr里面出现的次数
>>>mystr.count("itcast")
2
>>>mystr.count("jadlw")   
0           #找一个不存在的字母 

4、replace
把 mystr 中的 str1 替换成 str2,如果 count 指定，则替换不超过 count 次。
mystr.replace(str1, str2,  mystr.count(str1))
>>>mystr.replace("itcast", "ooo")
 'hello world ooo and ooocpp'
>>>mystr.replace("itcast", "000",1)
 'hello world ooo and itcastcpp'
注：从左往右依次替换，字符串元组类型为不可变类型，该操作能得到一个新的结果，而不会对原字符串有改变。

5、split
以 str 为分隔符切片 mystr，如果 maxsplit有指定值，则仅分隔 maxsplit 个子字符串
>>>mystr.split(str=" ") 
['hello'，'world'，'itcast'，'and'，'itcastcpp']
>>>mystr.split(str=" ", 2)
['hello'，'world'，'itcast and itcastcpp']
注：比如用空格切，切完后空格就没了，好比用切木头，一切两半，中间会有点损耗。

6、capitalize
把字符串的第一个字符大写
>>>mystr.capitalize()
 'Hello world itcast and itcastcpp'

7、title
把字符串的每个单词首字母大写
>>>mystr.title()
 'Hello World Itcast And Itcastcpp'

8、startswith
检查字符串是否是以 hello 开头, 是则返回 True，否则返回 False
>>>mystr.startswith(hello)
Ture
>>>mystr.startswith(Hello)
False

9、endswith
检查字符串是否以cpp结束，如果是返回True,否则返回 False.
>>>mystr.endswith(cpp)
Ture
>>>mystr.endswith(app)
False

10、lower
转换 mystr 中所有大写字符为小写
>>>mystr = 'Hello WOLDrld itcast and itcastcpp'
>>>mystr.lower()
 'hello world itcast and itcastcpp'
比如一个程序退出必须是小写的yes，但是用户输入的可能是yes,YES,Yes等等，就可以用这个直接把用户输入的转换成小写。

11、upper
转换 mystr 中的小写字母为大写
>>>mystr.upper()
'HELLO WORLD ITCAST AND ITCASTCPP'
作用就是为了防止用户输入的和你期望的不一样的，统统转换成一种样式

12、ljust
返回一个原字符串左对齐,并使用空格填充至长度 width 的新字符串
>>>mystr = "hello"
>>>mystr.ljust(10)
'hello     '

13、rjust
返回一个原字符串右对齐,并使用空格填充至长度 width 的新字符串
>>>mystr = "hello"
>>>mystr.rjust(10)
'     hello'

14、center
返回一个原字符串居中,并使用空格填充至长度 width 的新字符串
>>>mystr = "hello"
>>>mystr.center(10)
'  hello   '
注:填的width值为整体的长度，而不是填充的空格长度
可以参考类型网易云音乐歌词显示的样式

15、lstrip
删除 mystr 左边的空白字符
>>>mystr = "    hello"
>>>mystr.lstrip()
"hello"
>>>mystr = "    hello   "
>>>mystr.lstrip()
"hello   "

16、rstrip
删除 mystr 字符串末尾的空白字符
>>>mystr = "    hello   "
>>>mystr.rstrip()
"    hello"

17、strip
删除mystr字符串两端的空白字符
>>>mystr = "    hello   "
>>>mystr.strip()
"hello"

18、partition
把mystr以str分割成三部分,str前，str和str后
>>>mystr.partition("itcast")
('hello world'，'itcast'，'and itcastcpp')

19、rpartition
类似于 partition(),不过是从右边开始。
>>>mystr.rpartition("itcast")
('hello world itcast and'，'itcast'，'cpp')

20、splitlines
按照行分隔，返回一个包含各行作为元素的列表
>>>mystr = "hello\xxx\ooo\aaa"
>>>mystr.splitlines()
['hello'，'xxx'，'ooo'，'aaa']

21、isalpha
如果 mystr 所有字符都是字母 则返回 True,否则返回 False
>>>mystr = "hello"
>>>mystr.isalpha()
Ture
>>>mystr = "123"
>>>mystr.isalpha()
False
>>>mystr = "hello123"
>>>mystr.isalpha()
False

22、isdigit
如果 mystr 只包含数字则返回 True 否则返回 False
>>>mystr = "hello"
>>>mystr.isalpha()
False
>>>mystr = "123"
>>>mystr.isalpha()
Ture
>>>mystr = "hello123"
>>>mystr.isalpha()
False

23、isalnum
如果 mystr 所有字符都是字母或数字则返回 True,否则返回 False
>>>mystr = "hello"
>>>mystr.isalpha()
Ture
>>>mystr = "123"
>>>mystr.isalpha()
Ture
>>>mystr = "hello123"
>>>mystr.isalpha()
Ture
>>>mystr = "hello   123"
>>>mystr.isalpha()
False

24、isspace
如果 mystr 中只包含空格，则返回 True，否则返回 False
>>>mystr = "hello123"
>>>mystr.isalpha()
False
>>>mystr = "    "
>>>mystr.isalpha()
Ture

25、join
mystr 中每个字符后面插入str,构造出一个新的字符串
>>>str='" "
>>>name = ["my"，"name"，"is"，"xixi"]
>>>str.join(name)
'my name is xixi'

 
序号253 的内容是: #每天进步一点点#    #经验分享#    #测试的危机意识# 你有听过在北上深三地，干测试两年，薪资不过万就是在混日子的说法吗？坐标上海，三年功能测试，跳槽后月薪11k，薪资待遇是高了还是低了？邀请月薪过万的朋友来讨论一下这个话题。

回答：
1. 其实有点低。要看她三年都做了什么，如果本身硬件条件够硬应该可以多去要一点的。现在要求的人才都是复合型人才什么都要会一点。所以纯功能的话是不好要价格。客观地说，要么面试答得不如预期，表现出来就只值这些。要么一开始就要低了。

2. 三年只会功能测试的话，这种公司不会开太高，之前带我的人说的，公司会觉得有几年工作经验了，但是还是只会功能的话，说明不行。不知道是不是这样。

3.工作前几年通过频繁跳槽，可以获得薪资的快速增长，这是事实，即便这个人能力不是很高

4.到了3-5年是个坎儿，这个阶段大部分会开始考虑提高自己，因为在面试的时候，已经发现了大部分公司更愿意为能力买单而不是经验

5.这种横向对比，其实意义不大。要想知道自己到底值多少钱，最好的办法就是出去面试。给自己一个较高的期望值，然后在面试中调整

6.随着工作经验的进一步增加，能力的比重越发凸显，如果能力不足以撑起你的经验，这时候经验会成为你的减分项、负担。因为同样一万五，企业更愿意找一个工作三四年的，而不愿意找一个七八年的

7.而薪资的最终体现，是你在同行业中的水平

8.以上指的是依靠自己能力，不包含有某方面资源、背景、家族人脉等的人

9. 所以最终归于学历+年限+技术

10. 随着年限的增加，学历和年限的作用也都在淡化

以上回答by上海-修行者、黄烦烦的蓝朋友、无眉大侠钱串串

内容整理by上海-L2

相关链接：现在的测试行业，主要考查个人哪些方面的能力？

 
序号254 的内容是: 面试被问到，业务运行中看不到日志有哪些原因？#经验分享#   #每天进步一点点#   

1. 可能被吃了，也就是try catch 住了，没有抛出来，也就是没打印日志

2. 代码处理的问题，一般开发会对日志做一个全局处理，然后看这个全局处理会不会打印出来

3. 日志配置文件出错了，try catch也可以输出日志

以上回答by上海-名字好难起、杭州-放大镜后面的…

内容整理by上海-L2

 
序号255 的内容是: 提测前应该做什么？#每天进步一点点#  #经验分享#  #我的2018# 
1.预读需求文档，熟悉需求原型，标记不清晰的内容
2.参加需求评审会，参与需求讨论
3.理解业务需求的必要性，把握需求业务整体主干，梳理出业务流程图
4.归纳出测试功能点，评估工作量
5.完善测试用例
6.组织产品经理，研发人员等相关人员参加测试用例评审会议
7.测试用例的修缮

 
序号256 的内容是: 如何与开发沟通BUG#经验分享#  #每天进步一点点#  
永远也不要对一个程序员说：你的代码有BUG。
他的第一反应是：1、你的环境有问题吧？2、傻哔你会用吗？

如果你委婉地说：你这个程序和预期的有点不一致，你看看是不是我的使用方法有问题？
他本能地会想：操，是不是出BUG了！
以上内容网络采编

内容整理by上海-L2

 
序号257 的内容是: #每天进步一点点#  最近在学习接口测试，看了多方资料，学得有点凌乱，所以自己整理了一下接口测试的一些入门性的东西加强记忆。

 
序号258 的内容是: #每天进步一点点# 
1. 每日基本三项
2. 新功能测试用例
3. jenkins ios打包

 
序号259 的内容是: 面试时被问，接口是怎么做的？#每天进步一点点#  #经验分享#  
（答题思路）
1.回答为什么WHY做接口测试
2.回答什么时候WHEN开始做接口测试，以及主要测试的接口
3.具体是怎么HOW做接口测试的，也就是接口测试的方法
4.最后简单的总结一下你做的接口测试(对质量的影响)
以上回答By 上海-修行者

继续问：为什么要做接口测试？
答：1.收益较高
2. 发现很多页面上操作发现不了的bug
3. 接口是对后端的测试，检验整体业务逻辑是否能够实现，其实也算是功能测试，根据接口文档，设计测试用例
以上回答by杭州-笑笑，北京-功能自动化

内容整理by上海-L2

 
序号260 的内容是: 上线前BUG修复率达到多少符合要求#经验分享#  #每天进步一点点#  

按照测试要求，上线前BUG修复率当然是100%，但实际中，每个BUG的情况不同，每家公司的要求不同，不能一概而论，还是要根据实际情况定夺标准。
现在说说我们公司的实际情况，希望可以作为参考案例之一：
BUG产生的原因主要有以下几方面：
1.由需求不明确导致，需求评审时没有完全暴露出的问题，需要耗费大量时间及流程解决的，问题指给产品经理，由产品经理定夺上线时间，一般情况如需求很重要且很紧急，增加需求，研发，测试通过，本期上线。反之，下期研发。
2.由于需求理解偏差，或需求漏掉的，本期要修复。
3.由于代码错误导致，本期要修复！
4.由于代码错误导致，但是偶现的问题，经过努力尚未抓住来源的，提出问题，持续跟踪，上报组长，反馈给产品，如不影响流程，一般会延期，但测试报告中一定明确记录问题及进展情况。
第一篇输出，希望保持。有点困了，如有遗漏，请多包涵，后续完善。另，欢迎评论指教。

 
序号261 的内容是: #每天进步一点点# 
1. 基本三项
2. 梳理功能脉络，完善测试用例
3. 查找新api对app功能的影响

 
序号262 的内容是: #每天进步一点点# 
1. 每日基本三项
2. 新功能测试点梳理，完成测试用例
3. 继续jenkins部署ios自动打包

 
序号263 的内容是: #每天进步一点点# 
1. 基本三项
2. 回归web上线导致的app推送问题
3. jenkins创建ios自动打包

 
序号264 的内容是: #每天进步一点点# 
1. 🌿⚡️ 🆕
2. 昨天本来上线的需求目前又进入了需求讨论阶段，对完成的功能不太满意，UI方面的，不知道大家在项目中有没有遇到同样的问题
3. 确定需求后继续测试
4. 未确定时继续研究app的自动部署，需要跟运维沟通一下jenkins服务器的问题

 
序号265 的内容是: #每天进步一点点# 
1. ⚡️ 🌿 🆕
2. 上线web新功能
3. 如果有时间继续研究app自动打包

 
序号266 的内容是: #每天进步一点点# 
只想说一句话，激励自己：
差一点，就差很远，加油

 
序号267 的内容是: #每天进步一点点# 
超详细测试用例设计实践
超详细测试用例设计实践一：用例划分与设计 - 51Testing软件测试网
超详细测试用例设计实践二：解决方案和总结 - 51Testing软件测试网
Sandboxie(又叫沙箱、沙盘)即是一个虚拟系统程序，允许你在沙盘环境中运行浏览器或其他程序，因此运行所产生的变化可以随后删除。

 
序号268 的内容是: #每周复盘# 
1快速阅读 过滤了书本某些比较啰嗦的地方，每一章都画了思维导图
2圈子看了近20 天的
3继续跑用例，找到了一些用例没有包括的点，记录问题，准备提交开发
#每天进步一点点# 
1 继续跑用例
2继续快阅

 
序号269 的内容是: #昨日复盘# 
1. 听了周末的管理答疑部分，结合这段时间自己的一些反思，受益了，管理方面智者见智仁者见仁，但是万变不离其中。
近段跟同事（老朋友）聊天，发现了自己存在的问题：
--有时候手放的太宽，如果对方的能力达不到或是高估了对方的能力，就会出现一些问题，今后自己会在这边加强注意，选人是一种能力，是各个方面的评估。

--自己知道的问题，以为别人也懂的，这就是沟通的问题，沟通是双方的，你不说你没懂，别人永远不知道存在的问题，所以怎么快速建立一个互通的过程，值得注意

--做事有些粗枝大叶，对细节问题处理欠缺

2.自动化，课程回听，之前只用过postman，其他的都还没怎么接触，试着用一用。

3.做事情要坚持有始有终，百人计划还未结束，还是按照之前的目标，继续走

 
1.听书
2.调整工作状态，效率
3.听课总结

 
序号270 的内容是: #每天进步一点点# 
上班
1微金融 安全中心和预约服务 跑用例
2修改报告格式（统一 应对检查）

下班
3《用例编写技巧》完善微金融用例
4《gdt》chp2快阅

 
序号271 的内容是: #每周复盘# 
1越来越肯定的一点：克服阅读拖延的很重要的方法是快速阅读和对看到的点进行已知知识或者待解决问题关联；暂时忽略过难的（远离已知边界的）和对解决即时问题关系不大的点，做好未阅标记即可！
2改成中午去运动了，晚上运动容易睡不着，并且和一日三餐饮食量分配可能更配。努力调整中
，不能让自己饿着瘦
3有人了解Gdt时间管理吗？想向大家抛出一个问题：项目的下一步行动，如果是等待他人执行项，那么应该怎样分开写？（自己执行的和等待他人的原则上是不同类别的事项，应该分开写）

 
继续快阅，关注重点，关注可成长点。老徐的课程落下了不少，该反思反思了...

 
序号272 的内容是: #每天进步一点点#
这段时间处于自我放飞的日子，心情的低落期慢慢平复，开始学习
1.补停周末自动化课程
2.补停周末管理答疑
3.输出总结

 
序号273 的内容是: #每天进步一点点# 
2018.05.18
1、工作：完成新模块二期版本测试用例+用例评审
2、技术：Python基础复习-字符串
3、其他：整理Toby在测试流程中的应用，整理记事
准备租房，收集一下中介平台信息，之前没怎么接触过

 
序号274 的内容是: #每天进步一点点# 
2018.05.17
1、工作：紧急版本测试->完成；新版本测试->完成测试用例编写
2、技术：Python基础复习->基础算法
3、阅读《以解决计算问题为导向的Python编程实践》第4章
4、Toby应用研究及推广；Leanote应用研究->编写记事

 
序号275 的内容是: #每天进步一点点# 
1. 🌿⚡️🆕
2. 完成app功能测试
3. 整理昨天部门内讨论关于软件质量监测把控的解决方案并输出

 
序号276 的内容是: #每天进步一点点# 
2018.05.16
1、工作：新模块二期测试用例编写/紧急版本测试
2、技术：Python基础复习-算法与程序开发
3、阅读：《以解决计算问题为导向的Python编程实践》第三章
4、其他：蚂蚁笔记客户端版试用

 
序号277 的内容是: #今日复盘# 
2018.5.15
1、完成上线及新版本评审
2、确定周末团建方案及地点
3、补听2条老徐每日5分钟的管理分享
#每天进步一点点# 
2018.5.16
1、总结已上线版本中的各种问题，参加公司培训
2、学习老徐的管理分享

 
序号278 的内容是: #每天进步一点点# 
1、跟进今日上线版本，新版本需求评审
2、确定周末团建方案
3、补听前几天老徐每日5分钟的管理分享

 
序号279 的内容是: #每天进步一点点# 
2018.05.15
1、工作：新模块版本二期测试准备（熟悉业务、了解数据表结构、配置好CRT/NAVICAT/GIT等工具）
2、技术：Python基础复习-控制语句深入复习
3、阅读：《以解决计算问题为导向的Python编程实践》第二章
4、其他：试用新的插件Toby/YYNote

 
序号280 的内容是: #每天进步一点点#  第三次把科二考过，第四次才把科三考过的经验心得有人想要听么
 感觉大家都这么聪明，应该用不到
还剩一门科四，继续加油～～

 
序号281 的内容是: #每天进步一点点# 
1.Python编程题2道
2.阅读圈子精华 
#每周复盘# 
1.测试报错:业务逻辑   权限测试   
学习：了解码云用法，luckyframe未搭建完成（时间放到周六周日）
2.不足：上线前要提前各预发布分支，否则回归时间短导致测试环境没有出出问题，避免代码冲突引起其它关联模块出问题，思维导图整理的测试点覆盖率不够全面，以后上线发报告前把所写文档整理保存以便以后用，测试理论基础不够扎实导致上线前没有预估风险范围，测试报告成了走形式
3.以后上班975，需求爆炸，需订好计划





且行且思    记录所学  分享所学

 
序号282 的内容是: #每天进步一点点#  人类无时无刻不在「生存」还是「发展」之间纠结。但很少有人看到：发展，不过是为了应对未知的生存挑战。
所以你在看过去，还是在看未来？你是在过去的故纸堆中翻捡，找口现成吃的；还是从过去中总结，思考，从而迎接未来？

 
序号283 的内容是: #每天进步一点点# 
1. 🌿⚡️🆕
2. 分内工作完成30%
3. 开始部署luckyframe

 
序号284 的内容是: #每天进步一点点#  
昨天找开发咨询了maven搭建项目的事情，他给我大体讲了maven项目的搭建流程，感觉思路还比较清晰，还没来得及实践，虽然老徐说没必要通过编辑器来搭建luckyframe，但是还是决定试一下，后续再用Jenkins再来一遍。争取在周末完成luckyframe框架搭建。

 
序号285 的内容是: #每天进步一点点#  CSA（Cloud Security Alliance）云计算安全联盟在Security Guidance For Critical Area of Focus In Cloud Computing V3.0中的定义：
　　"云计算的本质是一种服务提供模型，通过这种模型可以随时、随地、按需地通过网络访问共享资源池的资源，这个资源池的内容包括计算资源、网络资源、存储资源等，这些资源能够被动态地分配和调整，在不同用户之间灵活划分。凡是符合这些特征的IT服务都可以被称作云计算服务。"

 
序号286 的内容是: #每天进步一点点#     今天犯二了。花了几个小时寻找一款可以在mac上抓包并且修改请求参数的工具，后来发现方法就在手边。
说一下过程吧：
1. Charles 这个Mac上公认的，不过我机子有点问题用不了，折腾了一圈放弃。（1小时后的补充：后来Charles也能用了，解决方案参考如何解决抓包工具charles不显示网络请求记录，在sequence面板中显示空白内容？ - 知乎  我这边是添加过匹配过滤记录所以……嗯，还是自己傻了）
2. fiddler 这个Windows上用的多，Mac上好不容易找到一个（先装mono然后通过它来启动fiddler），折腾半天发现找不到要修改的那个接口的参数。没细想原因，可能是因为我这边同时需要传token参数和业务参数，工具打断点时只能认出token参数。放弃。
3. postman 之前用过这个纯手工输入接口参数。但是这次要抓的前后参数联系比较多，所以还是想直接抓包打断点修改，没研究出来postman要怎么抓包，放弃。

然后我无计可施了。转折也来了。
我想，我为啥非要在web界面抓包并修改参数呢，是为了直接在界面展示response的结果，并且看界面展示么？
不对啊，我好像只要数据就可以……

那我不是正好在用rf做接口测试么，而且一些需要前序接口传过来的参数已经写好了相关脚本来动态获得啊！那我直接套进去不就行了么！

暗骂自己无数遍之后，问题得到解答。

这个故事告诉我们，分析解决问题，一定要从本质入手。我前面浪费了那么多时间都在考虑界面展示，最后才发现我关注的根本不是界面如何展示

 
序号287 的内容是: #每天进步一点点# 
1. 🌿 ⚡️ 🆕
2. 补昨晚视频并实践部署
3. k8s文章补充部署部分
4. 跟产品确定细节，上线复测功能
5. 开始新版本app测试

 
序号288 的内容是: #每天进步一点点# 
2018.05.10
1、工作：模块重构版本回归测试完成。常规版本测试用例完成+用例评审
2、技术：对基于pytest的接口自动化框架进行标准化和模块化，尝试推广到组内应用，添加多个模块的用例，增加范例文件及注释。

 
序号289 的内容是: #我的2018#  #每天进步一点点#  
1.测试新版本的迭代功能
2.接口改造各系统回归测试
3.新项目的用例编写

 
序号290 的内容是: #每天进步一点点#  找到“那根线”。

技术之多，信息之广。
穷尽一生，无法参破。
怎么破？
找到那根线。

万物有其道。
道生一，一生二，二生三，三生万物。
从万物的角度来看，必然庞杂而无从下手。
那么，从道的角度来看，必然清晰如明镜，捻来得心应手。

以上，为这几个月苦苦思索的一个问题，自己给出的答案。特分享之。

 
序号291 的内容是: #每天进步一点点#  懒人如我，最近一个月居然只发了两条圈子。
想想最近在干嘛。
1. 是输出了一些自动化相关文章到简书，并且会考虑老徐的建议，精简整理成一篇投稿到公众号。
2. 是顺便把自己的blog搞起来了，托管在github。因为懒得申请域名，所以请直接使用Hexo 访问（对你看到了，我用的hexo弄得，并且懒得连博客名都没改）就行了。目前大概是技术向的博客。
3. 就是看书看书，和人聊天，拓宽自己的思路，视野。虽然没咋写圈子但是在写纸质笔记，记录，复盘，思考。
4. 小组管理最近差不多处于荒废状态，有时候觉得值得分享的内容会在大群里讨论和分享。不过看起来大家都是在安静的自己学习，也挺好。本来微信碎片化的沟通方式就不适合深度思考和学习。多思考，少聊天，有心得多输出高质量的文章，挺好。

 
序号292 的内容是: #每天进步一点点# 
1. 🌿⚡️🆕
2. 测试流程
3. k8s测试部署

 
序号293 的内容是: #今日复盘#  
2018.5.8
1、工作中计划内任务完成
2、健身
3、未进行阅读学习《京东系统质量保障技术实战》
4、老徐管理课程学习打卡

#每天进步一点点#  

2018.5.9
1、版本持续跟进，人员协调，新员工入职安排
2、阅读学习《京东系统质量保障技术实战》
3、老徐管理课程学习打卡

 
序号294 的内容是: #每天进步一点点# 
2018.05.09
1、工作：常规版本上线，相关代码合并到正在进行测试的模块中（未发版），需要回归测试。另外需要编写新常规版本的测试用例
2、技术：Python基础复习、基础算法学习+习题2道
3、阅读：《以解决计算问题为导向的Python编程实践》

 
序号295 的内容是: #每天进步一点点#  
继续自动化框架的搭建。

 
序号296 的内容是: #每天进步一点点# 
1. 🌿⚡️🆕
2. 新功能上线
3. 整理测试流程&常见问题（迫在眉睫，这次新功能我与另外一名后端新同事完成，由于对环境的不熟悉，导致浪费了不少时间，记录下方便自己查阅，顺便也给以后的新同事留个参考文档

 
序号297 的内容是: #每天进步一点点# 
2018.05.08
1、工作：继续回归本版本的功能，了解新模块其他的业务流程。熟悉新版本测试需求，用思维导图整理测试点。
2、技术：python基础复习、pytest测试脚本调优。
3、阅读：《如何在敏捷项目中快速地设计出高覆盖率的测试用例》-如何在敏捷项目中快速地设计出高覆盖率的测试用例 - 51Testing软件测试网

 
序号298 的内容是: #每天进步一点点# 
1.两个小功能要上线，报错房源4个模块，今天测一个
2.本地搭建自动化环境
3.沪江单词2关

 
序号299 的内容是: #每天进步一点点#  
1.复习Git命令。
2.继续搭建本地自动化框架。

 
序号300 的内容是: #今日复盘#  
2018.5.7
1、与产品确认上周发现的逻辑不合理的功能点，已完成并紧急修复bug
2、查看WIKI已有内容，补充缺失部分，持续进行
3、阅读学习《京东系统质量保障技术实战》第一章
4、老徐管理课程学习打卡

#每天进步一点点#  

2018.5.8
1、版本持续跟进，人员协调，同步信息到测试团队
2、阅读学习《京东系统质量保障技术实战》
3、老徐管理课程学习打卡

 
序号301 的内容是: #每天进步一点点# 
1. 完成测试任务及上线
2. 继续整理测试流程

 
序号302 的内容是: #每天进步一点点# 
2018.05.07
1、工作：回归测试，检查有无遗漏场景。编写回归测试用的自动化脚本
2、技术：从头回归Python基础。阅读Python书籍（计算机科学研究部分）
3、其他：丰富Jenkins构建，添加邮件通知、优化测试报告展示

 
序号303 的内容是: #每天进步一点点#  
快半个月没来计划和复盘了，除了工作和生活的一些原因，多数还是因为自己偷懒了……今天开始，恢复节奏。
1.圈子文章阅读。
2.自动化视频再看一遍。
3.尝试本地自动化框架搭建。

 
序号304 的内容是: #每天进步一点点# 
2018.5.7
1、与产品确认上周发现的逻辑不合理的功能点
2、查看WIKI已有内容，补充缺失部分
3、阅读学习《京东系统质量保障技术实战》
4、老徐管理课程学习打卡

 
序号305 的内容是: #每天进步一点点# 对于延期处理的Bug，怎么处理呢，指派过来的延期处理问题，关还是不关？关了吧，时间长了就忘了；不关，天天看到，又明知道没有被解决（有种看不惯它又干不掉的感觉）。

 
序号306 的内容是: #每天进步一点点# 
1. 🌿，news，hp
2. 本职工作，准备测试数据
3. 整理测试流程

 
序号307 的内容是: #每天进步一点点# 
1、继续学习HTML语言；
2、工作梳理和整理；

 
序号308 的内容是: #今日复盘# 
2018.5.3
1、工作中升级上线，沟通也占据大量时间，
2、《聪明人用方格笔记本》已阅读完毕，输出整理完成20%

#每天进步一点点# 
2018.5.4
1、完成阅读笔记的整理，完成输出
2、沟通后续工作

 
序号309 的内容是: #每天进步一点点# 
2018.05.04
1、工作：回归测试、接口测试（细化）并整理测试用例
2、技术：pytest+allure加深学习应用（增加日志输出）
3、阅读《Google的测试之道》TE部分

 
序号310 的内容是: #每天进步一点点# 
1. 🌿阅读、扇贝新闻、HP阅读
2. 整理测试流程，方便自己查阅，有新人时也可分享方便快速上手
3. 开始web端新功能测试

 
序号311 的内容是: #每天进步一点点# 
1、正常工作任务
2、了解常用的HTML语法

 
序号312 的内容是: #每天进步一点点# 
2018.05.03
1、工作：回归测试，检查遗留问题，把控质量（同时监控环境问题）
2、技术：Python数据类型/函数式编程再复习+习题2道
3、阅读：《Google的测试之道》TE部分续读
4、其他：个人中期回顾

 
序号313 的内容是: #每天进步一点点# 2018.5.3
1、早起，做中期复盘，今日计划
2、工作中跟进并掌握各版本情况，优化测试流程，输出初步方案
3、完成《聪明人用方格笔记本》阅读，输出笔记

 
序号314 的内容是: #每天进步一点点#  
1. 薄荷阅读，扇贝阅读，哈利波特阅读
2. 了解web端功能页面
3. 编写新功能测试用例
4. 部署测试环境
5. 参加百人计划直播课程
(最近确实松懈了，及时调整)

 
序号315 的内容是: #每天进步一点点# 
2018.05.02
1、工作：新模块测试/常规版本测试收尾阶段，验证特殊场景
2、技术：Python基础复习+习题两道，pytest框架学习+应用
3、阅读：《Google的测试之道》ACC部分

 
序号316 的内容是: #每天进步一点点#   
最近在看这本书，并在简书上按章节进行了笔记和心得分享输出，感兴趣的朋友可以戳链接进目录查看。
原书为英文，没有全文照搬翻译，主要总结了要点，方便快速阅读。
自动化测试需要知道的50件事~本人的笔记   心得部分 （目录） - 简书

 
序号317 的内容是: #每天进步一点点# 
1.本职工作，周复盘
2.大话移动app测试第4章
3.编程题2道

 
序号318 的内容是: #每天进步一点点#  2018.5.3
1、早起，做周复盘，今日计划
2、工作中跟进并掌握各版本情况，识别风险，调整人员情况
3、完成《聪明人用方格笔记本》阅读，输出笔记

 
序号319 的内容是: #每天进步一点点# 
2018.04.28
1、工作：流程中涉及到的模块基本调通，目标今天完成业务流程的测试工作。
2、技术：Python基础复习+习题2道
3、阅读《Google的测试之道》ACC精读
4、其他：争取提前完成测试任务，空余时间优化接口测试脚本。搭建Jenkins

 
序号320 的内容是: #每天进步一点点# 
1. 基本6项
2. 尝试jenkins自动打包
3. 熟悉web端测试流程
（2天没打卡了，罪过罪过，不能松懈，继续加油
）

 
序号321 的内容是: #每天进步一点点# 
1、Django学习输出；
2、听直播课；

 
序号322 的内容是: #每天进步一点点# 
2018.04.25
1、工作：正式开始测试主流程，同时了解下并行的常规版本的需求
2、技术：Python基础复习（数据类型及运算）+编程习题X2
3、阅读：《21天学通Python》第三天
4、其他：听百人计划分享+总结

 
序号323 的内容是: #每天进步一点点# 
1.工作按计划进行
2.沪江英语单词5关
3.python练习

 
序号324 的内容是: #今日复盘#  2018.4.24
1、早起，听已购课程
2、团队现状梳理，上线版本跟进，月报汇总
学习计划较杂乱，尤其是阅读书单，需要思考学习的优先级
#每天进步一点点#  2018.4.25
1、早起，听已购课程，思考学习计划
2、团队内沟通，交接工作
3、听老徐的分享课程

 
序号325 的内容是: #今日复盘#  
1.在测项目跟进，bug有点多，进度缓慢
2.和其他测试小组交换代码静态走查方法，觉得略胜一筹，他们仅是在eclipse种集成插件，调试看，对代码规则要熟悉，且未有规则分类和结果统计等，不方便留存和结果汇总等后续工作;对于检测出的问题较多(因规则太多未过滤)，推进修改工作的展开并非易事，往往挑几个觉的重要的先优化了，后续有精力时，同一个项目，我再做对比检测的检验

  
1.日常工作跟进
2.和其他项目的测试小组碰头交流代码走查心得，交换意见，取长补短

 
序号326 的内容是: #每天进步一点点# 
1、接口测试，Django框架继续学习；
2、整理Django框架学习总结；

 
序号327 的内容是: #每天进步一点点# 
1. 基本4项
2. 本职工作：测试优化的三个功能
3. 整理周日linux的常用命令

 
序号328 的内容是: #每天进步一点点#  
1.早上执行es部分测试
2.下午准备线上测试
3.晚上继续补课
4.有时间看看樊登读书会视频（感觉挺不错的呀）

 
序号329 的内容是: #每天进步一点点# 
1、工作：继续新版本测试工作，接口、前后端全面检查业务流程。
2、技术：Python基础复习（函数式编程）+习题2道
3、阅读《21天学通Python》第二天
4、其他：针对目前项目状况，考虑通过接口自动化监控接口状况。边测试边研究怎么通过脚本实现

 
序号330 的内容是: #每天进步一点点#  
1.公众号文章阅读。
2.接口开发与测试书籍阅读。

 
序号331 的内容是: ##今日复盘#  2018.4.23
1、公司的各种开会培训，测试版本跟进
2、下班后健身
未早起，造成学习时间缩水，提醒自己，要坚持
#每天进步一点点#  2018.4.24
1、早起，听已购课程
2、团队现状梳理，上线版本跟进，月报汇总
3、下班后健身

 
序号332 的内容是: #今日复盘#  
1.组内例会，项目组例会 
2.出差项目第三轮验证
3.数据迁移自动化检测脚本调试，功能已经实现，在测试数据录入和结果展示上还需要完善，待优化后再测试
4.对根据现场情况，制定并发回的两套部署方案进行组内评审，明天开始测试


  
1.周例会
2.出差项目跟进，现场情况了解

 
序号333 的内容是: #每天进步一点点# 
1. 每日基本5项
2. 学习postman
3. 整理昨晚linux课程笔记

 
序号334 的内容是: #每天进步一点点#  
1，昨天linux课程重听
2，python日常学习

 
序号335 的内容是: #每天进步一点点# 
1、最近在了解购房相关的，听直播，整理心得；
2、继续学习Django，整理周末学习内容；

 
序号336 的内容是: 今日安排:
1.听英语PK台18-1-12
2.测试项目-小程序
3.验证上周回归测试项目的bug
#每天进步一点点#

 
序号337 的内容是: #每天进步一点点# 
1、工作:测试环境搭建完成，开始新模块测试。
2、技术:复习Python基础+习题2道
3、阅读《21天学通Python》第一天
4、其他:学习SVN上的业务流程资料

 
序号338 的内容是: #每天进步一点点# 
1.测房源搜索优化
2.实践昨天晚上的linux命令

 
序号339 的内容是: #每天进步一点点#  
这几天家里出了点事情，落下不少课程，抓紧补上。
1.上周三课程补听。
2.整理周日的linux命令并实操巩固。

 
序号340 的内容是: #每天进步一点点#  
1、回听课程学会提问
感触比较深的是，一个问题多思考、多了解后才能提出更多有价值的问题。深入思考是一种习惯。

 
序号341 的内容是: 今日安排:
1.听英语PK台18-1-11
2.上午，回归测试之前的一个项目
3.下午熟悉待测的一个项目
#每天进步一点点#

 
序号342 的内容是: #每天进步一点点# 
1、继续爬虫的练习
2、业务流程梳理
3、学习公众号文章

 
序号343 的内容是: #每天进步一点点# 
1.每日基本6项（上班通勤时间够完成了）
2.继续研究python，昨天发现之前在电脑上给自己挖了个大坑
3.当当搞活动，买几本书看看

 
序号344 的内容是: #每天进步一点点# 
1、Django第二章实操及总结；
2、看搜狗测试公众号文章；

 
序号345 的内容是: #每天进步一点点# 
1、工作：新模块测试工作，视测试环境搭建情况。未搭建完成的情况下尝试先通过接口测试关联模块
2、技术：Python基础复习（函数式编程、高阶函数、匿名函数）+编程习题
3、阅读：《Google的测试之道》TE部分、Python编程相关文章2篇
4、其他：一周工作回顾梳理

 
序号346 的内容是: #每天进步一点点# 
1.整理测试点1h
2.执行测试3h
杜绝目标不专一，遇到问题不主动思考本质，往后拖拉

 
序号347 的内容是: #每天进步一点点# 
1.复习Python函数部分
2.听闲书

 
序号348 的内容是: #每天进步一点点# 2018.4.20
1、听《叶武滨时间管理100讲》课程
2、完成老徐分享的管理学习总结
3、梳理现有测试团队管理工作，协调整体项目工作

 
序号349 的内容是: #每天进步一点点#  
1、听团队管理课程，并做好笔记
2、听python入门+应用，还需要多练习

 
序号350 的内容是: 今日安排:
1.听英语PK台18-1-10
2.学习Python第12.7-13.4
3.回听昨晚的课-团队管理
#每天进步一点点#

 
序号351 的内容是: #每天进步一点点# 
1. 每日基本4项
2. 整理输出一些东西
3. 继续jenkins研究

 
序号352 的内容是: #每天进步一点点#  
1、听管理直播课，输出心得体会；
2、实操接口自动化，第二章Django入门；

 
序号353 的内容是: #每天进步一点点#  
2018.4.19
1、听《叶武滨时间管理100讲》课程
2、补听老徐管理的分享，输出思考反馈

 
序号354 的内容是: #每天进步一点点# 
1、工作：编写新模块测试用例
2、技术：pytest的fixture深度学习，python基础复习+编程习题
3、阅读：《Google的测试之道》TE部分
4、其他：思考目前工作中有没有可以通过工具提升效率的点

 
序号355 的内容是: #今日复盘#  
1.在测项目，大小三个，还算基本顺利，稳步前进;
2.根据各项工作考核和平时的工作产出，结合个人意愿，小组内选拔，给有潜力并要求上进的人制定培优计划
3.反馈新人第一阶段工作情况，并向hrbp提交第二阶段的工作安排和学习计划

#每天进步一点点#  
1.制定小组培优计划
2.制定新人第二阶段工作和学习计划
3.测试任务跟进
3.在测项目跟进

 
序号356 的内容是: #每天进步一点点# 
1、完成爬虫初级教程
2、数据库问题解决，之前出现4007错误是因为连接分发中心超时，需重启服务，下一步是订单。如果顺利的话今天完成数据迁移的工作。
3、之前的课程巩固。

 
序号357 的内容是: 今日安排:
1.听英语PK台18-1-8
2.学习Python第12.2-12.5
#每天进步一点点#

 
序号358 的内容是: #每天进步一点点# 
1、学习虫师接口自动化 - 2.2~2.3，Django入门；
2、听课~

 
序号359 的内容是: #每天进步一点点# 
1. 基本三项
2. 新版本已完成测试，等待新需求沟通
3. 继续搞jenkins

 
序号360 的内容是: #每天进步一点点# 
1、工作:准备新模块测试资料(数据表梳理、业务流程梳理、测试案例整理)
2、技术:Python相关(pytest框架、numpy库)+编程习题2道
3、阅读:《基于Python的人接口自动化测试》
4、其他:完成文档的遗漏补充

 
序号361 的内容是: #每天进步一点点#  
1.Python迭代器学习。
2.晚上听老徐分享。

 
序号362 的内容是: #每天进步一点点# 
1.早上又听了一遍周一的Python入门部分，中午加以自己的思路整理
2.复习Python基础学习部分
#昨日复盘#
1.近两天老是被拉去开各种无聊的会议，一来就是半天没啦，再来会拒绝一部分，太浪费时间
2.昨天没有学习，今天继续

 
序号363 的内容是: #每天进步一点点# 2018.4.18
1、听《叶武滨时间管理100讲》课程
2、梳理自己的技能树
3、与PMO助理交接工作

 
序号364 的内容是: #今日复盘#  
1.出差任务跟进(我负责框架升级+部分数据表迁移验证)
内测review功能不到两小时，就被各种对接模块的测试小组干扰，临近出差，才想到找我连调，某个领导要我给出部署方案和可能的风险预估，任性地被我驳回了，理由有三:
1⃣️负责本次出差总任务的牵头人从开始到今天都没给我信息 总共需要对接多少业务系统和新增的高级模块
2⃣️对接业务系统的项目负责人和测试负责人 这段工作如何开展的？
3⃣️时间再紧张，自己内测也得进行，否则直接去现场，风险自行承担，我概不会负责也无法预知风险和问题
2.各对接模块沟通会，轮番上阵
一个原则，工作范围明确，责任到人，界限一定要清楚，不能A，B，C模块都拿不出确切方案和风险预估，责任就落在平台框架这，这个锅不背，一定要抛出来

不怕问题暴露，就怕问题捂着，都等着，都是拿来主义，等安排

最近事多，每天都加班较晚，有点扯了，惭愧未能安排好多余的时间自己学习
  
1.出差任务跟进
2.已实施地现场情况跟进

 
序号365 的内容是: #每天进步一点点# 
1、学习迭代器和析构器
2、数据库相关测试
3、复习之前的课程

 
序号366 的内容是: #每天进步一点点# 
1. 每日基本三项
2. 工作：回归测试，今日发版
3. 查看jenkins的应用
4. 确定分享方向（目前测试组每两周轮流分享测试相关技术，下周一就轮到我了

 
序号367 的内容是: 今日安排:
1.听英语PK台18-1-5
2.学习Python11.2节
3.总结Python11章
4.学习Python第12.1-12.6
#每天进步一点点#

 
序号368 的内容是: #每天进步一点点# 
1、学习虫师-接口自动化测试，第二章；
2、解决appium连接模拟器无法连接设备的问题；

 
序号369 的内容是: #每天进步一点点# 
1.自己没有从独立测试项目，调整状态，熟悉业务
2.学习python，pytest

 
序号370 的内容是: #每天进步一点点# 
1、工作：新模块测试准备（接口文档分析、梳理数据流）
2、技术：pytest框架学习（fixture相关）、python（numpy相关）、编程习题
3、阅读：《Google的测试之道》TE部分
4、其他：将自己写过的接口自动化脚本用pytest框架重新梳理一下

 
序号371 的内容是: #每天进步一点点#  
1.公众号文章阅读两篇。
2.Python方法、函数部分复习。

 
序号372 的内容是: #每天进步一点点# 
再听一遍五娃的分享，找相关材料加深理解。

 
序号373 的内容是: #每天进步一点点# 
模拟考试，学习“”方法的组成与调用“”，方法的重载，
其中返回值类型，比较蒙，一遍遍练习吧

 
序号374 的内容是: #今日复盘#  
1.测试组/项目组 周例会 沟通进度及主要问题
2.数据迁移后自动化比对工作跟进
3.出差事宜安排___现场服务器确定，出差人员，版本包，内测的近期问题修复纪录等
4.新项目立项会


  
1.周例会
2.新项目立项
3.出差任务跟进

 
序号375 的内容是: #每天进步一点点# 2018.4.17计划
1、听《叶武滨时间管理100讲》课程
2、补听周日分享课程，输出问题及笔记
3、与PMO确认项目流程等规范，新入职PMO助理工作职责

 
序号376 的内容是: #每天进步一点点# 
1.今天就一个任务，消化昨晚的课程，听起来有些蒙的状态。

 
序号377 的内容是: #每天进步一点点#  
1. 每日基本三项
2. 本职工作
3. 配置Jenkins

 
序号378 的内容是: #每天进步一点点# 
1.测试报备app
2.继续学rf
3.整理昨天课程笔记
要把碰到每一个问题弄清楚

 
序号379 的内容是: 今日安排:
1.复习Python10.1-10.3
2.学习10.4
3学习Python11
4.听英语PK台18-1-4
#每天进步一点点#

 
序号380 的内容是: #每天进步一点点# 
1、工作：常规项目新版本/新模块测试准备（开发移测后正式测试）
2、技术：Python（算法、numpy库、pytest框架）+编程习题2道
3、阅读：《Google的测试之道》TE部分
4、其他：整理上周复盘+新一周计划

 
序号381 的内容是: #每天进步一点点# 
1、看三个精华文
2、梳理业务文档
3、补上上周老徐讲的第一课

 
序号382 的内容是: #每天进步一点点#  
1.Python关于列表、字典模块内容复习，练习。
2.问开发要一份接口文档，研究一下。
3.看群里大家的高质量复盘，学习改进。

 
序号383 的内容是: #每天进步一点点#
1、Python培训:numpy、pandas、matplotlib学习 
2、熟悉pytest框架

 
序号384 的内容是: #每天进步一点点# 
1.学习python。
2.完成论文中文概要。
3.英语流利说打卡。

 
序号385 的内容是: #每天进步一点点#   昨天从朋友那里听说了kubernetes和Jenkins X, 于是找了点资料。
1. Kubernetes 是一个自动化部署、伸缩和操作应用程序容器的开源平台。

使用 Kubernetes，你可以快速、高效地满足用户以下的需求：
快速精准地部署应用程序
即时伸缩你的应用程序
无缝展现新特征
限制硬件用量仅为所需资源

Google 公司于 2014 年启动了 Kubernetes 项目。Kubernetes 是在 Google 的长达 15 年的成规模的产品级任务的经验下构建的，结合了来自社区的最佳创意和实践经验。

2. James Strachan和CloudBees团队发布了开源的“Jenkins X”平台，它是针对部署到Kubernetes上的现代云应用所提供的持续集成和持续交付（CI/CD）解决方案。
Jenkins X使用分发版本的Jenkins作为核心的CI/CD引擎，并倡导一个特殊的Git分支和存储库模型。在分发版本中，还构建了一些额外的工具和服务用来适应该模型。在Jenkins最近的一篇博客文章中，CloudBees的高级架构师Strachan认为Jenkins X开发模型代表了“开发Kubernetes应用的最佳实践”。

扒了一份Kubernetes入门与进阶实战培训的大纲，可以参考一下。

 
序号386 的内容是: #每天进步一点点# 
1,刷题，进展到二维数组，对一些概念的理解还是又问提，有时候只能记住格式
2，有的时候感觉很努力啦，单是进步不明显，感觉北京真是人才集聚地啊，同样的内容需要付出很多的时间才会能达到别人的效果
3。，坚持吧，希望不辜负自己

 
序号387 的内容是: #每天进步一点点#  
1.继续完善迁移方案 细化操作
2.参与内部招聘沟通会，协助HRBP 整理一面（专业技术方面），二面(综合能力)的题目和反馈表
3.周工作总结

 
序号388 的内容是: #每天进步一点点# 
1.学习python的函数式编程，模块。
2.英语流利说打卡。

 
序号389 的内容是: #每天进步一点点#  
1.每日基本三项
2.本职工作
(最近换季，我成功发烧了，大家多注意身体)

 
序号390 的内容是: #每天进步一点点# 
1、Python学习，7.2节，类和类型，40%；
2、jenkins练习；

 
序号391 的内容是: #每天进步一点点# 
1.复习Jenkins，目标：能输出相关文章
2.预习Python，Python越来越难了，感觉进入了倦怠期，坚持！

 
序号392 的内容是: 今日安排:
1.听英语PK18-1-3
2.复习Python9
3.学习Python10.1
#每天进步一点点#

 
序号393 的内容是: #每天进步一点点# 
1、英语发音课程正式结束，将重心放到消防课程
2、消防课程：首先不要求记住。但是视频要先看一遍的，书要通读一遍的
3、每天零碎时间读读测试基础书
4、看看老徐的课程~
以上，所以要做好时间管理，目标管理，全力以赴吧~

 
序号394 的内容是: #每天进步一点点# 
1、工作:用例评审、公司mockPlatform使用学习
2、技术:Python基础(科学计算库预习，为培训做准备)+编程习题2道
3、阅读:《Google的测试之道》TE部分
4、其他:公司RF培训，梳理一下RF想关知识体系，巩固提高

 
序号395 的内容是: #每天进步一点点# 
1.app测试5h
2.学习rf1.5h，看实例时要写注释

 
序号396 的内容是: #每天进步一点点# 
1、工作:完成新版本测试用例；测试一个紧急需求；新模块接口与数据库关系初步梳理完毕。
2、技术:分别在公司及家庭电脑配置Sublime Text3 Python开发环境。公司电脑加密软件影响，卸载重新安装ST3后配置成功。家庭电脑同时安装Python2和3，配置双环境的同时把对应配置文件的Python路径及IDE名字修改后配置完成。

 
序号397 的内容是: #今日复盘# 
1、生产环境测试，发现测试环境中未发现的问题。-6h
      总结：测试环境的测试数据有限，一些问题不容易暴露出来。
2、生产问题提交到缺陷管理系统+排查测试环境问题。-2h
3、编写测试用例。-3h

#每天进步一点点# 
1、页面用例内部评审。-3h
2、编写错误监控、进度条、报表的用例。-5h

 
序号398 的内容是: #每天进步一点点#  
1、回听课程目标管理
2、回听课程测试体系+答疑

 
序号399 的内容是: #每天进步一点点#  
1.出差项目内侧功能
2.数据迁移测试方案编写，提前了解现场情况，确定迁移范围，细分对应范围数据的测试方法，确定对应策略和必要工具

 
序号400 的内容是: #每天进步一点点# 
1、英语30分
2、消防课程 尽量多看吧，怎么也得过一遍啊
3、百人计划 课程，多复习复习

 
序号401 的内容是: #每天进步一点点# 
1、完成公交城市的提测，下班前出报告。
2、熟悉配置中心相关接口文档，制订测试计划
3、针对昨天晚上的分享，反省自己的在目标管理，落地执行上的缺陷，逐条改善。

 
序号402 的内容是: #每天进步一点点# 
1.每日基本三项
2.本职工作
3.继续部署jenkins，昨天用docker安装jenkins完成
4.补听昨晚的直播

 
序号403 的内容是: #每天进步一点点# 
1、昨天的课程再回顾一遍，整理心得体会；
2、学习Python，7.1多态、封装和继承；

 
序号404 的内容是: 今日安排:
1.听英语PK台17-12-27
2.学习Python第9章
#每天进步一点点#

 
序号405 的内容是: #每天进步一点点#  
1.完成当前测试场景的脚本编写
2.读书，海盗派测试分析
3.补上昨天落下的课

 
序号406 的内容是: #每天进步一点点# 
1.测试app大约四十个测试点，两个人四天时间测完，今天要测一半功能
2.最近学习rf，视频2个，最重要的是自己动手做
昨天晚上的直播收获很多，时间安排不合理，效率低，复盘不及时，计划跟不上，测试资料贪多嚼不烂，没有明确的目标驱动，今天抽时间反思并改进

 
序号407 的内容是: #每天进步一点点# 
1.学习python。
2.英语流利说打卡。

 
序号408 的内容是: #我的2018#  #每天进步一点点#  
今天的工作安排
1.继续编写新项目的用例
2.开始新项目的测试
3.给新的自动化脚本加检查点

 
序号409 的内容是: #每天进步一点点#  
1.接口测试方面资料查看。
2.Python学习。

 
序号410 的内容是: #每天进步一点点# 
1、工作:新版本测试用例编写、新模块接口用例整理
2、技术:PYthon复习(梳理列表、字典的函数方法)+习题2道
3、阅读《Google的测试之道》TE部分
4、其他:用Sublime Text搭建轻量级开发环境(此前用的Pycharm)

 
序号411 的内容是: #复盘# 
开始转变分享的思想，一直以为有价值的东西才可分享，但是到底什么是有价值，其实很难去定义.
老徐的观点：分享、输出，是为了巩固自己学的知识 。
等觉得非常有价值再分享，基本上整个职业生涯分享的可能性很小。
--是的, 尝试改变

安装Python基础环境，梳理自己的思路，文章输入：Python Requests Pytest 在window下的安装 - 简书

 
1.思考讨论目标管理
2.学习python基础部分

 
序号412 的内容是: #今日复盘# 
1、和领导提了离职的事情，以后有更多的精力去学习。
2、新需求测试点梳理

#每天进步一点点# 
1、到项目现场的生产环境，进行测试，发现生产问题。-5h
2、根据测试点，编写测试用例。-2h
3、整理其他组员测试内容的测试点，为内部测试用例评审做准备。-1h

 
序号413 的内容是: #每天进步一点点#  
1.日常工作任务跟进
2.庆幸今天会议不多，下午抽时间实操代码静态走查，加深印象，争取今天输出总结
3.晚上上课

 
序号414 的内容是: #每天进步一点点# 
1.每日基本三项
2.本职工作
3.参照老徐文章docker安装jenkins
4.参与小组内讨论，说明积分情况

 
序号415 的内容是: #每天进步一点点#  
1.梳理项目整体需要实现的自动化测试场景，下午开会汇报
2.晚上上课
3.读书

 
序号416 的内容是: #每天进步一点点#  
1.Jenkins的邮件配置
2.python入门了解
最近进度略慢，尽量赶上

 
序号417 的内容是: #每天进步一点点# 
1、数据库相关模块的整理，测试。大概梳理了下流程，先用脚本生成相关配置项，然后调用接口验证配置是否生效。
2、期待晚上的分享。

 
序号418 的内容是: #每天进步一点点# 
1.python函数学习。
2.测试用例相关课程及练习。
3.英语流利说打卡。

 
序号419 的内容是: #每天进步一点点#  
1，晚上听课并梳理总结

 
序号420 的内容是: #每天进步一点点# 
1、英语30分
2、老徐的课程
3、消防课程
最近工作要忙啦，学习的进度有的要停下，有的要放慢速度啦

 
序号421 的内容是: 今日安排:
1.听英语PK台17-12-26
2.学习Python第8章
3.晚上听课
#每天进步一点点#

 
序号422 的内容是: #每天进步一点点# 
1、appium解决坐标定位不稳定问题；
2、听直播课；

 
序号423 的内容是: #昨日复盘# 
完成jenkins的邮件配置，遇到问题
1. 开启pop服务，qq邮箱一直发不出授权码，改换邮箱，成功
2. 端口需配置465

#每天进步一点点# 
1.安装python基础环境在公司电脑。
2.学习python入门部分

 
序号424 的内容是: #每天进步一点点# 
1、工作:被调去测试其他模块，重新准备测试资料
2、技术:Python基础复习(数据分析)+习题2道
3、其他:学习SQL存储过程基础，尝试为自动化框架添加初始化环境模块

 
序号425 的内容是: #每天进步一点点# 昨天换了个新的测试组，还在磨合中。今天要看一下新项目的PRD，熟悉一下新的测试方法。晚上听课。

 
序号426 的内容是: #今日复盘#  
昨天下载并安装了loadrunner11。
在安装Microsoft Visual c++2005 sp1组件时，遇到了“命令行选项语法错误，键入“命令/?”可获取帮助信息”的问题，解决方法：
1、进入loadrunner-11\Additional Components\IDE Add-Ins\MS Visual Studio .NET 
2、安装：LRVS2005IDEAddInSetup.exe 
3、再安装loadrunner
问题解决

  
1、昨天仅进行了loadrunner的安装，今天进行基本功能的熟悉。
2、晚上听直播分享。

 
序号427 的内容是: #每天进步一点点#  
今日计划跟进大数据迁移服务器工作。
把控团购活动进度。
完成笔记里碎碎念文章。
检查电脑python 框架安装情况。

 
序号428 的内容是: #每天进步一点点#  
昨天身体不舒服，任务没有完成。
1.完成老徐几篇新文章的阅读。
2.晚上直播课程。

 
序号429 的内容是: #每天进步一点点#  
1.日常工作跟进
2.一季度项目总结汇报
3.二季度重点工作计划与进度沟通会

 
序号430 的内容是: #每天进步一点点# 
1.跟进bug
2.梳理测试数据
3.搭建jenkins
4.每日基本三项

 
序号431 的内容是: #每天进步一点点#  
1、loadrunner工具安装、基本功能操作熟悉。
2、利用碎片时间浏览圈子和饭团主题。

 
序号432 的内容是: #每天进步一点点# 
1、英语30分，加油 14天的发音训练就要结束了，感觉自己棒棒哒~
2、消防课程 听了半节课，感觉好枯燥啊，加油 向钱看齐
3、老徐测试知识体系，复盘之前的内容，结合起来听
4、搭建开发环境不顺利，win10 槽点太多
今日工作较忙，就这么多
今天虽然空气不好，但也是美好的一天，相信自己可以坚持哒~~

 
序号433 的内容是: #每天进步一点点# 
1. 熟悉使用Python异常处理；
2. 学习jenkins课程及练习；

 
序号434 的内容是: #每天进步一点点# 
1.学习python。
2.Jenkins邮件配置。
3.英语流利说打卡。

 
序号435 的内容是: 今日安排:
1.听英语PK台17-12-25
2.学习Python第7章
3.确定公司测试小组分享主题
#每天进步一点点#

 
序号436 的内容是: #每天进步一点点# 
1、工作:新版本上线，最后把关。新模块接口测试
2、技术:Python基础(迭代器、生成器研究)+习题两道
3、其他:学习试用公司自己研发的测试平台，编写接口自动化用例

 
序号437 的内容是: #每天进步一点点#  
1.完成本职工作：测试用例编写。
2.http权威指南第8章

 
序号438 的内容是: #每天进步一点点# 
1.jenkins邮件配置-早上完成一半，遇到问题，中午继续
2.学习python入门部分

 
序号439 的内容是: #每天进步一点点#  
1、今天完成新版本bug验证外，检查完新需求点修改点
2、利用早到公司的时间多看看老徐的文章
3、有时间再折腾一下Jenkins

 
序号440 的内容是: #每天进步一点点#  
1.看老徐最新写的几篇文章。
2.昨天的Jenkins邮件配置只做了最基础的，今天继续。

 
序号441 的内容是: #每天进步一点点# 1.初步了解JMETER。明天安装具体看看，录个登录的脚本。
2.环境部署配置需要了解下，配置文件中链接字符串的能看不会设置。

 
序号442 的内容是: #每天进步一点点#  
1.日常工作
2.各种协调，组内/项目组/跨部门
3.确定对接项目 平台框架升级测试点，细化后，再形成方案文档
4.评审新项目测试用例

忙晕了，才想起补上，继续加班写方案

 
序号443 的内容是: #我的2018#  #每天进步一点点#  
1、还款后各场景检查点脚本编写，调试
2、增加新场景脚本编写
3、学习新知识

 
序号444 的内容是: #每天进步一点点# 
1、昨天老徐的测试知识体系复盘，梳理自己的知识体系
2、英语30分
3、消防课程
4、测试基础《软件测试》
5、开发环境搭建
6、继续linux学习

 
序号445 的内容是: #每天进步一点点# 
1.完成一轮新功能测试（android&ios）
2.抽时间从头部署一次jenkins，在新服务器上
3.更新小组任务清单

 
序号446 的内容是: 今日安排:
1.听英语PK台17-12-22
2.学习Python第6章
#每天进步一点点#

 
序号447 的内容是: #每天进步一点点# 
1.学习老徐Jenkins邮件配置视频。
2.学习python。
3.英语流利说打卡。
4.论文资料查找。

 
序号448 的内容是: #每天进步一点点# 
1、工作:新模块测试，准备接口测试用例及数据
2、阅读《Google的测试之道》TE部分
3、技术:Python基础复习(列表解析、列表统计)
+习题
4、其他:了解pytest单元测试框架

 
序号449 的内容是: #每天进步一点点# 
1.上午下午抽2个小时回归"分享"功能，一个小时熟悉系统功能点，2个小时整理app测试点
2.晚上回去重复听昨天的课程
3.熟悉爬虫的request库

 
序号450 的内容是: #今日复盘# 
1.MySQL视图学习  未完成  不在状态
2.晚上课程学习   未完成   聚餐
昨天整个人不在工作状态，心态还是要不断调整，希望自己可以宠辱不惊，加油
#每天进步一点点# 
1.补课一次
2.MySQL视图部分完成

 
序号451 的内容是: #每天进步一点点#  
1. 恶补近期的两次课程；
2. 调整收心；

 
序号452 的内容是: #每天进步一点点#  
1.实操Jenkins邮件配置。
2.复习Python基础。

 
序号453 的内容是: #每天进步一点点# 
1.早起补听昨晚的课程-完成
2.结合自身，整理软硬技能表，查漏补缺-中午一个小时
3.实操jenkins邮件部分(6-7)

 
序号454 的内容是: #每天进步一点点# 听课有2问题挺感兴趣：1.瓷不旧&%？：问一个项目反复的测试，会产生疲劳，原本已经熟悉的内容反而模糊了，一个项目要跟进很久，想了解大家是怎么总结的。
每次好久之前的功能重新被提及，特别希望当时的测试情况有详细记录，记不住的一翻就能回想起来。这可能就是文档管理吧，但是，当时通常情况比较乱，没有精力去详细整理文档。
2.开发没有按照原型做，到最后开发改bug加班测试加班，上线时产品不满意，领导不满意，该怎么破
这个就得老徐给的方法下次可以试试，提测后先看看，然后找产品过一下。

 
序号455 的内容是: #每天进步一点点#  
1.日常工作任务
2.晚上听课
3.周复盘

 
序号456 的内容是: #每天进步一点点#  
1.每日基本三项
2.开始第一轮测试，记录相关问题，明确功能细节
3.百人计划听课

 
序号457 的内容是: #每天进步一点点# 
1.查找论文第四章资料。
2.完成论文中英文摘要部分。
3.英语流利说打卡。
4.百人计划分享课。

 
序号458 的内容是: #每天进步一点点# 
1.写周复盘
2.积分汇总
3.晚上听课

 
序号459 的内容是: 今日安排:
1.听英语PK台17-12-21
2.学习Python第五章
3.晚上听课
#每天进步一点点#

 
序号460 的内容是: #每天进步一点点# 
1.MySQL视图学习
2.看书 有效编写测试用例
3.打包行李，收拾
4.听课

 
序号461 的内容是: #每天进步一点点# 
1.基础知识梳理-（6-7点已完成部分）
2.3：30-至今，积分wiki整理。
3.课程回顾

 
序号462 的内容是: #每天进步一点点# 
1，完成今天的本职工作
2，学习Linux命令
2，晚上听课

 
序号463 的内容是: #每天进步一点点#  
1.完成测试工作
2.http权威指南第7章

 
序号464 的内容是: #每天进步一点点# 
1、工作:准备UAT测试环境及数据
2、阅读《Google的测试之道》TE部分
3、技术:Python基础复习+编程习题X2

 
序号465 的内容是: #每天进步一点点#  
1、三天假期过完，恢复工作状态
2、认真完成本职工作，打包部署新环境并验证问题
3、晚上听直播，跟着一起学习

 
序号466 的内容是: #每天进步一点点#  
1.接口测试基础知识。
2.晚上听课。

 
序号467 的内容是: #每天进步一点点# 
1.安装git，学习老徐Jenkins04视频。
2.学习公众号文章:Jenkins搭建，从零手把手教你入门及项目实践。
3.英语流利说打卡。

 
序号468 的内容是: #每天进步一点点# 
1，练习打单词。金山打字通练习手速
2，Java中for循环，封装，等概念的抄写

 
序号469 的内容是: #每天进步一点点#
1、休息一下，看《头号玩家》 
2、完成两个Python习题

 
序号470 的内容是: #每天进步一点点#  #今日复盘#  4.4 今天leader给发来了测试case 理解起来稍有些费劲 但沟通后大体知道了是怎么回事，今天反思了一下这段时间看文档的方法 ：以后拿到全英文文档 首先看目录 标题 知道整片讲什么 再一点点细看 若是一开始就细看 自己心里上也会有畏难情绪 也会不了了之 没有效率。 还要自己下来多搜集资料 多理解文档是比较重要的～ ps 青旅过了1个月了 今晚是跟小伙伴们在一起的最后一晚啦 有些不舍 但是终归要自己成长 生活 所以积极迎接每一天的变化吧～^_^

 
序号471 的内容是: #每天进步一点点# 
1.下午测app，先把测试点理清楚，对照着微信公众号测
2.圈子精华1篇
3.学习Python基础
执行力要提高和解决问题的方式和时间要把控好

 
序号472 的内容是: #每天进步一点点#  
1.合理安排工作，不加班
2.准备优秀项目申请材料
3.回顾精华帖

 
序号473 的内容是: #每天进步一点点# 
1、利用每天的碎片时间，搞定了sonarqube的安装、配置、项目应用
2、稍后输出相关文档，进行总结

 
序号474 的内容是: #每天进步一点点# 
1、英语学习30分钟
2、临时工作安排，其他计划暂停
今日计划
1、英语练习30分
2、工作计划安排
3、老徐百人计划复盘

 
序号475 的内容是: #每天进步一点点#  
1，晚上听课
2，这几天工作任务比较重，内容多，时间紧，要安排好时间

 
序号476 的内容是: #每天进步一点点# 
1.完成每日基本三项（终于回归正轨了）
2.编写新功能的测试用例

 
序号477 的内容是: #每天进步一点点# 
1.TMP项目的交接
2.复习jenkins（1h）
3.整理昨晚组内讨论内容（1h）
4.实习生面试

 
序号478 的内容是: #每天进步一点点# 
1. 菜鸟教程，学习Linux；
2. 晚上听课，整理输出；

 
序号479 的内容是: 今日安排:
1.听英语PK台17-12-20
2.学习Python第四章
#每天进步一点点#

 
序号480 的内容是: #我的2018# #每天进步一点点# 
2018.4.4
1.千字英文阅读《简爱》

2.学习python的数据结构和模块

3.25个英文单词学习

越努力越幸运！坚持，努力，加油。共勉～

 
序号481 的内容是: #每天进步一点点# 
1.继续Jenkins学习(老徐录制的Jenkins视频)。
2.百人计划分享。
3.英语流利说 上打卡5分钟。

 
序号482 的内容是: #每天进步一点点#  
20180404
补昨日复盘
1.时间安排太满，如果出现突发任务，会导致其他任务未完成，以后至少留1个小时的余度
2.gitlab学习，熟悉了一些基本指令
今日计划
1.梳理本月的书单，每天回家路上固定看书
2.gitlab项目管理方式学习

 
序号483 的内容是: #今日复盘# 
1.MySQL继续学习了事务处理和索引
2.git安装OK

git 安装步骤和遇到的问题点 - 简书
3.时间管理作业已交

#每天进步一点点# 
1.MySQL继续学习索引和视图部分
2.流程提交
3.老徐课

 
序号484 的内容是: #每天进步一点点#  
1.抽时间继续看http。
2.Python学习一节。

 
序号485 的内容是: #每天进步一点点# 
1、工作:和第三方支付机构协调技术对接问题，并完成常规版本测试。准备新版本测试资料
2、《Google的测试之道》TE部分的ACC分析
3、技术:markdown实际应用、Python编程题两道
4、其他:梳理自己写的脚本

 
序号486 的内容是: 今日复盘:
1.听完英语PK台17-12-18
2.学习Python至3.4
3.听完刘媛媛的控制情绪这一课
4.晚上听了老徐快聊的分享~
#每天进步一点点# #今日复盘#

 
序号487 的内容是: #每天进步一点点# 
1、测试公司十八周年活动H5页面；
2、Python + unittest + request设计接口测试用例，计划完成a板块共计3个接口的用例设计；
需改进和学习的方面：
1、优化一下接口用例的设计，逻辑和测试数据的分离；
2、最近一个月由于加班太严重，对时间管理有些顾此失彼：
1）今后在工作过程中要尽量避免一些没有效率的沟通，如自己协调不了的资源，及时向技术总监提出要求，自己在下面忙太累没有效率；
2）需求评审阶段流程需优化，目前是有些需求尚不明确，产品就召开需求评审会议，导致要花费大量时间和开发和测试沟通讨论；

加一条招聘信息：上海钢联电子商务股份有限公司，坐标：上海-宝山
测试工程师：
岗位职责：
1、负责黑盒测试；
2、负责测试计划和测试用例的编写、参与软件需求评审；
3、负责软件产品功能测试的执行；
4、跟踪缺陷状态，并提交缺陷报告；
5、对执行的测试活动进行总结；
6、完成领导交代的其他工作；
任职要求：
1、本科及以上学历，计算机相关专业，有2年及以上测试工作经验；
2、熟悉敏捷开发流程；
3、熟悉测试管理工具；
4、乐于钻研技术，诚实、正值、客观，有良好的团队合作精神，具有良好的沟通能力；
5、掌握一定的编程语言和数据库应用经验者优先。

自动化测试工程师：
岗位职责：
1、负责黑盒测试、自动化测试及性能测试；有app、C/S架构自动化相关经验
2、负责测试计划和测试用例的编写、参与软件需求评审；
3、负责软件产品功能、性能测试的执行；
4、跟踪缺陷状态，并提交缺陷报告；
5、对执行的测试活动进行总结；
6、完成领导交代的其他工作；
任职要求：
1、本科及以上学历，计算机相关专业，有2年及以上测试工作经验，至少1年app或C/S自动化经验；
2、熟悉敏捷开发流程；
3、熟悉自动化测试工具和测试管理工具；
4、乐于钻研技术，诚实、正值、客观，有良好的团队合作精神，具有良好的沟通能力；
5、掌握一定的编程语言和数据库应用经验者优先。

 
序号488 的内容是: #每天进步一点点# 
昨日整理
休息天比较懈怠，只做了英语练习
今日计划
1、工作，没啥好说的
2、英语30分，每天必练
3、消防课程直播两节课 3h
4、老徐百人计划课程 2h

 
序号489 的内容是: #每天进步一点点#  
1.熟悉功能，准备环境
2.确定小组测试方向

 




