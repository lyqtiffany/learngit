'''1、selenium中如何判断元素是否存在
    匹配元素列表，如果列表为空，则元素不存在，反之，元素存在
2、selenium中如何保证操作成功率
    添加元素等待
    有时候会发生代码运行，一会成功，一会失败，但是debug每次都能运行成功，加个sleep
    使用 try 的方式，尝试不同的定位手段，id，name，css，xpath，第一种不行就尝试第二种
    如果点击偶尔会无效，在操作前加个sleep或者是鼠标悬停
    扩大被操作元素的面积

    高质量的自动化测试，不是只有测试人员去保证的，开发人员规范的开发习惯也很重要
    我们在元素定位的时候，尽量使用相对定位，这样能减少很多元素受页面影响带来的变化

3、如何提高selenium脚本的执行速度
    selenium脚本执行速度影响因素：
            网速、操作步骤的繁琐程度、页面的加载速度
            我们在脚本中设置的等待时间
    一般来说，我们不单方面追求运行速度，一定程度上，愿意牺牲速度来保证自动化执行的稳定性
    基于以上，我们可以从以下角度提升速度
        1、减少操作步骤，比如经过三四步才能打开的网页，我们可以直接访问网址
        2、适当中断页面加载，如果页面加载内容过多
        3、用显示等待，代替隐式等待

4、用例运行过程中，经常出现，有时能通过，有时不能通过的情况，这时候该怎么提升稳定性呢
    在容易出错的地方做专门处理
    比如等待、try异常处理
    我们也要对这些错误的地方做专门的分析，有针对性的解决问题
        1、网速问题，
            ①能不能钞能力加网速
            ②开发想办法提升性能
            ③特俗情况，经协商，响应时间在接受范围内，这时候牺牲自动化运行时间，多等一等
        2、前端开发不规范
            ①前端自查
            ②自身代码使用等待、鼠标操作等方式，提升操作成功的概率
        3、用例之间相互影响
            ①降低用例间依赖，测试用例之间相互独立，各不影响

5、你们公司是怎么做自动化的
    我们的自动化用例是每天凌晨5定时运行，然后群发邮件到测试组相关人员
    我们是将一些必须执行的测试用例(比如回归、比如冒烟)，形成自动化，在任何业务发布之前执行一次
    你可以适当去记住公司里边的几个必须走的用例，说出来，

6、你们公司ui自动化做数据校验嘛
    不做。ui自动化不需要，但是接口处自动化需要。ui自动化不为接口测试没做的事情补锅
    要做，都是放在接口测试里边

7、元素定位有哪些手段，你最偏爱哪种方式
    有id，优先使用id定位
    其次是name属性定位
    再其次是css selector定位
    最次是xpath定位
    至于 class name、link text等，基本不会用到

8、页面上有些元素，他的属性是变化的，如何定位
    通过css或者xpath，进行父级、子级、同级元素定位、下标

9、webdriver的原理是什么
    python操作webdriver，webdriver将操作反馈给浏览器
    浏览器有api供webdriver使用，webdriver操作浏览器之后，将结果反馈
    python收到反馈，将结果暴露出来

10、什么是po模式，简单描述一下po模式
    page object，页面对象
    就将页面封装成类，实际上是面向对象思想在ui自动化上的一个应用
    我们将页面封装成一个个的class，需要用到的元素也封装进去，以供调用
    降低维护成本，将元素封装，与元素操作抽离开来
    然后将我们day7的结构大致描述一遍即可

11、你觉得自动化最大的缺陷是什么
    成本高
    不稳定
    不易维护
    投入产出比容易为负

12、自动化的测试用例从哪来
    从手工测试中来，选取核心的、必须执行的、且易于实现、手工用例


手工测试
    手工功能测试--》点点点的
    手工接口测试--》用postman的

自动化测试
    功能自动化
        ui自动化
        接口自动化
    性能自动化
'''